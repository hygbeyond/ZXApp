   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"fmc_rw.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FMC_Write,"ax",%progbits
  20              		.align	1
  21              		.code	16
  22              		.thumb_func
  24              	FMC_Write:
  25              	.LFB22:
  26              		.file 1 "./bsp/inc/FMC.h"
   1:./bsp/inc/FMC.h **** /**************************************************************************//**
   2:./bsp/inc/FMC.h ****  * @file     FMC.h
   3:./bsp/inc/FMC.h ****  * @version  V3.0
   4:./bsp/inc/FMC.h ****  * $Revision: 6 $
   5:./bsp/inc/FMC.h ****  * $Date: 14/07/22 3:59p $
   6:./bsp/inc/FMC.h ****  * @brief    NUC131 Series Flash Memory Controller Driver Header File
   7:./bsp/inc/FMC.h ****  *
   8:./bsp/inc/FMC.h ****  * @note
   9:./bsp/inc/FMC.h ****  * Copyright (C) 2014 Nuvoton Technology Corp. All rights reserved.
  10:./bsp/inc/FMC.h ****  *
  11:./bsp/inc/FMC.h ****  ******************************************************************************/
  12:./bsp/inc/FMC.h **** #ifndef __FMC_H__
  13:./bsp/inc/FMC.h **** #define __FMC_H__
  14:./bsp/inc/FMC.h **** 
  15:./bsp/inc/FMC.h **** #include "NUC131.h"
  16:./bsp/inc/FMC.h **** 
  17:./bsp/inc/FMC.h **** #ifdef __cplusplus
  18:./bsp/inc/FMC.h **** extern "C"
  19:./bsp/inc/FMC.h **** {
  20:./bsp/inc/FMC.h **** #endif
  21:./bsp/inc/FMC.h **** 
  22:./bsp/inc/FMC.h **** 
  23:./bsp/inc/FMC.h **** /** @addtogroup NUC131_Device_Driver NUC131 Device Driver
  24:./bsp/inc/FMC.h ****   @{
  25:./bsp/inc/FMC.h **** */
  26:./bsp/inc/FMC.h **** 
  27:./bsp/inc/FMC.h **** /** @addtogroup NUC131_FMC_Driver FMC Driver
  28:./bsp/inc/FMC.h ****   @{
  29:./bsp/inc/FMC.h **** */
  30:./bsp/inc/FMC.h **** 
  31:./bsp/inc/FMC.h **** /** @addtogroup NUC131_FMC_EXPORTED_CONSTANTS FMC Exported Constants
  32:./bsp/inc/FMC.h ****   @{
  33:./bsp/inc/FMC.h **** */
  34:./bsp/inc/FMC.h **** 
  35:./bsp/inc/FMC.h **** 
  36:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  37:./bsp/inc/FMC.h **** /* Define Base Address                                                                             
  38:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  39:./bsp/inc/FMC.h **** #define FMC_APROM_BASE          0x00000000UL    /*!< APROM  Base Address         */
  40:./bsp/inc/FMC.h **** #define FMC_LDROM_BASE          0x00100000UL    /*!< LDROM  Base Address         */
  41:./bsp/inc/FMC.h **** #define FMC_CONFIG_BASE         0x00300000UL    /*!< CONFIG Base Address         */
  42:./bsp/inc/FMC.h **** 
  43:./bsp/inc/FMC.h **** #define FMC_FLASH_PAGE_SIZE     0x200           /*!< Flash Page Size (512 Bytes) */
  44:./bsp/inc/FMC.h **** #define FMC_LDROM_SIZE          0x1000          /*!< LDROM Size (4K Bytes)       */
  45:./bsp/inc/FMC.h **** 
  46:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  47:./bsp/inc/FMC.h **** /*  ISPCON constant definitions                                                                    
  48:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  49:./bsp/inc/FMC.h **** #define FMC_ISPCON_BS_LDROM     0x2     /*!< ISPCON setting to select to boot from LDROM */
  50:./bsp/inc/FMC.h **** #define FMC_ISPCON_BS_APROM     0x0     /*!< ISPCON setting to select to boot from APROM */
  51:./bsp/inc/FMC.h **** 
  52:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  53:./bsp/inc/FMC.h **** /*  ISPCMD constant definitions                                                                    
  54:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  55:./bsp/inc/FMC.h **** #define FMC_ISPCMD_READ        0x00     /*!< ISP Command: Read Flash       */
  56:./bsp/inc/FMC.h **** #define FMC_ISPCMD_PROGRAM     0x21     /*!< ISP Command: Program Flash    */
  57:./bsp/inc/FMC.h **** #define FMC_ISPCMD_PAGE_ERASE  0x22     /*!< ISP Command: Page Erase Flash */
  58:./bsp/inc/FMC.h **** #define FMC_ISPCMD_VECMAP      0x2e     /*!< ISP Command: Set VECMAP       */
  59:./bsp/inc/FMC.h **** #define FMC_ISPCMD_READ_UID    0x04     /*!< ISP Command: Read Unique ID   */
  60:./bsp/inc/FMC.h **** #define FMC_ISPCMD_READ_CID    0x0B     /*!< ISP Command: Read Company ID   */
  61:./bsp/inc/FMC.h **** #define FMC_ISPCMD_READ_DID    0x0C     /*!< ISP Command: Read Device ID    */
  62:./bsp/inc/FMC.h **** 
  63:./bsp/inc/FMC.h **** 
  64:./bsp/inc/FMC.h **** /*@}*/ /* end of group NUC131_FMC_EXPORTED_CONSTANTS */
  65:./bsp/inc/FMC.h **** 
  66:./bsp/inc/FMC.h **** /** @addtogroup NUC131_FMC_EXPORTED_FUNCTIONS FMC Exported Functions
  67:./bsp/inc/FMC.h ****   @{
  68:./bsp/inc/FMC.h **** */
  69:./bsp/inc/FMC.h **** 
  70:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  71:./bsp/inc/FMC.h **** /*  FMC Macro Definitions                                                                          
  72:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
  73:./bsp/inc/FMC.h **** /**
  74:./bsp/inc/FMC.h ****  * @brief      Enable ISP Function
  75:./bsp/inc/FMC.h ****  *
  76:./bsp/inc/FMC.h ****  * @param      None
  77:./bsp/inc/FMC.h ****  *
  78:./bsp/inc/FMC.h ****  * @return     None
  79:./bsp/inc/FMC.h ****  *
  80:./bsp/inc/FMC.h ****  * @details    This function will set ISPEN bit of ISPCON control register to enable ISP function.
  81:./bsp/inc/FMC.h ****  *
  82:./bsp/inc/FMC.h ****  */
  83:./bsp/inc/FMC.h **** #define FMC_ENABLE_ISP()          (FMC->ISPCON |=  FMC_ISPCON_ISPEN_Msk)
  84:./bsp/inc/FMC.h **** 
  85:./bsp/inc/FMC.h **** 
  86:./bsp/inc/FMC.h **** /**
  87:./bsp/inc/FMC.h ****  * @brief      Disable ISP Function
  88:./bsp/inc/FMC.h ****  *
  89:./bsp/inc/FMC.h ****  * @param      None
  90:./bsp/inc/FMC.h ****  *
  91:./bsp/inc/FMC.h ****  * @return     None
  92:./bsp/inc/FMC.h ****  *
  93:./bsp/inc/FMC.h ****  * @details    This function will clear ISPEN bit of ISPCON control register to disable ISP functio
  94:./bsp/inc/FMC.h ****  *
  95:./bsp/inc/FMC.h ****  */
  96:./bsp/inc/FMC.h **** #define FMC_DISABLE_ISP()         (FMC->ISPCON &= ~FMC_ISPCON_ISPEN_Msk)
  97:./bsp/inc/FMC.h **** 
  98:./bsp/inc/FMC.h **** 
  99:./bsp/inc/FMC.h **** /**
 100:./bsp/inc/FMC.h ****  * @brief      Enable LDROM Update Function
 101:./bsp/inc/FMC.h ****  *
 102:./bsp/inc/FMC.h ****  * @param      None
 103:./bsp/inc/FMC.h ****  *
 104:./bsp/inc/FMC.h ****  * @return     None
 105:./bsp/inc/FMC.h ****  *
 106:./bsp/inc/FMC.h ****  * @details    This function will set LDUEN bit of ISPCON control register to enable LDROM update f
 107:./bsp/inc/FMC.h ****  *             User needs to set LDUEN bit before they can update LDROM.
 108:./bsp/inc/FMC.h ****  *
 109:./bsp/inc/FMC.h ****  */
 110:./bsp/inc/FMC.h **** #define FMC_ENABLE_LD_UPDATE()    (FMC->ISPCON |=  FMC_ISPCON_LDUEN_Msk)
 111:./bsp/inc/FMC.h **** 
 112:./bsp/inc/FMC.h **** 
 113:./bsp/inc/FMC.h **** 
 114:./bsp/inc/FMC.h **** /**
 115:./bsp/inc/FMC.h ****  * @brief      Disable LDROM Update Function
 116:./bsp/inc/FMC.h ****  *
 117:./bsp/inc/FMC.h ****  * @param      None
 118:./bsp/inc/FMC.h ****  *
 119:./bsp/inc/FMC.h ****  * @return     None
 120:./bsp/inc/FMC.h ****  *
 121:./bsp/inc/FMC.h ****  * @details    This function will set ISPEN bit of ISPCON control register to disable LDROM update 
 122:./bsp/inc/FMC.h ****  *
 123:./bsp/inc/FMC.h ****  */
 124:./bsp/inc/FMC.h **** #define FMC_DISABLE_LD_UPDATE()   (FMC->ISPCON &= ~FMC_ISPCON_LDUEN_Msk)  /*!< Disable LDROM Update
 125:./bsp/inc/FMC.h **** 
 126:./bsp/inc/FMC.h **** 
 127:./bsp/inc/FMC.h **** 
 128:./bsp/inc/FMC.h **** /**
 129:./bsp/inc/FMC.h ****  * @brief      Enable User Configuration Update Function
 130:./bsp/inc/FMC.h ****  *
 131:./bsp/inc/FMC.h ****  * @param      None
 132:./bsp/inc/FMC.h ****  *
 133:./bsp/inc/FMC.h ****  * @return     None
 134:./bsp/inc/FMC.h ****  *
 135:./bsp/inc/FMC.h ****  * @details    This function will set CFGUEN bit of ISPCON control register to enable User Configur
 136:./bsp/inc/FMC.h ****  *             User needs to set CFGUEN bit before they can update User Configuration area.
 137:./bsp/inc/FMC.h ****  *
 138:./bsp/inc/FMC.h ****  */
 139:./bsp/inc/FMC.h **** #define FMC_ENABLE_CFG_UPDATE()   (FMC->ISPCON |=  FMC_ISPCON_CFGUEN_Msk)
 140:./bsp/inc/FMC.h **** 
 141:./bsp/inc/FMC.h **** /**
 142:./bsp/inc/FMC.h ****  * @brief      Disable User Configuration Update Function
 143:./bsp/inc/FMC.h ****  *
 144:./bsp/inc/FMC.h ****  * @param      None
 145:./bsp/inc/FMC.h ****  *
 146:./bsp/inc/FMC.h ****  * @return     None
 147:./bsp/inc/FMC.h ****  *
 148:./bsp/inc/FMC.h ****  * @details    This function will clear CFGUEN bit of ISPCON control register to disable User Confi
 149:./bsp/inc/FMC.h ****  *
 150:./bsp/inc/FMC.h ****  */
 151:./bsp/inc/FMC.h **** #define FMC_DISABLE_CFG_UPDATE()  (FMC->ISPCON &= ~FMC_ISPCON_CFGUEN_Msk)           /*!< Disable CO
 152:./bsp/inc/FMC.h **** 
 153:./bsp/inc/FMC.h **** 
 154:./bsp/inc/FMC.h **** /**
 155:./bsp/inc/FMC.h ****  * @brief      Enable APROM Update Function
 156:./bsp/inc/FMC.h ****  *
 157:./bsp/inc/FMC.h ****  * @param      None
 158:./bsp/inc/FMC.h ****  *
 159:./bsp/inc/FMC.h ****  * @return     None
 160:./bsp/inc/FMC.h ****  *
 161:./bsp/inc/FMC.h ****  * @details    This function will set APUEN bit of ISPCON control register to enable APROM update f
 162:./bsp/inc/FMC.h ****  *             User needs to set APUEN bit before they can update APROM in APROM boot mode.
 163:./bsp/inc/FMC.h ****  *
 164:./bsp/inc/FMC.h ****  */
 165:./bsp/inc/FMC.h **** #define FMC_ENABLE_AP_UPDATE()    (FMC->ISPCON |=  FMC_ISPCON_APUEN_Msk)
 166:./bsp/inc/FMC.h **** 
 167:./bsp/inc/FMC.h **** 
 168:./bsp/inc/FMC.h **** /**
 169:./bsp/inc/FMC.h ****  * @brief      Disable APROM Update Function
 170:./bsp/inc/FMC.h ****  *
 171:./bsp/inc/FMC.h ****  * @param      None
 172:./bsp/inc/FMC.h ****  *
 173:./bsp/inc/FMC.h ****  * @return     None
 174:./bsp/inc/FMC.h ****  *
 175:./bsp/inc/FMC.h ****  * @details    This function will clear APUEN bit of ISPCON control register to disable APROM updat
 176:./bsp/inc/FMC.h ****  *
 177:./bsp/inc/FMC.h ****  */
 178:./bsp/inc/FMC.h **** #define FMC_DISABLE_AP_UPDATE()   (FMC->ISPCON &= ~FMC_ISPCON_APUEN_Msk)            /*!< Disable AP
 179:./bsp/inc/FMC.h **** 
 180:./bsp/inc/FMC.h **** /**
 181:./bsp/inc/FMC.h ****  * @brief      Get ISP fail flag
 182:./bsp/inc/FMC.h ****  *
 183:./bsp/inc/FMC.h ****  * @param      None
 184:./bsp/inc/FMC.h ****  *
 185:./bsp/inc/FMC.h ****  * @retval     0 Previous ISP command execution result is successful
 186:./bsp/inc/FMC.h ****  * @retval     1 Previous ISP command execution result is fail
 187:./bsp/inc/FMC.h ****  *
 188:./bsp/inc/FMC.h ****  * @details    ISPFF flag of ISPCON is used to indicate ISP command success or fail.
 189:./bsp/inc/FMC.h ****  *             This function will return the ISPFF flag to identify ISP command OK or fail.
 190:./bsp/inc/FMC.h ****  *
 191:./bsp/inc/FMC.h ****  */
 192:./bsp/inc/FMC.h **** #define FMC_GET_FAIL_FLAG()       ((FMC->ISPCON & FMC_ISPCON_ISPFF_Msk) ? 1 : 0)
 193:./bsp/inc/FMC.h **** 
 194:./bsp/inc/FMC.h **** 
 195:./bsp/inc/FMC.h **** /**
 196:./bsp/inc/FMC.h ****  * @brief      Select booting from APROM
 197:./bsp/inc/FMC.h ****  *
 198:./bsp/inc/FMC.h ****  * @param      None
 199:./bsp/inc/FMC.h ****  *
 200:./bsp/inc/FMC.h ****  * @return     None
 201:./bsp/inc/FMC.h ****  *
 202:./bsp/inc/FMC.h ****  * @details    If MCU is working without IAP, user need to set BS bit of ISPCON and reset CPU to ex
 203:./bsp/inc/FMC.h ****  *             This function is used to set BS bit of ISPCON to boot to APROM.
 204:./bsp/inc/FMC.h ****  *
 205:./bsp/inc/FMC.h ****  * @note       To valid new BS bit setting, user also need to trigger CPU reset or System Reset Req
 206:./bsp/inc/FMC.h ****  *
 207:./bsp/inc/FMC.h ****  */
 208:./bsp/inc/FMC.h **** #define FMC_SET_APROM_BOOT()      (FMC->ISPCON &= ~FMC_ISPCON_BS_Msk)
 209:./bsp/inc/FMC.h **** 
 210:./bsp/inc/FMC.h **** /**
 211:./bsp/inc/FMC.h ****  * @brief      Select booting from APROM
 212:./bsp/inc/FMC.h ****  *
 213:./bsp/inc/FMC.h ****  * @param      None
 214:./bsp/inc/FMC.h ****  *
 215:./bsp/inc/FMC.h ****  * @return     None
 216:./bsp/inc/FMC.h ****  *
 217:./bsp/inc/FMC.h ****  * @details    If MCU is working without IAP, user need to set/clear BS bit of ISPCON and reset CPU
 218:./bsp/inc/FMC.h ****  *             This function is used to clear BS bit of ISPCON to boot to LDROM.
 219:./bsp/inc/FMC.h ****  *
 220:./bsp/inc/FMC.h ****  * @note       To valid new BS bit setting, user also need to trigger CPU reset or System Reset Req
 221:./bsp/inc/FMC.h ****  *
 222:./bsp/inc/FMC.h ****  */
 223:./bsp/inc/FMC.h **** #define FMC_SET_LDROM_BOOT()      (FMC->ISPCON |= FMC_ISPCON_BS_Msk)
 224:./bsp/inc/FMC.h **** 
 225:./bsp/inc/FMC.h **** 
 226:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
 227:./bsp/inc/FMC.h **** /* inline functions                                                                                
 228:./bsp/inc/FMC.h **** /*-------------------------------------------------------------------------------------------------
 229:./bsp/inc/FMC.h **** /**
 230:./bsp/inc/FMC.h ****  * @brief      Program 32-bit data into specified address of flash
 231:./bsp/inc/FMC.h ****  *
 232:./bsp/inc/FMC.h ****  * @param[in]  u32addr  Flash address include APROM, LDROM, Data Flash, and CONFIG
 233:./bsp/inc/FMC.h ****  * @param[in]  u32data  32-bit Data to program
 234:./bsp/inc/FMC.h ****  *
 235:./bsp/inc/FMC.h ****  * @return     None
 236:./bsp/inc/FMC.h ****  *
 237:./bsp/inc/FMC.h ****  * @details    To program word data into Flash include APROM, LDROM, Data Flash, and CONFIG.
 238:./bsp/inc/FMC.h ****  *             The corresponding functions in CONFIG are listed in FMC section of Technical Referen
 239:./bsp/inc/FMC.h ****  *
 240:./bsp/inc/FMC.h ****  */
 241:./bsp/inc/FMC.h **** static __INLINE void FMC_Write(uint32_t u32addr, uint32_t u32data)
 242:./bsp/inc/FMC.h **** {
  27              		.loc 1 242 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 243:./bsp/inc/FMC.h ****     FMC->ISPCMD = FMC_ISPCMD_PROGRAM;   /* Set ISP Command Code */
  33              		.loc 1 243 0
  34 0000 2122     		movs	r2, #33
  35 0002 064B     		ldr	r3, .L5
  36 0004 DA60     		str	r2, [r3, #12]
 244:./bsp/inc/FMC.h ****     FMC->ISPADR = u32addr;              /* Set Target ROM Address. The address must be word alignme
 245:./bsp/inc/FMC.h ****     FMC->ISPDAT = u32data;              /* Set Data to Program */
 246:./bsp/inc/FMC.h ****     FMC->ISPTRG = 0x1;                  /* Trigger to start ISP procedure */
  37              		.loc 1 246 0
  38 0006 203A     		subs	r2, r2, #32
 244:./bsp/inc/FMC.h ****     FMC->ISPADR = u32addr;              /* Set Target ROM Address. The address must be word alignme
  39              		.loc 1 244 0
  40 0008 5860     		str	r0, [r3, #4]
 245:./bsp/inc/FMC.h ****     FMC->ISPTRG = 0x1;                  /* Trigger to start ISP procedure */
  41              		.loc 1 245 0
  42 000a 9960     		str	r1, [r3, #8]
  43              		.loc 1 246 0
  44 000c 1A61     		str	r2, [r3, #16]
  45              	.LBB12:
  46              	.LBB13:
  47              		.file 2 "./bsp/core_cm0.h"
   1:./bsp/core_cm0.h **** /**************************************************************************//**
   2:./bsp/core_cm0.h ****  * @file     core_cm0.h
   3:./bsp/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:./bsp/core_cm0.h ****  * @version  V1.30
   5:./bsp/core_cm0.h ****  * @date     30. October 2009
   6:./bsp/core_cm0.h ****  *
   7:./bsp/core_cm0.h ****  * @note
   8:./bsp/core_cm0.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./bsp/core_cm0.h ****  *
  10:./bsp/core_cm0.h ****  * @par
  11:./bsp/core_cm0.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./bsp/core_cm0.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./bsp/core_cm0.h ****  * within development tools that are supporting such ARM based processors. 
  14:./bsp/core_cm0.h ****  *
  15:./bsp/core_cm0.h ****  * @par
  16:./bsp/core_cm0.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./bsp/core_cm0.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./bsp/core_cm0.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./bsp/core_cm0.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./bsp/core_cm0.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./bsp/core_cm0.h ****  *
  22:./bsp/core_cm0.h ****  ******************************************************************************/
  23:./bsp/core_cm0.h **** 
  24:./bsp/core_cm0.h **** #ifndef __CM0_CORE_H__
  25:./bsp/core_cm0.h **** #define __CM0_CORE_H__
  26:./bsp/core_cm0.h **** 
  27:./bsp/core_cm0.h **** /** @addtogroup CMSIS_CM0_core_LintCinfiguration CMSIS CM0 Core Lint Configuration
  28:./bsp/core_cm0.h ****  *
  29:./bsp/core_cm0.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./bsp/core_cm0.h ****  *   - not yet checked
  31:./bsp/core_cm0.h ****  * .
  32:./bsp/core_cm0.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  33:./bsp/core_cm0.h ****  *
  34:./bsp/core_cm0.h ****  */
  35:./bsp/core_cm0.h **** 
  36:./bsp/core_cm0.h **** 
  37:./bsp/core_cm0.h **** /** @addtogroup CMSIS_CM0_core_definitions CM0 Core Definitions
  38:./bsp/core_cm0.h ****   This file defines all structures and symbols for CMSIS core:
  39:./bsp/core_cm0.h ****     - CMSIS version number
  40:./bsp/core_cm0.h ****     - Cortex-M core registers and bitfields
  41:./bsp/core_cm0.h ****     - Cortex-M core peripheral base address
  42:./bsp/core_cm0.h ****   @{
  43:./bsp/core_cm0.h ****  */
  44:./bsp/core_cm0.h **** 
  45:./bsp/core_cm0.h **** #ifdef __cplusplus
  46:./bsp/core_cm0.h ****  extern "C" {
  47:./bsp/core_cm0.h **** #endif 
  48:./bsp/core_cm0.h **** 
  49:./bsp/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  50:./bsp/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  51:./bsp/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16) | __CM0_CMSIS_VERSION_SUB) /*!<
  52:./bsp/core_cm0.h **** 
  53:./bsp/core_cm0.h **** #define __CORTEX_M                (0x00)                                                       /*!<
  54:./bsp/core_cm0.h **** 
  55:./bsp/core_cm0.h **** #include <stdint.h>                           /* Include standard types */
  56:./bsp/core_cm0.h **** 
  57:./bsp/core_cm0.h **** #if defined (__ICCARM__)
  58:./bsp/core_cm0.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  59:./bsp/core_cm0.h **** #endif
  60:./bsp/core_cm0.h **** 
  61:./bsp/core_cm0.h **** 
  62:./bsp/core_cm0.h **** #ifndef __NVIC_PRIO_BITS
  63:./bsp/core_cm0.h ****   #define __NVIC_PRIO_BITS    2               /*!< standard definition for NVIC Priority Bits */
  64:./bsp/core_cm0.h **** #endif
  65:./bsp/core_cm0.h **** 
  66:./bsp/core_cm0.h **** 
  67:./bsp/core_cm0.h **** 
  68:./bsp/core_cm0.h **** 
  69:./bsp/core_cm0.h **** /**
  70:./bsp/core_cm0.h ****  * IO definitions
  71:./bsp/core_cm0.h ****  *
  72:./bsp/core_cm0.h ****  * define access restrictions to peripheral registers
  73:./bsp/core_cm0.h ****  */
  74:./bsp/core_cm0.h **** 
  75:./bsp/core_cm0.h **** #ifdef __cplusplus
  76:./bsp/core_cm0.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
  77:./bsp/core_cm0.h **** #else
  78:./bsp/core_cm0.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
  79:./bsp/core_cm0.h **** #endif
  80:./bsp/core_cm0.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
  81:./bsp/core_cm0.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
  82:./bsp/core_cm0.h **** 
  83:./bsp/core_cm0.h **** /*******************************************************************************
  84:./bsp/core_cm0.h ****  *                 Register Abstraction
  85:./bsp/core_cm0.h ****  ******************************************************************************/
  86:./bsp/core_cm0.h **** /** @addtogroup CMSIS_CM0_core_register CMSIS CM0 Core Register
  87:./bsp/core_cm0.h ****  @{
  88:./bsp/core_cm0.h **** */
  89:./bsp/core_cm0.h **** 
  90:./bsp/core_cm0.h **** 
  91:./bsp/core_cm0.h **** /** @addtogroup CMSIS_CM0_NVIC CMSIS CM0 NVIC
  92:./bsp/core_cm0.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
  93:./bsp/core_cm0.h ****   @{
  94:./bsp/core_cm0.h ****  */
  95:./bsp/core_cm0.h **** typedef struct
  96:./bsp/core_cm0.h **** {
  97:./bsp/core_cm0.h ****   __IO uint32_t ISER[1];                      /*!< (Offset: 0x000) Interrupt Set Enable Register   
  98:./bsp/core_cm0.h ****        uint32_t RESERVED0[31];
  99:./bsp/core_cm0.h ****   __IO uint32_t ICER[1];                      /*!< (Offset: 0x080) Interrupt Clear Enable Register 
 100:./bsp/core_cm0.h ****        uint32_t RSERVED1[31];
 101:./bsp/core_cm0.h ****   __IO uint32_t ISPR[1];                      /*!< (Offset: 0x100) Interrupt Set Pending Register  
 102:./bsp/core_cm0.h ****        uint32_t RESERVED2[31];
 103:./bsp/core_cm0.h ****   __IO uint32_t ICPR[1];                      /*!< (Offset: 0x180) Interrupt Clear Pending Register
 104:./bsp/core_cm0.h ****        uint32_t RESERVED3[31];
 105:./bsp/core_cm0.h ****        uint32_t RESERVED4[64];
 106:./bsp/core_cm0.h ****   __IO uint32_t IPR[8];                       /*!< (Offset: 0x3EC) Interrupt Priority Register     
 107:./bsp/core_cm0.h **** }  NVIC_Type;
 108:./bsp/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_NVIC */
 109:./bsp/core_cm0.h **** 
 110:./bsp/core_cm0.h **** 
 111:./bsp/core_cm0.h **** /** @addtogroup CMSIS_CM0_SCB CMSIS CM0 SCB
 112:./bsp/core_cm0.h ****   memory mapped structure for System Control Block (SCB)
 113:./bsp/core_cm0.h ****   @{
 114:./bsp/core_cm0.h ****  */
 115:./bsp/core_cm0.h **** typedef struct
 116:./bsp/core_cm0.h **** {
 117:./bsp/core_cm0.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 118:./bsp/core_cm0.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 119:./bsp/core_cm0.h ****        uint32_t RESERVED0;                                      
 120:./bsp/core_cm0.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 121:./bsp/core_cm0.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 122:./bsp/core_cm0.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 123:./bsp/core_cm0.h ****        uint32_t RESERVED1;                                      
 124:./bsp/core_cm0.h ****   __IO uint32_t SHP[2];                       /*!< Offset: 0x1C  System Handlers Priority Registers
 125:./bsp/core_cm0.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 126:./bsp/core_cm0.h ****        uint32_t RESERVED2[2];                                   
 127:./bsp/core_cm0.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 128:./bsp/core_cm0.h **** } SCB_Type;                                                
 129:./bsp/core_cm0.h **** 
 130:./bsp/core_cm0.h **** /* SCB CPUID Register Definitions */
 131:./bsp/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 132:./bsp/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 133:./bsp/core_cm0.h **** 
 134:./bsp/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 135:./bsp/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 136:./bsp/core_cm0.h **** 
 137:./bsp/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 138:./bsp/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFul << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 139:./bsp/core_cm0.h **** 
 140:./bsp/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 141:./bsp/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 142:./bsp/core_cm0.h **** 
 143:./bsp/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 144:./bsp/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 145:./bsp/core_cm0.h **** 
 146:./bsp/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 147:./bsp/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 148:./bsp/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 149:./bsp/core_cm0.h **** 
 150:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 151:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 152:./bsp/core_cm0.h **** 
 153:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 154:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 155:./bsp/core_cm0.h **** 
 156:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 157:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 158:./bsp/core_cm0.h **** 
 159:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 160:./bsp/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 161:./bsp/core_cm0.h **** 
 162:./bsp/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 163:./bsp/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 164:./bsp/core_cm0.h **** 
 165:./bsp/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 166:./bsp/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 167:./bsp/core_cm0.h **** 
 168:./bsp/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 169:./bsp/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 170:./bsp/core_cm0.h **** 
 171:./bsp/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 172:./bsp/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 173:./bsp/core_cm0.h **** 
 174:./bsp/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 175:./bsp/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 176:./bsp/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 177:./bsp/core_cm0.h **** 
 178:./bsp/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 179:./bsp/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 180:./bsp/core_cm0.h **** 
 181:./bsp/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 182:./bsp/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 183:./bsp/core_cm0.h **** 
 184:./bsp/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 185:./bsp/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 186:./bsp/core_cm0.h **** 
 187:./bsp/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 188:./bsp/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 189:./bsp/core_cm0.h **** 
 190:./bsp/core_cm0.h **** /* SCB System Control Register Definitions */
 191:./bsp/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 192:./bsp/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 193:./bsp/core_cm0.h **** 
 194:./bsp/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 195:./bsp/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 196:./bsp/core_cm0.h **** 
 197:./bsp/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 198:./bsp/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 199:./bsp/core_cm0.h **** 
 200:./bsp/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 201:./bsp/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 202:./bsp/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 203:./bsp/core_cm0.h **** 
 204:./bsp/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 205:./bsp/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 206:./bsp/core_cm0.h **** 
 207:./bsp/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 208:./bsp/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 209:./bsp/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 210:./bsp/core_cm0.h **** 
 211:./bsp/core_cm0.h **** /* SCB Debug Fault Status Register Definitions */
 212:./bsp/core_cm0.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 213:./bsp/core_cm0.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 214:./bsp/core_cm0.h **** 
 215:./bsp/core_cm0.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 216:./bsp/core_cm0.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 217:./bsp/core_cm0.h **** 
 218:./bsp/core_cm0.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 219:./bsp/core_cm0.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 220:./bsp/core_cm0.h **** 
 221:./bsp/core_cm0.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 222:./bsp/core_cm0.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 223:./bsp/core_cm0.h **** 
 224:./bsp/core_cm0.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 225:./bsp/core_cm0.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 226:./bsp/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_SCB */
 227:./bsp/core_cm0.h **** 
 228:./bsp/core_cm0.h **** 
 229:./bsp/core_cm0.h **** /** @addtogroup CMSIS_CM0_SysTick CMSIS CM0 SysTick
 230:./bsp/core_cm0.h ****   memory mapped structure for SysTick
 231:./bsp/core_cm0.h ****   @{
 232:./bsp/core_cm0.h ****  */
 233:./bsp/core_cm0.h **** typedef struct
 234:./bsp/core_cm0.h **** {
 235:./bsp/core_cm0.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 236:./bsp/core_cm0.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 237:./bsp/core_cm0.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 238:./bsp/core_cm0.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 239:./bsp/core_cm0.h **** } SysTick_Type;
 240:./bsp/core_cm0.h **** 
 241:./bsp/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 242:./bsp/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 243:./bsp/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 244:./bsp/core_cm0.h **** 
 245:./bsp/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 246:./bsp/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 247:./bsp/core_cm0.h **** 
 248:./bsp/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 249:./bsp/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 250:./bsp/core_cm0.h **** 
 251:./bsp/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 252:./bsp/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 253:./bsp/core_cm0.h **** 
 254:./bsp/core_cm0.h **** /* SysTick Reload Register Definitions */
 255:./bsp/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 256:./bsp/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 257:./bsp/core_cm0.h **** 
 258:./bsp/core_cm0.h **** /* SysTick Current Register Definitions */
 259:./bsp/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 260:./bsp/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 261:./bsp/core_cm0.h **** 
 262:./bsp/core_cm0.h **** /* SysTick Calibration Register Definitions */
 263:./bsp/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 264:./bsp/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 265:./bsp/core_cm0.h **** 
 266:./bsp/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 267:./bsp/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 268:./bsp/core_cm0.h **** 
 269:./bsp/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 270:./bsp/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 271:./bsp/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_SysTick */
 272:./bsp/core_cm0.h **** 
 273:./bsp/core_cm0.h **** 
 274:./bsp/core_cm0.h **** /** @addtogroup CMSIS_CM0_CoreDebug CMSIS CM0 Core Debug
 275:./bsp/core_cm0.h ****   memory mapped structure for Core Debug Register
 276:./bsp/core_cm0.h ****   @{
 277:./bsp/core_cm0.h ****  */
 278:./bsp/core_cm0.h **** typedef struct
 279:./bsp/core_cm0.h **** {
 280:./bsp/core_cm0.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 281:./bsp/core_cm0.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 282:./bsp/core_cm0.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 283:./bsp/core_cm0.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 284:./bsp/core_cm0.h **** } CoreDebug_Type;
 285:./bsp/core_cm0.h **** 
 286:./bsp/core_cm0.h **** /* Debug Halting Control and Status Register */
 287:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 288:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 289:./bsp/core_cm0.h **** 
 290:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 291:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 292:./bsp/core_cm0.h **** 
 293:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 294:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 295:./bsp/core_cm0.h **** 
 296:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 297:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 298:./bsp/core_cm0.h **** 
 299:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 300:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 301:./bsp/core_cm0.h **** 
 302:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 303:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 304:./bsp/core_cm0.h **** 
 305:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 306:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 307:./bsp/core_cm0.h **** 
 308:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 309:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 310:./bsp/core_cm0.h **** 
 311:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 312:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 313:./bsp/core_cm0.h **** 
 314:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 315:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 316:./bsp/core_cm0.h **** 
 317:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 318:./bsp/core_cm0.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 319:./bsp/core_cm0.h **** 
 320:./bsp/core_cm0.h **** /* Debug Core Register Selector Register */
 321:./bsp/core_cm0.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 322:./bsp/core_cm0.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 323:./bsp/core_cm0.h **** 
 324:./bsp/core_cm0.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 325:./bsp/core_cm0.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 326:./bsp/core_cm0.h **** 
 327:./bsp/core_cm0.h **** /* Debug Exception and Monitor Control Register */
 328:./bsp/core_cm0.h **** #define CoreDebug_DEMCR_DWTENA_Pos         24                                             /*!< Core
 329:./bsp/core_cm0.h **** #define CoreDebug_DEMCR_DWTENA_Msk         (1ul << CoreDebug_DEMCR_DWTENA_Pos)            /*!< Core
 330:./bsp/core_cm0.h **** 
 331:./bsp/core_cm0.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 332:./bsp/core_cm0.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 333:./bsp/core_cm0.h **** 
 334:./bsp/core_cm0.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 335:./bsp/core_cm0.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 336:./bsp/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_CoreDebug */
 337:./bsp/core_cm0.h **** 
 338:./bsp/core_cm0.h **** 
 339:./bsp/core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 340:./bsp/core_cm0.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 341:./bsp/core_cm0.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 342:./bsp/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 343:./bsp/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 344:./bsp/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 345:./bsp/core_cm0.h **** 
 346:./bsp/core_cm0.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 347:./bsp/core_cm0.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 348:./bsp/core_cm0.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 349:./bsp/core_cm0.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 350:./bsp/core_cm0.h **** 
 351:./bsp/core_cm0.h **** /*@}*/ /* end of group CMSIS_CM0_core_register */
 352:./bsp/core_cm0.h **** 
 353:./bsp/core_cm0.h **** 
 354:./bsp/core_cm0.h **** /*******************************************************************************
 355:./bsp/core_cm0.h ****  *                Hardware Abstraction Layer
 356:./bsp/core_cm0.h ****  ******************************************************************************/
 357:./bsp/core_cm0.h **** 
 358:./bsp/core_cm0.h **** 
 359:./bsp/core_cm0.h **** #if defined ( __CC_ARM   )
 360:./bsp/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 361:./bsp/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 362:./bsp/core_cm0.h ****   #define __STATIC_INLINE  static __inline
 363:./bsp/core_cm0.h **** #elif defined ( __ICCARM__ )
 364:./bsp/core_cm0.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 365:./bsp/core_cm0.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 366:./bsp/core_cm0.h ****   #define __STATIC_INLINE  static inline
 367:./bsp/core_cm0.h **** #elif defined   (  __GNUC__  )
 368:./bsp/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 369:./bsp/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 370:./bsp/core_cm0.h ****   #define __STATIC_INLINE  static inline
 371:./bsp/core_cm0.h **** #elif defined   (  __TASKING__  )
 372:./bsp/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 373:./bsp/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 374:./bsp/core_cm0.h ****   #define __STATIC_INLINE  static inline
 375:./bsp/core_cm0.h **** #endif
 376:./bsp/core_cm0.h **** 
 377:./bsp/core_cm0.h **** 
 378:./bsp/core_cm0.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 379:./bsp/core_cm0.h **** 
 380:./bsp/core_cm0.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 381:./bsp/core_cm0.h **** /* ARM armcc specific functions */
 382:./bsp/core_cm0.h **** 
 383:./bsp/core_cm0.h **** #define __enable_fault_irq                __enable_fiq
 384:./bsp/core_cm0.h **** #define __disable_fault_irq               __disable_fiq
 385:./bsp/core_cm0.h **** 
 386:./bsp/core_cm0.h **** #define __NOP                             __nop
 387:./bsp/core_cm0.h **** #define __WFI                             __wfi
 388:./bsp/core_cm0.h **** #define __WFE                             __wfe
 389:./bsp/core_cm0.h **** #define __SEV                             __sev
 390:./bsp/core_cm0.h **** #define __ISB()                           __isb(0)
 391:./bsp/core_cm0.h **** #define __DSB()                           __dsb(0)
 392:./bsp/core_cm0.h **** #define __DMB()                           __dmb(0)
 393:./bsp/core_cm0.h **** #define __REV                             __rev
 394:./bsp/core_cm0.h **** 
 395:./bsp/core_cm0.h **** 
 396:./bsp/core_cm0.h **** /* intrinsic void __enable_irq();     */
 397:./bsp/core_cm0.h **** /* intrinsic void __disable_irq();    */
 398:./bsp/core_cm0.h **** 
 399:./bsp/core_cm0.h **** 
 400:./bsp/core_cm0.h **** /**
 401:./bsp/core_cm0.h ****  * @brief  Return the Process Stack Pointer
 402:./bsp/core_cm0.h ****  *
 403:./bsp/core_cm0.h ****  * @return ProcessStackPointer
 404:./bsp/core_cm0.h ****  *
 405:./bsp/core_cm0.h ****  * Return the actual process stack pointer
 406:./bsp/core_cm0.h ****  */
 407:./bsp/core_cm0.h **** extern uint32_t __get_PSP(void);
 408:./bsp/core_cm0.h **** 
 409:./bsp/core_cm0.h **** /**
 410:./bsp/core_cm0.h ****  * @brief  Set the Process Stack Pointer
 411:./bsp/core_cm0.h ****  *
 412:./bsp/core_cm0.h ****  * @param  topOfProcStack  Process Stack Pointer
 413:./bsp/core_cm0.h ****  *
 414:./bsp/core_cm0.h ****  * Assign the value ProcessStackPointer to the MSP 
 415:./bsp/core_cm0.h ****  * (process stack pointer) Cortex processor register
 416:./bsp/core_cm0.h ****  */
 417:./bsp/core_cm0.h **** extern void __set_PSP(uint32_t topOfProcStack);
 418:./bsp/core_cm0.h **** 
 419:./bsp/core_cm0.h **** /**
 420:./bsp/core_cm0.h ****  * @brief  Return the Main Stack Pointer
 421:./bsp/core_cm0.h ****  *
 422:./bsp/core_cm0.h ****  * @return Main Stack Pointer
 423:./bsp/core_cm0.h ****  *
 424:./bsp/core_cm0.h ****  * Return the current value of the MSP (main stack pointer)
 425:./bsp/core_cm0.h ****  * Cortex processor register
 426:./bsp/core_cm0.h ****  */
 427:./bsp/core_cm0.h **** extern uint32_t __get_MSP(void);
 428:./bsp/core_cm0.h **** 
 429:./bsp/core_cm0.h **** /**
 430:./bsp/core_cm0.h ****  * @brief  Set the Main Stack Pointer
 431:./bsp/core_cm0.h ****  *
 432:./bsp/core_cm0.h ****  * @param  topOfMainStack  Main Stack Pointer
 433:./bsp/core_cm0.h ****  *
 434:./bsp/core_cm0.h ****  * Assign the value mainStackPointer to the MSP 
 435:./bsp/core_cm0.h ****  * (main stack pointer) Cortex processor register
 436:./bsp/core_cm0.h ****  */
 437:./bsp/core_cm0.h **** extern void __set_MSP(uint32_t topOfMainStack);
 438:./bsp/core_cm0.h **** 
 439:./bsp/core_cm0.h **** /**
 440:./bsp/core_cm0.h ****  * @brief  Reverse byte order in unsigned short value
 441:./bsp/core_cm0.h ****  *
 442:./bsp/core_cm0.h ****  * @param   value  value to reverse
 443:./bsp/core_cm0.h ****  * @return         reversed value
 444:./bsp/core_cm0.h ****  *
 445:./bsp/core_cm0.h ****  * Reverse byte order in unsigned short value
 446:./bsp/core_cm0.h ****  */
 447:./bsp/core_cm0.h **** extern uint32_t __REV16(uint16_t value);
 448:./bsp/core_cm0.h **** 
 449:./bsp/core_cm0.h **** /**
 450:./bsp/core_cm0.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 451:./bsp/core_cm0.h ****  *
 452:./bsp/core_cm0.h ****  * @param   value  value to reverse
 453:./bsp/core_cm0.h ****  * @return         reversed value
 454:./bsp/core_cm0.h ****  *
 455:./bsp/core_cm0.h ****  * Reverse byte order in signed short value with sign extension to integer
 456:./bsp/core_cm0.h ****  */
 457:./bsp/core_cm0.h **** extern int32_t __REVSH(int16_t value);
 458:./bsp/core_cm0.h **** 
 459:./bsp/core_cm0.h **** 
 460:./bsp/core_cm0.h **** #if (__ARMCC_VERSION < 400000)
 461:./bsp/core_cm0.h **** 
 462:./bsp/core_cm0.h **** /**
 463:./bsp/core_cm0.h ****  * @brief  Return the Priority Mask value
 464:./bsp/core_cm0.h ****  *
 465:./bsp/core_cm0.h ****  * @return PriMask
 466:./bsp/core_cm0.h ****  *
 467:./bsp/core_cm0.h ****  * Return state of the priority mask bit from the priority mask register
 468:./bsp/core_cm0.h ****  */
 469:./bsp/core_cm0.h **** extern uint32_t __get_PRIMASK(void);
 470:./bsp/core_cm0.h **** 
 471:./bsp/core_cm0.h **** /**
 472:./bsp/core_cm0.h ****  * @brief  Set the Priority Mask value
 473:./bsp/core_cm0.h ****  *
 474:./bsp/core_cm0.h ****  * @param   priMask  PriMask
 475:./bsp/core_cm0.h ****  *
 476:./bsp/core_cm0.h ****  * Set the priority mask bit in the priority mask register
 477:./bsp/core_cm0.h ****  */
 478:./bsp/core_cm0.h **** extern void __set_PRIMASK(uint32_t priMask);
 479:./bsp/core_cm0.h **** 
 480:./bsp/core_cm0.h **** /**
 481:./bsp/core_cm0.h ****  * @brief  Return the Control Register value
 482:./bsp/core_cm0.h ****  * 
 483:./bsp/core_cm0.h ****  * @return Control value
 484:./bsp/core_cm0.h ****  *
 485:./bsp/core_cm0.h ****  * Return the content of the control register
 486:./bsp/core_cm0.h ****  */
 487:./bsp/core_cm0.h **** extern uint32_t __get_CONTROL(void);
 488:./bsp/core_cm0.h **** 
 489:./bsp/core_cm0.h **** /**
 490:./bsp/core_cm0.h ****  * @brief  Set the Control Register value
 491:./bsp/core_cm0.h ****  *
 492:./bsp/core_cm0.h ****  * @param  control  Control value
 493:./bsp/core_cm0.h ****  *
 494:./bsp/core_cm0.h ****  * Set the control register
 495:./bsp/core_cm0.h ****  */
 496:./bsp/core_cm0.h **** extern void __set_CONTROL(uint32_t control);
 497:./bsp/core_cm0.h **** 
 498:./bsp/core_cm0.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 499:./bsp/core_cm0.h **** 
 500:./bsp/core_cm0.h **** 
 501:./bsp/core_cm0.h **** /**
 502:./bsp/core_cm0.h ****  * @brief  Return the Priority Mask value
 503:./bsp/core_cm0.h ****  *
 504:./bsp/core_cm0.h ****  * @return PriMask
 505:./bsp/core_cm0.h ****  *
 506:./bsp/core_cm0.h ****  * Return state of the priority mask bit from the priority mask register
 507:./bsp/core_cm0.h ****  */
 508:./bsp/core_cm0.h **** static __INLINE uint32_t __get_PRIMASK(void)
 509:./bsp/core_cm0.h **** {
 510:./bsp/core_cm0.h ****   register uint32_t __regPriMask         __ASM("primask");
 511:./bsp/core_cm0.h ****   return(__regPriMask);
 512:./bsp/core_cm0.h **** }
 513:./bsp/core_cm0.h **** 
 514:./bsp/core_cm0.h **** /**
 515:./bsp/core_cm0.h ****  * @brief  Set the Priority Mask value
 516:./bsp/core_cm0.h ****  *
 517:./bsp/core_cm0.h ****  * @param  priMask  PriMask
 518:./bsp/core_cm0.h ****  *
 519:./bsp/core_cm0.h ****  * Set the priority mask bit in the priority mask register
 520:./bsp/core_cm0.h ****  */
 521:./bsp/core_cm0.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 522:./bsp/core_cm0.h **** {
 523:./bsp/core_cm0.h ****   register uint32_t __regPriMask         __ASM("primask");
 524:./bsp/core_cm0.h ****   __regPriMask = (priMask);
 525:./bsp/core_cm0.h **** }
 526:./bsp/core_cm0.h **** 
 527:./bsp/core_cm0.h **** /**
 528:./bsp/core_cm0.h ****  * @brief  Return the Control Register value
 529:./bsp/core_cm0.h ****  * 
 530:./bsp/core_cm0.h ****  * @return Control value
 531:./bsp/core_cm0.h ****  *
 532:./bsp/core_cm0.h ****  * Return the content of the control register
 533:./bsp/core_cm0.h ****  */
 534:./bsp/core_cm0.h **** static __INLINE uint32_t __get_CONTROL(void)
 535:./bsp/core_cm0.h **** {
 536:./bsp/core_cm0.h ****   register uint32_t __regControl         __ASM("control");
 537:./bsp/core_cm0.h ****   return(__regControl);
 538:./bsp/core_cm0.h **** }
 539:./bsp/core_cm0.h **** 
 540:./bsp/core_cm0.h **** /**
 541:./bsp/core_cm0.h ****  * @brief  Set the Control Register value
 542:./bsp/core_cm0.h ****  *
 543:./bsp/core_cm0.h ****  * @param  control  Control value
 544:./bsp/core_cm0.h ****  *
 545:./bsp/core_cm0.h ****  * Set the control register
 546:./bsp/core_cm0.h ****  */
 547:./bsp/core_cm0.h **** static __INLINE void __set_CONTROL(uint32_t control)
 548:./bsp/core_cm0.h **** {
 549:./bsp/core_cm0.h ****   register uint32_t __regControl         __ASM("control");
 550:./bsp/core_cm0.h ****   __regControl = control;
 551:./bsp/core_cm0.h **** }
 552:./bsp/core_cm0.h **** 
 553:./bsp/core_cm0.h **** #endif /* __ARMCC_VERSION  */ 
 554:./bsp/core_cm0.h **** 
 555:./bsp/core_cm0.h **** 
 556:./bsp/core_cm0.h **** 
 557:./bsp/core_cm0.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
 558:./bsp/core_cm0.h **** /* IAR iccarm specific functions */
 559:./bsp/core_cm0.h **** 
 560:./bsp/core_cm0.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
 561:./bsp/core_cm0.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
 562:./bsp/core_cm0.h **** 
 563:./bsp/core_cm0.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
 564:./bsp/core_cm0.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
 565:./bsp/core_cm0.h **** 
 566:./bsp/core_cm0.h **** #define __NOP                                     __no_operation            /*!< no operation intri
 567:./bsp/core_cm0.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
 568:./bsp/core_cm0.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
 569:./bsp/core_cm0.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
 570:./bsp/core_cm0.h **** 
 571:./bsp/core_cm0.h **** /* intrinsic void __ISB(void)                                     */
 572:./bsp/core_cm0.h **** /* intrinsic void __DSB(void)                                     */
 573:./bsp/core_cm0.h **** /* intrinsic void __DMB(void)                                     */
 574:./bsp/core_cm0.h **** /* intrinsic void __set_PRIMASK();                                */
 575:./bsp/core_cm0.h **** /* intrinsic void __get_PRIMASK();                                */
 576:./bsp/core_cm0.h **** 
 577:./bsp/core_cm0.h **** 
 578:./bsp/core_cm0.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
 579:./bsp/core_cm0.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
 580:./bsp/core_cm0.h **** 
 581:./bsp/core_cm0.h **** 
 582:./bsp/core_cm0.h **** /**
 583:./bsp/core_cm0.h ****  * @brief  Return the Process Stack Pointer
 584:./bsp/core_cm0.h ****  *
 585:./bsp/core_cm0.h ****  * @return ProcessStackPointer
 586:./bsp/core_cm0.h ****  *
 587:./bsp/core_cm0.h ****  * Return the actual process stack pointer
 588:./bsp/core_cm0.h ****  */
 589:./bsp/core_cm0.h **** extern uint32_t __get_PSP(void);
 590:./bsp/core_cm0.h **** 
 591:./bsp/core_cm0.h **** /**
 592:./bsp/core_cm0.h ****  * @brief  Set the Process Stack Pointer
 593:./bsp/core_cm0.h ****  *
 594:./bsp/core_cm0.h ****  * @param  topOfProcStack  Process Stack Pointer
 595:./bsp/core_cm0.h ****  *
 596:./bsp/core_cm0.h ****  * Assign the value ProcessStackPointer to the MSP 
 597:./bsp/core_cm0.h ****  * (process stack pointer) Cortex processor register
 598:./bsp/core_cm0.h ****  */
 599:./bsp/core_cm0.h **** extern void __set_PSP(uint32_t topOfProcStack);
 600:./bsp/core_cm0.h **** 
 601:./bsp/core_cm0.h **** /**
 602:./bsp/core_cm0.h ****  * @brief  Return the Main Stack Pointer
 603:./bsp/core_cm0.h ****  *
 604:./bsp/core_cm0.h ****  * @return Main Stack Pointer
 605:./bsp/core_cm0.h ****  *
 606:./bsp/core_cm0.h ****  * Return the current value of the MSP (main stack pointer)
 607:./bsp/core_cm0.h ****  * Cortex processor register
 608:./bsp/core_cm0.h ****  */
 609:./bsp/core_cm0.h **** extern uint32_t __get_MSP(void);
 610:./bsp/core_cm0.h **** 
 611:./bsp/core_cm0.h **** /**
 612:./bsp/core_cm0.h ****  * @brief  Set the Main Stack Pointer
 613:./bsp/core_cm0.h ****  *
 614:./bsp/core_cm0.h ****  * @param  topOfMainStack  Main Stack Pointer
 615:./bsp/core_cm0.h ****  *
 616:./bsp/core_cm0.h ****  * Assign the value mainStackPointer to the MSP 
 617:./bsp/core_cm0.h ****  * (main stack pointer) Cortex processor register
 618:./bsp/core_cm0.h ****  */
 619:./bsp/core_cm0.h **** extern void __set_MSP(uint32_t topOfMainStack);
 620:./bsp/core_cm0.h **** 
 621:./bsp/core_cm0.h **** /**
 622:./bsp/core_cm0.h ****  * @brief  Reverse byte order in unsigned short value
 623:./bsp/core_cm0.h ****  *
 624:./bsp/core_cm0.h ****  * @param  value  value to reverse
 625:./bsp/core_cm0.h ****  * @return        reversed value
 626:./bsp/core_cm0.h ****  *
 627:./bsp/core_cm0.h ****  * Reverse byte order in unsigned short value
 628:./bsp/core_cm0.h ****  */
 629:./bsp/core_cm0.h **** extern uint32_t __REV16(uint16_t value);
 630:./bsp/core_cm0.h **** 
 631:./bsp/core_cm0.h **** 
 632:./bsp/core_cm0.h **** 
 633:./bsp/core_cm0.h **** 
 634:./bsp/core_cm0.h **** 
 635:./bsp/core_cm0.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
 636:./bsp/core_cm0.h **** /* GNU gcc specific functions */
 637:./bsp/core_cm0.h **** 
 638:./bsp/core_cm0.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 639:./bsp/core_cm0.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 640:./bsp/core_cm0.h **** 
 641:./bsp/core_cm0.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
 642:./bsp/core_cm0.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
 643:./bsp/core_cm0.h **** 
 644:./bsp/core_cm0.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
 645:./bsp/core_cm0.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
 646:./bsp/core_cm0.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
 647:./bsp/core_cm0.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
 648:./bsp/core_cm0.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
  48              		.loc 2 648 0
  49              		.syntax divided
  50              	@ 648 "./bsp/core_cm0.h" 1
  51 000e BFF36F8F 		isb
  52              	@ 0 "" 2
  53              		.thumb
  54              		.syntax unified
  55              	.L2:
  56              	.LBE13:
  57              	.LBE12:
 247:./bsp/inc/FMC.h ****     __ISB();                            /* To make sure ISP/CPU be Synchronized */
 248:./bsp/inc/FMC.h ****     while(FMC->ISPTRG);                 /* Waiting for ISP Done */
  58              		.loc 1 248 0 discriminator 1
  59 0012 1A69     		ldr	r2, [r3, #16]
  60 0014 002A     		cmp	r2, #0
  61 0016 FCD1     		bne	.L2
 249:./bsp/inc/FMC.h **** }
  62              		.loc 1 249 0
  63              		@ sp needed
  64 0018 7047     		bx	lr
  65              	.L6:
  66 001a C046     		.align	2
  67              	.L5:
  68 001c 00C00050 		.word	1342226432
  69              		.cfi_endproc
  70              	.LFE22:
  72              		.section	.text.FMC_Erase,"ax",%progbits
  73              		.align	1
  74              		.code	16
  75              		.thumb_func
  77              	FMC_Erase:
  78              	.LFB24:
 250:./bsp/inc/FMC.h **** 
 251:./bsp/inc/FMC.h **** /**
 252:./bsp/inc/FMC.h ****  * @brief       Read 32-bit Data from specified address of flash
 253:./bsp/inc/FMC.h ****  *
 254:./bsp/inc/FMC.h ****  * @param[in]   u32addr  Flash address include APROM, LDROM, Data Flash, and CONFIG
 255:./bsp/inc/FMC.h ****  *
 256:./bsp/inc/FMC.h ****  * @return      The data of specified address
 257:./bsp/inc/FMC.h ****  *
 258:./bsp/inc/FMC.h ****  * @details     To read word data from Flash include APROM, LDROM, Data Flash, and CONFIG.
 259:./bsp/inc/FMC.h ****  *
 260:./bsp/inc/FMC.h ****  */
 261:./bsp/inc/FMC.h **** static __INLINE uint32_t FMC_Read(uint32_t u32addr)
 262:./bsp/inc/FMC.h **** {
 263:./bsp/inc/FMC.h ****     FMC->ISPCMD = FMC_ISPCMD_READ; /* Set ISP Command Code */
 264:./bsp/inc/FMC.h ****     FMC->ISPADR = u32addr;         /* Set Target ROM Address. The address must be word alignment. *
 265:./bsp/inc/FMC.h ****     FMC->ISPTRG = 0x1;             /* Trigger to start ISP procedure */
 266:./bsp/inc/FMC.h ****     __ISB();                       /* To make sure ISP/CPU be Synchronized */
 267:./bsp/inc/FMC.h ****     while(FMC->ISPTRG);            /* Waiting for ISP Done */
 268:./bsp/inc/FMC.h **** 
 269:./bsp/inc/FMC.h ****     return FMC->ISPDAT;
 270:./bsp/inc/FMC.h **** }
 271:./bsp/inc/FMC.h **** 
 272:./bsp/inc/FMC.h **** 
 273:./bsp/inc/FMC.h **** /**
 274:./bsp/inc/FMC.h ****  * @brief      Flash page erase
 275:./bsp/inc/FMC.h ****  *
 276:./bsp/inc/FMC.h ****  * @param[in]  u32addr  Flash address including APROM, LDROM, Data Flash, and CONFIG
 277:./bsp/inc/FMC.h ****  *
 278:./bsp/inc/FMC.h ****  * @details    To do flash page erase. The target address could be APROM, LDROM, Data Flash, or CON
 279:./bsp/inc/FMC.h ****  *             The page size is 512 bytes.
 280:./bsp/inc/FMC.h ****  *
 281:./bsp/inc/FMC.h ****  * @retval      0 Success
 282:./bsp/inc/FMC.h ****  * @retval     -1 Erase failed
 283:./bsp/inc/FMC.h ****  *
 284:./bsp/inc/FMC.h ****  */
 285:./bsp/inc/FMC.h **** static __INLINE int32_t FMC_Erase(uint32_t u32addr)
 286:./bsp/inc/FMC.h **** {
  79              		.loc 1 286 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL1:
 287:./bsp/inc/FMC.h ****     FMC->ISPCMD = FMC_ISPCMD_PAGE_ERASE; /* Set ISP Command Code */
  85              		.loc 1 287 0
  86 0000 2222     		movs	r2, #34
  87 0002 074B     		ldr	r3, .L10
  88 0004 DA60     		str	r2, [r3, #12]
 288:./bsp/inc/FMC.h ****     FMC->ISPADR = u32addr;               /* Set Target ROM Address. The address must be page alignm
 289:./bsp/inc/FMC.h ****     FMC->ISPTRG = 0x1;                   /* Trigger to start ISP procedure */
  89              		.loc 1 289 0
  90 0006 213A     		subs	r2, r2, #33
 288:./bsp/inc/FMC.h ****     FMC->ISPADR = u32addr;               /* Set Target ROM Address. The address must be page alignm
  91              		.loc 1 288 0
  92 0008 5860     		str	r0, [r3, #4]
  93              		.loc 1 289 0
  94 000a 1A61     		str	r2, [r3, #16]
  95              	.LBB14:
  96              	.LBB15:
  97              		.loc 2 648 0
  98              		.syntax divided
  99              	@ 648 "./bsp/core_cm0.h" 1
 100 000c BFF36F8F 		isb
 101              	@ 0 "" 2
 102              		.thumb
 103              		.syntax unified
 104              	.L8:
 105              	.LBE15:
 106              	.LBE14:
 290:./bsp/inc/FMC.h ****     __ISB();                             /* To make sure ISP/CPU be Synchronized */
 291:./bsp/inc/FMC.h ****     while(FMC->ISPTRG);                  /* Waiting for ISP Done */
 107              		.loc 1 291 0 discriminator 1
 108 0010 1A69     		ldr	r2, [r3, #16]
 109 0012 002A     		cmp	r2, #0
 110 0014 FCD1     		bne	.L8
 292:./bsp/inc/FMC.h **** 
 293:./bsp/inc/FMC.h ****     /* Check ISPFF flag to know whether erase OK or fail. */
 294:./bsp/inc/FMC.h ****     if(FMC->ISPCON & FMC_ISPCON_ISPFF_Msk)
 111              		.loc 1 294 0
 112 0016 024B     		ldr	r3, .L10
 295:./bsp/inc/FMC.h ****     {
 296:./bsp/inc/FMC.h ****         return -1;
 297:./bsp/inc/FMC.h ****     }
 298:./bsp/inc/FMC.h ****     return 0;
 299:./bsp/inc/FMC.h **** }
 113              		.loc 1 299 0
 114              		@ sp needed
 294:./bsp/inc/FMC.h ****     {
 115              		.loc 1 294 0
 116 0018 1868     		ldr	r0, [r3]
 117              	.LVL2:
 118 001a 4006     		lsls	r0, r0, #25
 119 001c C017     		asrs	r0, r0, #31
 120              		.loc 1 299 0
 121 001e 7047     		bx	lr
 122              	.L11:
 123              		.align	2
 124              	.L10:
 125 0020 00C00050 		.word	1342226432
 126              		.cfi_endproc
 127              	.LFE24:
 129              		.section	.text.fmc_open,"ax",%progbits
 130              		.align	1
 131              		.code	16
 132              		.thumb_func
 134              	fmc_open:
 135              	.LFB61:
 136              		.file 3 "./drive/fmc_rw.c"
   1:./drive/fmc_rw.c **** 
   2:./drive/fmc_rw.c **** 
   3:./drive/fmc_rw.c **** 
   4:./drive/fmc_rw.c **** #include "hardware.h"
   5:./drive/fmc_rw.c **** #include "fmc_rw.h"
   6:./drive/fmc_rw.c **** #include "MicroOS.h"
   7:./drive/fmc_rw.c **** 
   8:./drive/fmc_rw.c **** 
   9:./drive/fmc_rw.c **** typedef union{
  10:./drive/fmc_rw.c ****     uint32 dat;
  11:./drive/fmc_rw.c ****     uint8  buff[4];
  12:./drive/fmc_rw.c **** } __PACKED__ FVoid;
  13:./drive/fmc_rw.c **** 
  14:./drive/fmc_rw.c **** //typedef __PACKED__  uint32 FUint32;
  15:./drive/fmc_rw.c **** 
  16:./drive/fmc_rw.c **** 
  17:./drive/fmc_rw.c **** __STATIC_INLINE
  18:./drive/fmc_rw.c **** void fmc_open(void){
 137              		.loc 3 18 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141 0000 10B5     		push	{r4, lr}
 142              	.LCFI0:
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 4, -8
 145              		.cfi_offset 14, -4
 146              	.LBB18:
 147              	.LBB19:
 148              		.file 4 "./bsp/inc/SYS.h"
   1:./bsp/inc/SYS.h **** /**************************************************************************//**
   2:./bsp/inc/SYS.h ****  * @file     sys.h
   3:./bsp/inc/SYS.h ****  * @version  V3.00
   4:./bsp/inc/SYS.h ****  * $Revision: 16 $
   5:./bsp/inc/SYS.h ****  * $Date: 14/07/25 8:55a $
   6:./bsp/inc/SYS.h ****  * @brief    NUC131 Series SYS Driver Header File
   7:./bsp/inc/SYS.h ****  *
   8:./bsp/inc/SYS.h ****  * @note
   9:./bsp/inc/SYS.h ****  * Copyright (C) 2014 Nuvoton Technology Corp. All rights reserved.
  10:./bsp/inc/SYS.h ****  *
  11:./bsp/inc/SYS.h ****  ******************************************************************************/
  12:./bsp/inc/SYS.h **** #ifndef __SYS_H__
  13:./bsp/inc/SYS.h **** #define __SYS_H__
  14:./bsp/inc/SYS.h **** 
  15:./bsp/inc/SYS.h **** #ifdef __cplusplus
  16:./bsp/inc/SYS.h **** extern "C"
  17:./bsp/inc/SYS.h **** {
  18:./bsp/inc/SYS.h **** #endif
  19:./bsp/inc/SYS.h **** 
  20:./bsp/inc/SYS.h **** /** @addtogroup NUC131_Device_Driver NUC131 Device Driver
  21:./bsp/inc/SYS.h ****   @{
  22:./bsp/inc/SYS.h **** */
  23:./bsp/inc/SYS.h **** 
  24:./bsp/inc/SYS.h **** /** @addtogroup NUC131_SYS_Driver SYS Driver
  25:./bsp/inc/SYS.h ****   @{
  26:./bsp/inc/SYS.h **** */
  27:./bsp/inc/SYS.h **** 
  28:./bsp/inc/SYS.h **** /** @addtogroup NUC131_SYS_EXPORTED_CONSTANTS SYS Exported Constants
  29:./bsp/inc/SYS.h ****   @{
  30:./bsp/inc/SYS.h **** */
  31:./bsp/inc/SYS.h **** 
  32:./bsp/inc/SYS.h **** 
  33:./bsp/inc/SYS.h **** /*-------------------------------------------------------------------------------------------------
  34:./bsp/inc/SYS.h **** /*  Module Reset Control Resister constant definitions.                                            
  35:./bsp/inc/SYS.h **** /*-------------------------------------------------------------------------------------------------
  36:./bsp/inc/SYS.h **** #define GPIO_RST    ((0x4<<24) | SYS_IPRSTC2_GPIO_RST_Pos  ) /*!< GPIO reset is one of the SYS_Rese
  37:./bsp/inc/SYS.h **** #define TMR0_RST    ((0x4<<24) | SYS_IPRSTC2_TMR0_RST_Pos  ) /*!< TMR0 reset is one of the SYS_Rese
  38:./bsp/inc/SYS.h **** #define TMR1_RST    ((0x4<<24) | SYS_IPRSTC2_TMR1_RST_Pos  ) /*!< TMR1 reset is one of the SYS_Rese
  39:./bsp/inc/SYS.h **** #define TMR2_RST    ((0x4<<24) | SYS_IPRSTC2_TMR2_RST_Pos  ) /*!< TMR2 reset is one of the SYS_Rese
  40:./bsp/inc/SYS.h **** #define TMR3_RST    ((0x4<<24) | SYS_IPRSTC2_TMR3_RST_Pos  ) /*!< TMR3 reset is one of the SYS_Rese
  41:./bsp/inc/SYS.h **** #define I2C0_RST    ((0x4<<24) | SYS_IPRSTC2_I2C0_RST_Pos  ) /*!< I2C0 reset is one of the SYS_Rese
  42:./bsp/inc/SYS.h **** #define I2C1_RST    ((0x4<<24) | SYS_IPRSTC2_I2C1_RST_Pos  ) /*!< I2C1 reset is one of the SYS_Rese
  43:./bsp/inc/SYS.h **** #define SPI0_RST    ((0x4<<24) | SYS_IPRSTC2_SPI0_RST_Pos  ) /*!< SPI0 reset is one of the SYS_Rese
  44:./bsp/inc/SYS.h **** #define UART0_RST   ((0x4<<24) | SYS_IPRSTC2_UART0_RST_Pos ) /*!< UART0 reset is one of the SYS_Res
  45:./bsp/inc/SYS.h **** #define UART1_RST   ((0x4<<24) | SYS_IPRSTC2_UART1_RST_Pos ) /*!< UART1 reset is one of the SYS_Res
  46:./bsp/inc/SYS.h **** #define UART2_RST   ((0x4<<24) | SYS_IPRSTC2_UART2_RST_Pos ) /*!< UART2 reset is one of the SYS_Res
  47:./bsp/inc/SYS.h **** #define CAN0_RST    ((0x4<<24) | SYS_IPRSTC2_CAN0_RST_Pos  ) /*!< CAN0 reset is one of the SYS_Rese
  48:./bsp/inc/SYS.h **** #define ADC_RST     ((0x4<<24) | SYS_IPRSTC2_ADC_RST_Pos   ) /*!< ADC reset is one of the SYS_Reset
  49:./bsp/inc/SYS.h **** #define UART3_RST   ((0x8<<24) | SYS_IPRSTC3_UART3_RST_Pos ) /*!< UART3 reset is one of the SYS_Res
  50:./bsp/inc/SYS.h **** #define UART4_RST   ((0x8<<24) | SYS_IPRSTC3_UART4_RST_Pos ) /*!< UART4 reset is one of the SYS_Res
  51:./bsp/inc/SYS.h **** #define UART5_RST   ((0x8<<24) | SYS_IPRSTC3_UART5_RST_Pos ) /*!< UART5 reset is one of the SYS_Res
  52:./bsp/inc/SYS.h **** #define PWM0_RST    ((0x8<<24) | SYS_IPRSTC3_PWM0_RST_Pos )  /*!< PWM0 reset is one of the SYS_Rese
  53:./bsp/inc/SYS.h **** #define PWM1_RST    ((0x8<<24) | SYS_IPRSTC3_PWM1_RST_Pos )  /*!< PWM1 reset is one of the SYS_Rese
  54:./bsp/inc/SYS.h **** #define BPWM0_RST   ((0x8<<24) | SYS_IPRSTC3_BPWM0_RST_Pos ) /*!< BPWM0 reset is one of the SYS_Res
  55:./bsp/inc/SYS.h **** #define BPWM1_RST   ((0x8<<24) | SYS_IPRSTC3_BPWM1_RST_Pos ) /*!< BPWM1 reset is one of the SYS_Res
  56:./bsp/inc/SYS.h **** 
  57:./bsp/inc/SYS.h **** 
  58:./bsp/inc/SYS.h **** /*-------------------------------------------------------------------------------------------------
  59:./bsp/inc/SYS.h **** /*  Brown Out Detector Threshold Voltage Selection constant definitions.                           
  60:./bsp/inc/SYS.h **** /*-------------------------------------------------------------------------------------------------
  61:./bsp/inc/SYS.h **** #define SYS_BODCR_BOD_RST_EN            (1UL<<SYS_BODCR_BOD_RSTEN_Pos)    /*!< Brown-out Reset Enab
  62:./bsp/inc/SYS.h **** #define SYS_BODCR_BOD_INTERRUPT_EN      (0UL<<SYS_BODCR_BOD_RSTEN_Pos)    /*!< Brown-out Interrupt 
  63:./bsp/inc/SYS.h **** #define SYS_BODCR_BOD_VL_4_4V           (3UL<<SYS_BODCR_BOD_VL_Pos)       /*!< Setting Brown Out De
  64:./bsp/inc/SYS.h **** #define SYS_BODCR_BOD_VL_3_7V           (2UL<<SYS_BODCR_BOD_VL_Pos)       /*!< Setting Brown Out De
  65:./bsp/inc/SYS.h **** #define SYS_BODCR_BOD_VL_2_7V           (1UL<<SYS_BODCR_BOD_VL_Pos)       /*!< Setting Brown Out De
  66:./bsp/inc/SYS.h **** #define SYS_BODCR_BOD_VL_2_2V           (0UL<<SYS_BODCR_BOD_VL_Pos)       /*!< Setting Brown Out De
  67:./bsp/inc/SYS.h **** 
  68:./bsp/inc/SYS.h **** 
  69:./bsp/inc/SYS.h **** /*-------------------------------------------------------------------------------------------------
  70:./bsp/inc/SYS.h **** /*  Multi-Function constant definitions.                                                           
  71:./bsp/inc/SYS.h **** /*-------------------------------------------------------------------------------------------------
  72:./bsp/inc/SYS.h **** 
  73:./bsp/inc/SYS.h **** /* How to use below #define?
  74:./bsp/inc/SYS.h **** Example: If user want to set PA.0 as ADC0 and PA.1 as ADC1 in initial function,
  75:./bsp/inc/SYS.h ****          user can issue following command to achieve it.
  76:./bsp/inc/SYS.h **** 
  77:./bsp/inc/SYS.h ****          SYS->GPA_MFP  = SYS_GPA_MFP_PA0_ADC0  | SYS_GPA_MFP_PA1_ADC1;
  78:./bsp/inc/SYS.h ****          SYS->ALT_MFP3 = SYS_ALT_MFP3_PA0_ADC0 | SYS_ALT_MFP3_PA1_ADC1;
  79:./bsp/inc/SYS.h ****          SYS->ALT_MFP4 = SYS_ALT_MFP4_PA0_ADC0 | SYS_ALT_MFP4_PA1_ADC1;
  80:./bsp/inc/SYS.h **** */
  81:./bsp/inc/SYS.h **** 
  82:./bsp/inc/SYS.h **** //PA.0
  83:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA0_GPIO        0x00000000UL        /*!< GPA_MFP PA.0 setting for GPIO */
  84:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA0_GPIO        NULL                /*!< No ALT_MFP setting for PA.0 */
  85:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA0_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.0 */
  86:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA0_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.0 */
  87:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA0_GPIO       0x00000000UL        /*!< ALT_MFP3 PA.0 setting for GPIO */
  88:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA0_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.0 setting for GPIO */
  89:./bsp/inc/SYS.h **** 
  90:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA0_ADC0        (1UL<<0)            /*!< GPA_MFP PA.0 setting for ADC0 */
  91:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA0_ADC0        NULL                /*!< No ALT_MFP setting for PA.0 */
  92:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA0_ADC0       NULL                /*!< No ALT_MFP1 setting for PA.0 */
  93:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA0_ADC0       NULL                /*!< No ALT_MFP2 setting for PA.0 */
  94:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA0_ADC0       0x00000000UL        /*!< ALT_MFP3 PA.0 setting for ADC0 */
  95:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA0_ADC0       0x00000000UL        /*!< ALT_MFP4 PA.0 setting for ADC0 */
  96:./bsp/inc/SYS.h **** 
  97:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA0_I2C1_SCL    (1UL<<0)            /*!< GPA_MFP PA.0 setting for I2C1_SCL */
  98:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA0_I2C1_SCL    NULL                /*!< No ALT_MFP setting for PA.0 */
  99:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA0_I2C1_SCL   NULL                /*!< No ALT_MFP1 setting for PA.0 */
 100:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA0_I2C1_SCL   NULL                /*!< No ALT_MFP2 setting for PA.0 */
 101:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA0_I2C1_SCL   0x00000000UL        /*!< ALT_MFP3 PA.0 setting for I2C1_SCL */
 102:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA0_I2C1_SCL   (1UL<<12)           /*!< ALT_MFP4 PA.0 setting for I2C1_SCL */
 103:./bsp/inc/SYS.h **** 
 104:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA0_UART5_TXD   (1UL<<0)            /*!< GPA_MFP PA.0 setting for UART5_TXD */
 105:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA0_UART5_TXD   NULL                /*!< No ALT_MFP setting for PA.0 */
 106:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA0_UART5_TXD  NULL                /*!< No ALT_MFP1 setting for PA.0 */
 107:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA0_UART5_TXD  NULL                /*!< No ALT_MFP2 setting for PA.0 */
 108:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA0_UART5_TXD  0x00000000UL        /*!< ALT_MFP3 PA.0 setting for UART5_TXD */
 109:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA0_UART5_TXD  (1UL<<7)            /*!< ALT_MFP4 PA.0 setting for UART5_TXD */
 110:./bsp/inc/SYS.h **** 
 111:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA0_PWM0_CH4    (1UL<<0)            /*!< GPA_MFP PA.0 setting for PWM0_CH4 */
 112:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA0_PWM0_CH4    NULL                /*!< No ALT_MFP setting for PA.0 */
 113:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA0_PWM0_CH4   NULL                /*!< No ALT_MFP1 setting for PA.0 */
 114:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA0_PWM0_CH4   NULL                /*!< No ALT_MFP2 setting for PA.0 */
 115:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA0_PWM0_CH4   (1UL<<4)            /*!< ALT_MFP3 PA.0 setting for PWM0_CH4 */
 116:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA0_PWM0_CH4   0x00000000UL        /*!< ALT_MFP4 PA.0 setting for PWM0_CH4 */
 117:./bsp/inc/SYS.h **** 
 118:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA0_Msk         (1UL<<0)            /*!< GPA_MFP PA.0 mask */
 119:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA0_Msk         NULL                /*!< No ALT_MFP PA.0 mask */
 120:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA0_Msk        NULL                /*!< No ALT_MFP1 PA.0 mask */
 121:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA0_Msk        NULL                /*!< No ALT_MFP2 PA.0 mask */
 122:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA0_Msk        (1UL<<4)            /*!< ALT_MFP3 PA.0 mask */
 123:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA0_Msk        (1UL<<12)|(1UL<<7)  /*!< ALT_MFP4 PA.0 mask */
 124:./bsp/inc/SYS.h **** 
 125:./bsp/inc/SYS.h **** //PA.1
 126:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA1_GPIO        0x00000000UL        /*!< GPA_MFP PA.1 setting for GPIO */
 127:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA1_GPIO        NULL                /*!< No ALT_MFP setting for PA.1 */
 128:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA1_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.1 */
 129:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA1_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.1 */
 130:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA1_GPIO       0x00000000UL        /*!< ALT_MFP3 PA.1 setting for GPIO */
 131:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA1_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.1 setting for GPIO */
 132:./bsp/inc/SYS.h **** 
 133:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA1_ADC1        (1UL<<1)            /*!< GPA_MFP PA.1 setting for ADC1 */
 134:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA1_ADC1        NULL                /*!< No ALT_MFP setting for PA.1 */
 135:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA1_ADC1       NULL                /*!< No ALT_MFP1 setting for PA.1 */
 136:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA1_ADC1       NULL                /*!< No ALT_MFP2 setting for PA.1 */
 137:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA1_ADC1       0x00000000UL        /*!< ALT_MFP3 PA.1 setting for ADC1 */
 138:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA1_ADC1       0x00000000UL        /*!< ALT_MFP4 PA.1 setting for ADC1 */
 139:./bsp/inc/SYS.h **** 
 140:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA1_I2C1_SDA    (1UL<<1)            /*!< GPA_MFP PA.1 setting for I2C1_SDA */
 141:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA1_I2C1_SDA    NULL                /*!< No ALT_MFP setting for PA.1 */
 142:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA1_I2C1_SDA   NULL                /*!< No ALT_MFP1 setting for PA.1 */
 143:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA1_I2C1_SDA   NULL                /*!< No ALT_MFP2 setting for PA.1 */
 144:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA1_I2C1_SDA   0x00000000UL        /*!< ALT_MFP3 PA.1 setting for I2C1_SDA */
 145:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA1_I2C1_SDA   (1UL<<13)           /*!< ALT_MFP4 PA.1 setting for I2C1_SDA */
 146:./bsp/inc/SYS.h **** 
 147:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA1_UART5_RXD   (1UL<<1)            /*!< GPA_MFP PA.1 setting for UART5_RXD */
 148:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA1_UART5_RXD   NULL                /*!< No ALT_MFP setting for PA.1 */
 149:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA1_UART5_RXD  NULL                /*!< No ALT_MFP1 setting for PA.1 */
 150:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA1_UART5_RXD  NULL                /*!< No ALT_MFP2 setting for PA.1 */
 151:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA1_UART5_RXD  0x00000000UL        /*!< ALT_MFP3 PA.1 setting for UART5_RXD */
 152:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA1_UART5_RXD  (1UL<<6)            /*!< ALT_MFP4 PA.1 setting for UART5_RXD */
 153:./bsp/inc/SYS.h **** 
 154:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA1_PWM0_CH5    (1UL<<1)            /*!< GPA_MFP PA.1 setting for PWM0_CH5 */
 155:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA1_PWM0_CH5    NULL                /*!< No ALT_MFP setting for PA.1 */
 156:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA1_PWM0_CH5   NULL                /*!< No ALT_MFP1 setting for PA.1 */
 157:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA1_PWM0_CH5   NULL                /*!< No ALT_MFP2 setting for PA.1 */
 158:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA1_PWM0_CH5   (1UL<<5)            /*!< ALT_MFP3 PA.1 setting for PWM0_CH5 */
 159:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA1_PWM0_CH5   0x00000000UL        /*!< ALT_MFP4 PA.1 setting for PWM0_CH5 */
 160:./bsp/inc/SYS.h **** 
 161:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA1_Msk         (1UL<<1)            /*!< GPA_MFP PA.1 mask */
 162:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA1_Msk         NULL                /*!< No ALT_MFP PA.1 mask */
 163:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA1_Msk        NULL                /*!< No ALT_MFP1 PA.1 mask */
 164:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA1_Msk        NULL                /*!< No ALT_MFP2 PA.1 mask */
 165:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA1_Msk        (1UL<<5)            /*!< ALT_MFP3 PA.1 mask */
 166:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA1_Msk        (1UL<<13)|(1UL<<6)  /*!< ALT_MFP4 PA.1 mask */
 167:./bsp/inc/SYS.h **** 
 168:./bsp/inc/SYS.h **** //PA.2
 169:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA2_GPIO        0x00000000UL        /*!< GPA_MFP PA.2 setting for GPIO */
 170:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA2_GPIO        NULL                /*!< No ALT_MFP setting for PA.2 */
 171:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA2_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.2 */
 172:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA2_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.2 */
 173:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA2_GPIO       0x00000000UL        /*!< ALT_MFP3 PA.2 setting for GPIO */
 174:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA2_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.2 setting for GPIO */
 175:./bsp/inc/SYS.h **** 
 176:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA2_ADC2        (1UL<<2)            /*!< GPA_MFP PA.2 setting for ADC2 */
 177:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA2_ADC2        NULL                /*!< No ALT_MFP setting for PA.2 */
 178:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA2_ADC2       NULL                /*!< No ALT_MFP1 setting for PA.2 */
 179:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA2_ADC2       NULL                /*!< No ALT_MFP2 setting for PA.2 */
 180:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA2_ADC2       0x00000000UL        /*!< ALT_MFP3 PA.2 setting for ADC2 */
 181:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA2_ADC2       0x00000000UL        /*!< ALT_MFP4 PA.2 setting for ADC2 */
 182:./bsp/inc/SYS.h **** 
 183:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA2_UART3_TXD   (1UL<<2)            /*!< GPA_MFP PA.2 setting for UART3_TXD */
 184:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA2_UART3_TXD   NULL                /*!< No ALT_MFP setting for PA.2 */
 185:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA2_UART3_TXD  NULL                /*!< No ALT_MFP1 setting for PA.2 */
 186:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA2_UART3_TXD  NULL                /*!< No ALT_MFP2 setting for PA.2 */
 187:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA2_UART3_TXD  0x00000000UL        /*!< ALT_MFP3 PA.2 setting for UART3_TXD */
 188:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA2_UART3_TXD  (1UL<<3)            /*!< ALT_MFP4 PA.2 setting for UART3_TXD */
 189:./bsp/inc/SYS.h **** 
 190:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA2_PWM1_CH0    (1UL<<2)            /*!< GPA_MFP PA.2 setting for PWM1_CH0 */
 191:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA2_PWM1_CH0    NULL                /*!< No ALT_MFP setting for PA.2 */
 192:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA2_PWM1_CH0   NULL                /*!< No ALT_MFP1 setting for PA.2 */
 193:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA2_PWM1_CH0   NULL                /*!< No ALT_MFP2 setting for PA.2 */
 194:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA2_PWM1_CH0   (1UL<<6)            /*!< ALT_MFP3 PA.2 setting for PWM1_CH0 */
 195:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA2_PWM1_CH0   0x00000000UL        /*!< ALT_MFP4 PA.2 setting for PWM1_CH0 */
 196:./bsp/inc/SYS.h **** 
 197:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA2_Msk         (1UL<<2)            /*!< GPA_MFP PA.2 mask */
 198:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA2_Msk         NULL                /*!< No ALT_MFP PA.2 mask */
 199:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA2_Msk        NULL                /*!< No ALT_MFP1 PA.2 mask */
 200:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA2_Msk        NULL                /*!< No ALT_MFP2 PA.2 mask */
 201:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA2_Msk        (1UL<<6)            /*!< ALT_MFP3 PA.2 mask */
 202:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA2_Msk        (1UL<<3)            /*!< ALT_MFP4 PA.2 mask */
 203:./bsp/inc/SYS.h **** 
 204:./bsp/inc/SYS.h **** //PA.3
 205:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA3_GPIO        0x00000000UL        /*!< GPA_MFP PA.3 setting for GPIO */
 206:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA3_GPIO        NULL                /*!< No ALT_MFP setting for PA.3 */
 207:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA3_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.3 */
 208:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA3_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.3 */
 209:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA3_GPIO       0x00000000UL        /*!< ALT_MFP3 PA.3 setting for GPIO */
 210:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA3_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.3 setting for GPIO */
 211:./bsp/inc/SYS.h **** 
 212:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA3_ADC3        (1UL<<3)            /*!< GPA_MFP PA.3 setting for ADC3 */
 213:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA3_ADC3        NULL                /*!< No ALT_MFP setting for PA.3 */
 214:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA3_ADC3       NULL                /*!< No ALT_MFP1 setting for PA.3 */
 215:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA3_ADC3       NULL                /*!< No ALT_MFP2 setting for PA.3 */
 216:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA3_ADC3       0x00000000UL        /*!< ALT_MFP3 PA.3 setting for ADC3 */
 217:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA3_ADC3       0x00000000UL        /*!< ALT_MFP4 PA.3 setting for ADC3 */
 218:./bsp/inc/SYS.h **** 
 219:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA3_UART3_TXD   (1UL<<3)            /*!< GPA_MFP PA.3 setting for UART3_TXD */
 220:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA3_UART3_TXD   NULL                /*!< No ALT_MFP setting for PA.3 */
 221:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA3_UART3_TXD  NULL                /*!< No ALT_MFP1 setting for PA.3 */
 222:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA3_UART3_TXD  NULL                /*!< No ALT_MFP2 setting for PA.3 */
 223:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA3_UART3_TXD  0x00000000UL        /*!< ALT_MFP3 PA.3 setting for UART3_TXD */
 224:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA3_UART3_TXD  (1UL<<2)            /*!< ALT_MFP4 PA.3 setting for UART3_TXD */
 225:./bsp/inc/SYS.h **** 
 226:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA3_PWM1_CH1    (1UL<<3)            /*!< GPA_MFP PA.3 setting for PWM1_CH1 */
 227:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA3_PWM1_CH1    NULL                /*!< No ALT_MFP setting for PA.3 */
 228:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA3_PWM1_CH1   NULL                /*!< No ALT_MFP1 setting for PA.3 */
 229:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA3_PWM1_CH1   NULL                /*!< No ALT_MFP2 setting for PA.3 */
 230:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA3_PWM1_CH1   (1UL<<7)            /*!< ALT_MFP3 PA.3 setting for PWM1_CH1 */
 231:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA3_PWM1_CH1   0x00000000UL        /*!< ALT_MFP4 PA.3 setting for PWM1_CH1 */
 232:./bsp/inc/SYS.h **** 
 233:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA3_Msk         (1UL<<3)            /*!< GPA_MFP PA.3 mask */
 234:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA3_Msk         NULL                /*!< No ALT_MFP PA.3 mask */
 235:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA3_Msk        NULL                /*!< No ALT_MFP1 PA.3 mask */
 236:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA3_Msk        NULL                /*!< No ALT_MFP2 PA.3 mask */
 237:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA3_Msk        (1UL<<7)            /*!< ALT_MFP3 PA.3 mask */
 238:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA3_Msk        (1UL<<2)            /*!< ALT_MFP4 PA.3 mask */
 239:./bsp/inc/SYS.h **** 
 240:./bsp/inc/SYS.h **** //PA.4
 241:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA4_GPIO        0x00000000UL        /*!< GPA_MFP PA.4 setting for GPIO */
 242:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA4_GPIO        NULL                /*!< No ALT_MFP setting for PA.4 */
 243:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA4_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.4 */
 244:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA4_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.4 */
 245:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA4_GPIO       NULL                /*!< No ALT_MFP3 setting for PA.4 */
 246:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA4_GPIO       NULL                /*!< No ALT_MFP4 setting for PA.4 */
 247:./bsp/inc/SYS.h **** 
 248:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA4_ADC4        (1UL<<4)            /*!< GPA_MFP PA.4 setting for ADC4 */
 249:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA4_ADC4        NULL                /*!< No ALT_MFP setting for PA.4 */
 250:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA4_ADC4       NULL                /*!< No ALT_MFP1 setting for PA.4 */
 251:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA4_ADC4       NULL                /*!< No ALT_MFP2 setting for PA.4 */
 252:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA4_ADC4       NULL                /*!< No ALT_MFP3 setting for PA.4 */
 253:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA4_ADC4       NULL                /*!< No ALT_MFP4 setting for PA.4 */
 254:./bsp/inc/SYS.h **** 
 255:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA4_Msk         (1UL<<4)            /*!< GPA_MFP PA.4 mask */
 256:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA4_Msk         NULL                /*!< No ALT_MFP PA.4 mask */
 257:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA4_Msk        NULL                /*!< No ALT_MFP1 PA.4 mask */
 258:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA4_Msk        NULL                /*!< No ALT_MFP2 PA.4 mask */
 259:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA4_Msk        NULL                /*!< No ALT_MFP3 PA.4 mask */
 260:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA4_Msk        NULL                /*!< No ALT_MFP4 PA.4 mask */
 261:./bsp/inc/SYS.h **** 
 262:./bsp/inc/SYS.h **** //PA.5
 263:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA5_GPIO        0x00000000UL        /*!< GPA_MFP PA.5 setting for GPIO */
 264:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA5_GPIO        NULL                /*!< No ALT_MFP setting for PA.5 */
 265:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA5_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.5 */
 266:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA5_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.5 */
 267:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA5_GPIO       NULL                /*!< No ALT_MFP3 setting for PA.5 */
 268:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA5_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.5 setting for GPIO */
 269:./bsp/inc/SYS.h **** 
 270:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA5_ADC5        (1UL<<5)            /*!< GPA_MFP PA.5 setting for ADC5 */
 271:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA5_ADC5        NULL                /*!< No ALT_MFP setting for PA.5 */
 272:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA5_ADC5       NULL                /*!< No ALT_MFP1 setting for PA.5 */
 273:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA5_ADC5       NULL                /*!< No ALT_MFP2 setting for PA.5 */
 274:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA5_ADC5       NULL                /*!< No ALT_MFP3 setting for PA.5 */
 275:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA5_ADC5       0x00000000UL        /*!< ALT_MFP4 PA.5 setting for ADC5 */
 276:./bsp/inc/SYS.h **** 
 277:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA5_UART3_RXD   (1UL<<5)            /*!< GPA_MFP PA.5 setting for UART3_RXD */
 278:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA5_UART3_RXD   NULL                /*!< No ALT_MFP setting for PA.5 */
 279:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA5_UART3_RXD  NULL                /*!< No ALT_MFP1 setting for PA.5 */
 280:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA5_UART3_RXD  NULL                /*!< No ALT_MFP2 setting for PA.5 */
 281:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA5_UART3_RXD  NULL                /*!< No ALT_MFP3 setting for PA.5 */
 282:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA5_UART3_RXD  (1UL<<4)            /*!< ALT_MFP4 PA.5 setting for UART3_RXD */
 283:./bsp/inc/SYS.h **** 
 284:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA5_Msk         (1UL<<5)            /*!< GPA_MFP PA.5 mask */
 285:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA5_Msk         NULL                /*!< No ALT_MFP PA.5 mask */
 286:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA5_Msk        NULL                /*!< No ALT_MFP1 PA.5 mask */
 287:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA5_Msk        NULL                /*!< No ALT_MFP2 PA.5 mask */
 288:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA5_Msk        NULL                /*!< No ALT_MFP3 PA.5 mask */
 289:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA5_Msk        (1UL<<4)            /*!< ALT_MFP4 PA.5 mask */
 290:./bsp/inc/SYS.h **** 
 291:./bsp/inc/SYS.h **** //PA.6
 292:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA6_GPIO        0x00000000UL        /*!< GPA_MFP PA.6 setting for GPIO */
 293:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA6_GPIO        NULL                /*!< No ALT_MFP setting for PA.6 */
 294:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA6_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.6 */
 295:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA6_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.6 */
 296:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA6_GPIO       NULL                /*!< No ALT_MFP3 setting for PA.6 */
 297:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA6_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.6 setting for GPIO */
 298:./bsp/inc/SYS.h **** 
 299:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA6_ADC6        (1UL<<6)            /*!< GPA_MFP PA.6 setting for ADC6 */
 300:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA6_ADC6        NULL                /*!< No ALT_MFP setting for PA.6 */
 301:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA6_ADC6       NULL                /*!< No ALT_MFP1 setting for PA.6 */
 302:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA6_ADC6       NULL                /*!< No ALT_MFP2 setting for PA.6 */
 303:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA6_ADC6       NULL                /*!< No ALT_MFP3 setting for PA.6 */
 304:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA6_ADC6       0x00000000UL        /*!< ALT_MFP4 PA.6 setting for ADC6 */
 305:./bsp/inc/SYS.h **** 
 306:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA6_UART3_TXD   (1UL<<6)            /*!< GPA_MFP PA.6 setting for UART3_TXD */
 307:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA6_UART3_TXD   NULL                /*!< No ALT_MFP setting for PA.6 */
 308:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA6_UART3_TXD  NULL                /*!< No ALT_MFP1 setting for PA.6 */
 309:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA6_UART3_TXD  NULL                /*!< No ALT_MFP2 setting for PA.6 */
 310:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA6_UART3_TXD  NULL                /*!< No ALT_MFP3 setting for PA.6 */
 311:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA6_UART3_TXD  (1UL<<5)            /*!< ALT_MFP4 PA.6 setting for UART3_TXD */
 312:./bsp/inc/SYS.h **** 
 313:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA6_Msk         (1UL<<6)            /*!< GPA_MFP PA.6 mask */
 314:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA6_Msk         NULL                /*!< No ALT_MFP PA.6 mask */
 315:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA6_Msk        NULL                /*!< No ALT_MFP1 PA.6 mask */
 316:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA6_Msk        NULL                /*!< No ALT_MFP2 PA.6 mask */
 317:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA6_Msk        NULL                /*!< No ALT_MFP3 PA.6 mask */
 318:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA6_Msk        (1UL<<5)            /*!< ALT_MFP4 PA.6 mask */
 319:./bsp/inc/SYS.h **** 
 320:./bsp/inc/SYS.h **** //PA.7
 321:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA7_GPIO        0x00000000UL        /*!< GPA_MFP PA.7 setting for GPIO */
 322:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA7_GPIO        NULL                /*!< No ALT_MFP setting for PA.7 */
 323:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA7_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.7 */
 324:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA7_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.7 */
 325:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA7_GPIO       NULL                /*!< No ALT_MFP3 setting for PA.7 */
 326:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA7_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.7 setting for GPIO */
 327:./bsp/inc/SYS.h **** 
 328:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA7_ADC7        (1UL<<7)            /*!< GPA_MFP PA.7 setting for ADC7 */
 329:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA7_ADC7        NULL                /*!< No ALT_MFP setting for PA.7 */
 330:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA7_ADC7       NULL                /*!< No ALT_MFP1 setting for PA.7 */
 331:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA7_ADC7       NULL                /*!< No ALT_MFP2 setting for PA.7 */
 332:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA7_ADC7       NULL                /*!< No ALT_MFP3 setting for PA.7 */
 333:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA7_ADC7       0x00000000UL        /*!< ALT_MFP4 PA.7 setting for ADC7 */
 334:./bsp/inc/SYS.h **** 
 335:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA7_VREF        (1UL<<7)            /*!< GPA_MFP PA.7 setting for VREF */
 336:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA7_VREF        NULL                /*!< No ALT_MFP setting for PA.7 */
 337:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA7_VREF       NULL                /*!< No ALT_MFP1 setting for PA.7 */
 338:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA7_VREF       NULL                /*!< No ALT_MFP2 setting for PA.7 */
 339:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA7_VREF       NULL                /*!< No ALT_MFP3 setting for PA.7 */
 340:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA7_VREF       (1UL<<14)           /*!< ALT_MFP4 PA.7 setting for VREF */
 341:./bsp/inc/SYS.h **** 
 342:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA7_Msk         (1UL<<7)            /*!< GPA_MFP PA.7 mask */
 343:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA7_Msk         NULL                /*!< No ALT_MFP PA.7 mask */
 344:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA7_Msk        NULL                /*!< No ALT_MFP1 PA.7 mask */
 345:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA7_Msk        NULL                /*!< No ALT_MFP2 PA.7 mask */
 346:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA7_Msk        NULL                /*!< No ALT_MFP3 PA.7 mask */
 347:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA7_Msk        (1UL<<14)            /*!< ALT_MFP4 PA.7 mask */
 348:./bsp/inc/SYS.h **** 
 349:./bsp/inc/SYS.h **** //PA.8
 350:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA8_GPIO        0x00000000UL        /*!< GPA_MFP PA.8 setting for GPIO */
 351:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA8_GPIO        NULL                /*!< No ALT_MFP setting for PA.8 */
 352:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA8_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.8 */
 353:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA8_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.8 */
 354:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA8_GPIO       NULL                /*!< No ALT_MFP3 setting for PA.8 */
 355:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA8_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.8 setting for GPIO */
 356:./bsp/inc/SYS.h **** 
 357:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA8_I2C0_SDA     (1UL<<8)           /*!< GPA_MFP PA.8 setting for I2C0_SDA */
 358:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA8_I2C0_SDA    NULL                /*!< No ALT_MFP setting for PA.8 */
 359:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA8_I2C0_SDA   NULL                /*!< No ALT_MFP1 setting for PA.8 */
 360:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA8_I2C0_SDA   NULL                /*!< No ALT_MFP2 setting for PA.8 */
 361:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA8_I2C0_SDA   NULL                /*!< No ALT_MFP3 setting for PA.8 */
 362:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA8_I2C0_SDA   0x00000000UL        /*!< ALT_MFP4 PA.8 setting for I2C0_SDA */
 363:./bsp/inc/SYS.h **** 
 364:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA8_UART_nRTS    (1UL<<8)           /*!< GPA_MFP PA.8 setting for UART_nRTS */
 365:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA8_UART_nRTS   NULL                /*!< No ALT_MFP setting for PA.8 */
 366:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA8_UART_nRTS  NULL                /*!< No ALT_MFP1 setting for PA.8 */
 367:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA8_UART_nRTS  NULL                /*!< No ALT_MFP2 setting for PA.8 */
 368:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA8_UART_nRTS  NULL                /*!< No ALT_MFP3 setting for PA.8 */
 369:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA8_UART_nRTS  (1UL<<0)            /*!< ALT_MFP4 PA.8 setting for UART_nRTS */
 370:./bsp/inc/SYS.h **** 
 371:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA8_Msk         (1UL<<8)            /*!< GPA_MFP PA.8 mask */
 372:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA8_Msk         NULL                /*!< No ALT_MFP PA.8 mask */
 373:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA8_Msk        NULL                /*!< No ALT_MFP1 PA.8 mask */
 374:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA8_Msk        NULL                /*!< No ALT_MFP2 PA.8 mask */
 375:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA8_Msk        NULL                /*!< No ALT_MFP3 PA.8 mask */
 376:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA8_Msk        (1UL<<0)            /*!< ALT_MFP4 PA.8 mask */
 377:./bsp/inc/SYS.h **** 
 378:./bsp/inc/SYS.h **** //PA.9
 379:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA9_GPIO        0x00000000UL        /*!< GPA_MFP PA.9 setting for GPIO */
 380:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA9_GPIO        NULL                /*!< No ALT_MFP setting for PA.9 */
 381:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA9_GPIO       NULL                /*!< No ALT_MFP1 setting for PA.9 */
 382:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA9_GPIO       NULL                /*!< No ALT_MFP2 setting for PA.9 */
 383:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA9_GPIO       NULL                /*!< No ALT_MFP3 setting for PA.9 */
 384:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA9_GPIO       0x00000000UL        /*!< ALT_MFP4 PA.9 setting for GPIO */
 385:./bsp/inc/SYS.h **** 
 386:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA9_I2C0_SCL    (1UL<<9)            /*!< GPA_MFP PA.9 setting for I2C0_SCL */
 387:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA9_I2C0_SCL    NULL                /*!< No ALT_MFP setting for PA.9 */
 388:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA9_I2C0_SCL   NULL                /*!< No ALT_MFP1 setting for PA.9 */
 389:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA9_I2C0_SCL   NULL                /*!< No ALT_MFP2 setting for PA.9 */
 390:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA9_I2C0_SCL   NULL                /*!< No ALT_MFP3 setting for PA.9 */
 391:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA9_I2C0_SCL   0x00000000UL        /*!< ALT_MFP4 PA.9 setting for I2C0_SCL */
 392:./bsp/inc/SYS.h **** 
 393:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA9_UART1_nCTS   (1UL<<9)           /*!< GPA_MFP PA.9 setting for UART1_nCTS */
 394:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA9_UART1_nCTS   NULL               /*!< No ALT_MFP setting for PA.9 */
 395:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA9_UART1_nCTS  NULL               /*!< No ALT_MFP1 setting for PA.9 */
 396:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA9_UART1_nCTS  NULL               /*!< No ALT_MFP2 setting for PA.9 */
 397:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA9_UART1_nCTS  NULL               /*!< No ALT_MFP3 setting for PA.9 */
 398:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA9_UART1_nCTS  (1UL<<1)           /*!< ALT_MFP4 PA.9 setting for UART1_nCTS *
 399:./bsp/inc/SYS.h **** 
 400:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA9_Msk          (1UL<<9)           /*!< GPA_MFP PA.9 mask */
 401:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA9_Msk          NULL               /*!< No ALT_MFP PA.9 mask */
 402:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA9_Msk         NULL               /*!< No ALT_MFP1 PA.9 mask */
 403:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA9_Msk         NULL               /*!< No ALT_MFP2 PA.9 mask */
 404:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA9_Msk         NULL               /*!< No ALT_MFP3 PA.9 mask */
 405:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA9_Msk         (1UL<<1)           /*!< ALT_MFP4 PA.9 mask */
 406:./bsp/inc/SYS.h **** 
 407:./bsp/inc/SYS.h **** //PA.10
 408:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA10_GPIO        0x00000000UL       /*!< GPA_MFP PA.10 setting for GPIO */
 409:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA10_GPIO        NULL               /*!< No ALT_MFP setting for PA.10 */
 410:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA10_GPIO       NULL               /*!< No ALT_MFP1 setting for PA.10 */
 411:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA10_GPIO       NULL               /*!< No ALT_MFP2 setting for PA.10 */
 412:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA10_GPIO       0x00000000UL       /*!< ALT_MFP3 PA.10 setting for GPIO */
 413:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA10_GPIO       NULL               /*!< No ALT_MFP4 setting for PA.10 */
 414:./bsp/inc/SYS.h **** 
 415:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA10_I2C1_SDA    (1UL<<10)          /*!< GPA_MFP PA.10 setting for I2C1_SDA */
 416:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA10_I2C1_SDA    NULL               /*!< No ALT_MFP setting for PA.10 */
 417:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA10_I2C1_SDA   NULL               /*!< No ALT_MFP1 setting for PA.10 */
 418:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA10_I2C1_SDA   NULL               /*!< No ALT_MFP2 setting for PA.10 */
 419:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA10_I2C1_SDA   0x00000000UL       /*!< ALT_MFP3 PA.10 setting for I2C1_SDA */
 420:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA10_I2C1_SDA   NULL               /*!< No ALT_MFP4 setting for PA.10 */
 421:./bsp/inc/SYS.h **** 
 422:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA10_PWM1_CH2    (1UL<<10)          /*!< GPA_MFP PA.10 setting for PWM1_CH2 */
 423:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA10_PWM1_CH2    NULL               /*!< No ALT_MFP setting for PA.10 */
 424:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA10_PWM1_CH2   NULL               /*!< No ALT_MFP1 setting for PA.10 */
 425:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA10_PWM1_CH2   NULL               /*!< No ALT_MFP2 setting for PA.10 */
 426:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA10_PWM1_CH2   (1UL<<8)           /*!< ALT_MFP3 PA.10 setting for PWM1_CH2 */
 427:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA10_PWM1_CH2   NULL               /*!< No ALT_MFP4 setting for PA.10 */
 428:./bsp/inc/SYS.h **** 
 429:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA10_Msk         (1UL<<10)          /*!< GPA_MFP PA.10 mask */
 430:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA10_Msk         NULL               /*!< No ALT_MFP PA.10 mask */
 431:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA10_Msk        NULL               /*!< No ALT_MFP1 PA.10 mask */
 432:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA10_Msk        NULL               /*!< No ALT_MFP2 PA.10 mask */
 433:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA10_Msk        (1UL<<8)           /*!< ALT_MFP3 PA.10 mask */
 434:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA10_Msk        NULL               /*!< No ALT_MFP4 PA.10 mask */
 435:./bsp/inc/SYS.h **** 
 436:./bsp/inc/SYS.h **** //PA.11
 437:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA11_GPIO        0x00000000UL       /*!< GPA_MFP PA.11 setting for GPIO */
 438:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA11_GPIO        NULL               /*!< No ALT_MFP setting for PA.11 */
 439:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA11_GPIO       NULL               /*!< No ALT_MFP1 setting for PA.11 */
 440:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA11_GPIO       NULL               /*!< No ALT_MFP2 setting for PA.11 */
 441:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA11_GPIO       0x00000000UL       /*!< ALT_MFP3 PA.11 setting for GPIO */
 442:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA11_GPIO       NULL               /*!< No ALT_MFP4 setting for PA.11 */
 443:./bsp/inc/SYS.h **** 
 444:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA11_I2C1_SCL    (1UL<<11)          /*!< GPA_MFP PA.11 setting for I2C1_SCL */
 445:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA11_I2C1_SCL    NULL               /*!< No ALT_MFP setting for PA.11 */
 446:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA11_I2C1_SCL   NULL               /*!< No ALT_MFP1 setting for PA.11 */
 447:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA11_I2C1_SCL   NULL               /*!< No ALT_MFP2 setting for PA.11 */
 448:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA11_I2C1_SCL   0x00000000UL       /*!< ALT_MFP3 PA.11 setting for I2C1_SCL */
 449:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA11_I2C1_SCL   NULL               /*!< No ALT_MFP4 setting for PA.11 */
 450:./bsp/inc/SYS.h **** 
 451:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA11_PWM1_CH3    (1UL<<11)          /*!< GPA_MFP PA.11 setting for PWM1_CH3 */
 452:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA11_PWM1_CH3    NULL               /*!< No ALT_MFP setting for PA.11 */
 453:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA11_PWM1_CH3   NULL               /*!< No ALT_MFP1 setting for PA.11 */
 454:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA11_PWM1_CH3   NULL               /*!< No ALT_MFP2 setting for PA.11 */
 455:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA11_PWM1_CH3   (1UL<<9)           /*!< ALT_MFP3 PA.11 setting for PWM1_CH3 */
 456:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA11_PWM1_CH3   NULL               /*!< No ALT_MFP4 setting for PA.11 */
 457:./bsp/inc/SYS.h **** 
 458:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA11_Msk         (1UL<<11)          /*!< GPA_MFP PA.11 mask */
 459:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA11_Msk         NULL               /*!< No ALT_MFP PA.11 mask */
 460:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA11_Msk        NULL               /*!< No ALT_MFP1 PA.11 mask */
 461:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA11_Msk        NULL               /*!< No ALT_MFP2 PA.11 mask */
 462:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA11_Msk        (1UL<<9)           /*!< ALT_MFP3 PA.11 mask */
 463:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA11_Msk        NULL               /*!< No ALT_MFP4 PA.11 mask */
 464:./bsp/inc/SYS.h **** 
 465:./bsp/inc/SYS.h **** //PA.12
 466:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA12_GPIO        0x00000000UL       /*!< GPA_MFP PA.12 setting for GPIO */
 467:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA12_GPIO        NULL               /*!< No ALT_MFP setting for PA.12 */
 468:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA12_GPIO       NULL               /*!< No ALT_MFP1 setting for PA.12 */
 469:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA12_GPIO       NULL               /*!< No ALT_MFP2 setting for PA.12 */
 470:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA12_GPIO       NULL               /*!< No ALT_MFP3 setting for PA.12 */
 471:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA12_GPIO       0x00000000UL       /*!< ALT_MFP4 PA.12 setting for for GPIO */
 472:./bsp/inc/SYS.h **** 
 473:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA12_PWM0_CH0    (1UL<<12)          /*!< GPA_MFP PA.12 setting for PWM0_CH0 */
 474:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA12_PWM0_CH0    NULL               /*!< No ALT_MFP setting for PA.12 */
 475:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA12_PWM0_CH0   NULL               /*!< No ALT_MFP1 setting for PA.12 */
 476:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA12_PWM0_CH0   NULL               /*!< No ALT_MFP2 setting for PA.12 */
 477:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA12_PWM0_CH0   NULL               /*!< No ALT_MFP3 setting for PA.12 */
 478:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA12_PWM0_CH0   0x00000000UL       /*!< ALT_MFP4 PA.12 setting for PWM0_CH0 */
 479:./bsp/inc/SYS.h **** 
 480:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA12_UART5_RXD   (1UL<<12)          /*!< GPA_MFP PA.12 setting for UART5_RXD */
 481:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA12_UART5_RXD   NULL               /*!< No ALT_MFP setting for PA.12 */
 482:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA12_UART5_RXD  NULL               /*!< No ALT_MFP1 setting for PA.12 */
 483:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA12_UART5_RXD  NULL               /*!< No ALT_MFP2 setting for PA.12 */
 484:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA12_UART5_RXD  NULL               /*!< No ALT_MFP3 setting for PA.12 */
 485:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA12_UART5_RXD  (1UL<<8)           /*!< ALT_MFP4 PA.12 setting for  UART5_RXD 
 486:./bsp/inc/SYS.h **** 
 487:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA12_Msk         (1UL<<12)          /*!< GPA_MFP PA.12 mask */
 488:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA12_Msk         NULL               /*!< No ALT_MFP PA.12 mask */
 489:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA12_Msk        NULL               /*!< No ALT_MFP1 PA.12 mask */
 490:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA12_Msk        NULL               /*!< No ALT_MFP2 PA.12 mask */
 491:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA12_Msk        NULL               /*!< No ALT_MFP3 PA.12 mask */
 492:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA12_Msk        (1UL<<8)           /*!< ALT_MFP4 PA.12 mask */
 493:./bsp/inc/SYS.h **** 
 494:./bsp/inc/SYS.h **** //PA.13
 495:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA13_GPIO        0x00000000UL       /*!< GPA_MFP PA.13 setting for GPIO */
 496:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA13_GPIO        NULL               /*!< No ALT_MFP setting for PA.13 */
 497:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA13_GPIO       NULL               /*!< No ALT_MFP1 setting for PA.13 */
 498:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA13_GPIO       NULL               /*!< No ALT_MFP2 setting for PA.13 */
 499:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA13_GPIO       NULL               /*!< No ALT_MFP3 setting for PA.13 */
 500:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA13_GPIO       0x00000000UL       /*!< ALT_MFP4 PA.13 setting for for GPIO */
 501:./bsp/inc/SYS.h **** 
 502:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA13_PWM0_CH1    (1UL<<13)          /*!< GPA_MFP PA.13 setting for PWM0_CH1 */
 503:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA13_PWM0_CH1    NULL               /*!< No ALT_MFP setting for PA.13 */
 504:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA13_PWM0_CH1   NULL               /*!< No ALT_MFP1 setting for PA.13 */
 505:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA13_PWM0_CH1   NULL               /*!< No ALT_MFP2 setting for PA.13 */
 506:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA13_PWM0_CH1   NULL               /*!< No ALT_MFP3 setting for PA.13 */
 507:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA13_PWM0_CH1   0x00000000UL       /*!< ALT_MFP4 PA.13 setting for PWM0_CH1 */
 508:./bsp/inc/SYS.h **** 
 509:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA13_UART5_TXD   (1UL<<13)          /*!< GPA_MFP PA.13 setting for UART5_TXD */
 510:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA13_UART5_TXD   NULL               /*!< No ALT_MFP setting for PA.13 */
 511:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA13_UART5_TXD  NULL               /*!< No ALT_MFP1 setting for PA.13 */
 512:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA13_UART5_TXD  NULL               /*!< No ALT_MFP2 setting for PA.13 */
 513:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA13_UART5_TXD  NULL               /*!< No ALT_MFP3 setting for PA.13 */
 514:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA13_UART5_TXD  (1UL<<9)           /*!< ALT_MFP4 PA.13 setting for UART5_TXD *
 515:./bsp/inc/SYS.h **** 
 516:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA13_Msk         (1UL<<13)          /*!< GPA_MFP PA.13 mask */
 517:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA13_Msk         NULL               /*!< No ALT_MFP PA.13 mask */
 518:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA13_Msk        NULL               /*!< No ALT_MFP1 PA.13 mask */
 519:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA13_Msk        NULL               /*!< No ALT_MFP2 PA.13 mask */
 520:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA13_Msk        NULL               /*!< No ALT_MFP3 PA.13 mask */
 521:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA13_Msk        (1UL<<9)           /*!< ALT_MFP4 PA.13 mask */
 522:./bsp/inc/SYS.h **** 
 523:./bsp/inc/SYS.h **** //PA.14
 524:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA14_GPIO        0x00000000UL       /*!< GPA_MFP PA.14 setting for GPIO */
 525:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA14_GPIO        NULL               /*!< No ALT_MFP setting for PA.14 */
 526:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA14_GPIO       NULL               /*!< No ALT_MFP1 setting for PA.14 */
 527:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA14_GPIO       NULL               /*!< No ALT_MFP2 setting for PA.14 */
 528:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA14_GPIO       NULL               /*!< No ALT_MFP3 setting for PA.14 */
 529:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA14_GPIO       NULL               /*!< No ALT_MFP4 setting for PA.14 */
 530:./bsp/inc/SYS.h **** 
 531:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA14_PWM0_CH2    (1UL<<14)          /*!< GPA_MFP PA.14 setting for PWM0_CH2 */
 532:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA14_PWM0_CH2    NULL               /*!< No ALT_MFP setting for PA.14 */
 533:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA14_PWM0_CH2   NULL               /*!< No ALT_MFP1 setting for PA.14 */
 534:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA14_PWM0_CH2   NULL               /*!< No ALT_MFP2 setting for PA.14 */
 535:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA14_PWM0_CH2   NULL               /*!< No ALT_MFP3 setting for PA.14 */
 536:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA14_PWM0_CH2   NULL               /*!< No ALT_MFP4 setting for PA.14 */
 537:./bsp/inc/SYS.h **** 
 538:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA14_Msk         (1UL<<14)          /*!< GPA_MFP PA.14 mask */
 539:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA14_Msk         NULL               /*!< No ALT_MFP PA.14 mask */
 540:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA14_Msk        NULL               /*!< No ALT_MFP1 PA.14 mask */
 541:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA14_Msk        NULL               /*!< No ALT_MFP2 PA.14 mask */
 542:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA14_Msk        NULL               /*!< No ALT_MFP3 PA.14 mask */
 543:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA14_Msk        NULL               /*!< No ALT_MFP4 PA.14 mask */
 544:./bsp/inc/SYS.h **** 
 545:./bsp/inc/SYS.h **** //PA.15
 546:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA15_GPIO        0x00000000UL       /*!< GPA_MFP PA.15 setting for GPIO */
 547:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA15_GPIO        NULL               /*!< No ALT_MFP setting for PA.15 */
 548:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA15_GPIO       NULL               /*!< No ALT_MFP1 setting for PA.15 */
 549:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA15_GPIO       NULL               /*!< No ALT_MFP2 setting for PA.15 */
 550:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA15_GPIO       NULL               /*!< No ALT_MFP3 setting for PA.15 */
 551:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA15_GPIO       NULL               /*!< No ALT_MFP4 setting for PA.15 */
 552:./bsp/inc/SYS.h **** 
 553:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA15_PWM0_CH3    (1UL<<15)          /*!< GPA_MFP PA.15 setting for PWM0_CH3 */
 554:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA15_PWM0_CH3    NULL               /*!< No ALT_MFP setting for PA.15 */
 555:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA15_PWM0_CH3   NULL               /*!< No ALT_MFP1 setting for PA.15 */
 556:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA15_PWM0_CH3   NULL               /*!< No ALT_MFP2 setting for PA.15 */
 557:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA15_PWM0_CH3   NULL               /*!< No ALT_MFP3 setting for PA.15 */
 558:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA15_PWM0_CH3   NULL               /*!< No ALT_MFP4 setting for PA.15 */
 559:./bsp/inc/SYS.h **** 
 560:./bsp/inc/SYS.h **** #define SYS_GPA_MFP_PA15_Msk         (1UL<<15)          /*!< GPA_MFP PA.14 mask */
 561:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PA15_Msk         NULL               /*!< No ALT_MFP PA.14 mask */
 562:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PA15_Msk        NULL               /*!< No ALT_MFP1 PA.14 mask */
 563:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PA15_Msk        NULL               /*!< No ALT_MFP2 PA.14 mask */
 564:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PA15_Msk        NULL               /*!< No ALT_MFP3 PA.14 mask */
 565:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PA15_Msk        NULL               /*!< No ALT_MFP4 PA.14 mask */
 566:./bsp/inc/SYS.h **** 
 567:./bsp/inc/SYS.h **** //PB.0
 568:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB0_GPIO         0x00000000UL       /*!< GPB_MFP PB.0 setting for GPIO */
 569:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB0_GPIO         NULL               /*!< No ALT_MFP setting for PB.0 */
 570:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB0_GPIO        NULL               /*!< No ALT_MFP1 setting for PB.0 */
 571:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB0_GPIO        NULL               /*!< No ALT_MFP2 setting for PB.0 */
 572:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB0_GPIO        NULL               /*!< No ALT_MFP3 setting for PB.0 */
 573:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB0_GPIO        NULL               /*!< No ALT_MFP4 setting for PB.0 */
 574:./bsp/inc/SYS.h **** 
 575:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB0_UART0_RXD    (1UL<<0)           /*!< GPB_MFP PB.0 setting for UART0_RXD */
 576:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB0_UART0_RXD    NULL               /*!< No ALT_MFP setting for PB.0 */
 577:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB0_UART0_RXD   NULL               /*!< No ALT_MFP1 setting for PB.0 */
 578:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB0_UART0_RXD   NULL               /*!< No ALT_MFP2 setting for PB.0 */
 579:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB0_UART0_RXD   NULL               /*!< No ALT_MFP3 setting for PB.0 */
 580:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB0_UART0_RXD   NULL               /*!< No ALT_MFP4 setting for PB.0 */
 581:./bsp/inc/SYS.h **** 
 582:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB0_Msk          (1UL<<0)           /*!< GPB_MFP PB.0 mask */
 583:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB0_Msk          NULL               /*!< No ALT_MFP PB.0 mask */
 584:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB0_Msk         NULL               /*!< No ALT_MFP1 PB.0 mask */
 585:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB0_Msk         NULL               /*!< No ALT_MFP2 PB.0 mask */
 586:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB0_Msk         NULL               /*!< No ALT_MFP3 PB.0 mask */
 587:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB0_Msk         NULL               /*!< No ALT_MFP4 PB.0 mask */
 588:./bsp/inc/SYS.h **** 
 589:./bsp/inc/SYS.h **** //PB.1
 590:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB1_GPIO         0x00000000UL       /*!< GPB_MFP PB.1 setting for GPIO */
 591:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB1_GPIO         NULL               /*!< No ALT_MFP setting for PB.1 */
 592:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB1_GPIO        NULL               /*!< No ALT_MFP1 setting for PB.1 */
 593:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB1_GPIO        NULL               /*!< No ALT_MFP2 setting for PB.1 */
 594:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB1_GPIO        NULL               /*!< No ALT_MFP3 setting for PB.1 */
 595:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB1_GPIO        NULL               /*!< No ALT_MFP4 setting for PB.1 */
 596:./bsp/inc/SYS.h **** 
 597:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB1_UART0_TXD    (1UL<<1)           /*!< GPB_MFP PB.1 setting for UART0_TXD */
 598:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB1_UART0_TXD    NULL               /*!< No ALT_MFP setting for PB.1 */
 599:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB1_UART0_TXD   NULL               /*!< No ALT_MFP1 setting for PB.1 */
 600:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB1_UART0_TXD   NULL               /*!< No ALT_MFP2 setting for PB.1 */
 601:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB1_UART0_TXD   NULL               /*!< No ALT_MFP3 setting for PB.1 */
 602:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB1_UART0_TXD   NULL               /*!< No ALT_MFP4 setting for PB.1 */
 603:./bsp/inc/SYS.h **** 
 604:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB1_Msk          (1UL<<1)           /*!< GPB_MFP PB.1 mask */
 605:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB1_Msk          NULL               /*!< No ALT_MFP PB.1 mask */
 606:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB1_Msk         NULL               /*!< No ALT_MFP1 PB.1 mask */
 607:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB1_Msk         NULL               /*!< No ALT_MFP2 PB.1 mask */
 608:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB1_Msk         NULL               /*!< No ALT_MFP3 PB.1 mask */
 609:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB1_Msk         NULL               /*!< No ALT_MFP4 PB.1 mask */
 610:./bsp/inc/SYS.h **** 
 611:./bsp/inc/SYS.h **** //PB.2
 612:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB2_GPIO         0x00000000UL       /*!< GPB_MFP PB.2 setting for GPIO */
 613:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB2_GPIO         0x00000000UL       /*!< ALT_MFP PB.2 setting for GPIO */
 614:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB2_GPIO        NULL               /*!< No ALT_MFP1 setting for PB.2 */
 615:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB2_GPIO        0x00000000UL       /*!< ALT_MFP2 PB.2 setting for GPIO */
 616:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB2_GPIO        0x00000000UL       /*!< ALT_MFP3 PB.2 setting for GPIO */
 617:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB2_GPIO        NULL               /*!< No ALT_MFP4 setting for PB.2 */
 618:./bsp/inc/SYS.h **** 
 619:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB2_UART0_nRTS   (1UL<<2)           /*!< GPB_MFP PB.2 setting for UART0_nRTS */
 620:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB2_UART0_nRTS   0x00000000UL       /*!< ALT_MFP PB.2 setting for UART0_nRTS */
 621:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB2_UART0_nRTS  NULL               /*!< No ALT_MFP1 setting for PB.2 */
 622:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB2_UART0_nRTS  0x00000000UL       /*!< ALT_MFP2 PB.2 setting for UART0_nRTS *
 623:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB2_UART0_nRTS  0x00000000UL       /*!< ALT_MFP3 PB.2 setting for UART0_nRTS *
 624:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB2_UART0_nRTS  NULL               /*!< No ALT_MFP4 setting for PB.2 */
 625:./bsp/inc/SYS.h **** 
 626:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB2_TM2_EXT      (1UL<<2)           /*!< GPB_MFP PB.2 setting for TM2_EXT */
 627:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB2_TM2_EXT      (1UL<<26)          /*!< ALT_MFP PB.2 setting for TM2_EXT */
 628:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB2_TM2_EXT     NULL               /*!< No ALT_MFP1 setting for PB.2 */
 629:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB2_TM2_EXT     0x00000000UL       /*!< ALT_MFP2 PB.2 setting for TM2_EXT */
 630:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB2_TM2_EXT     0x00000000UL       /*!< ALT_MFP3 PB.2 setting for TM2_EXT */
 631:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB2_TM2_EXT     NULL               /*!< No ALT_MFP4 setting for PB.2 */
 632:./bsp/inc/SYS.h **** 
 633:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB2_PWM1_BREAK1   (1UL<<2)          /*!< GPB_MFP PB.2 setting for PWM1_BREAK1 *
 634:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB2_PWM1_BREAK1   0x00000000UL      /*!< ALT_MFP PB.2 setting for PWM1_BREAK1 *
 635:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB2_PWM1_BREAK1  NULL              /*!< No ALT_MFP1 setting for PB.2 */
 636:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB2_PWM1_BREAK1  0x00000000UL      /*!< ALT_MFP2 PB.2 setting for PWM1_BREAK1 
 637:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB2_PWM1_BREAK1  (1UL<<31)         /*!< ALT_MFP3 PB.2 setting for PWM1_BREAK1 
 638:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB2_PWM1_BREAK1  NULL              /*!< No ALT_MFP4 setting for PB.2 */
 639:./bsp/inc/SYS.h **** 
 640:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB2_TM2          (1UL<<2)           /*!< GPB_MFP PB.2 setting for TM2 */
 641:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB2_TM2          0x00000000UL       /*!< ALT_MFP PB.2 setting for TM2 */
 642:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB2_TM2         NULL               /*!< No ALT_MFP1 setting for PB.2 */
 643:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB2_TM2         (1UL<<4)           /*!< ALT_MFP2 PB.2 setting for TM2 */
 644:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB2_TM2         0x00000000UL       /*!< ALT_MFP3 PB.2 setting for TM2 */
 645:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB2_TM2         NULL               /*!< No ALT_MFP4 setting for PB.2 */
 646:./bsp/inc/SYS.h **** 
 647:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB2_Msk          (1UL<<2)           /*!< GPB_MFP PB.2 mask */
 648:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB2_Msk          (1UL<<26)          /*!< ALT_MFP PB.2 mask */
 649:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB2_Msk         NULL               /*!< No ALT_MFP1 PB.2 mask */
 650:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB2_Msk         (1UL<<4)           /*!< ALT_MFP2 PB.2 mask */
 651:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB2_Msk         (1UL<<31)          /*!< ALT_MFP3 PB.2 mask */
 652:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB2_Msk         NULL               /*!< No ALT_MFP4 PB.2 mask */
 653:./bsp/inc/SYS.h **** 
 654:./bsp/inc/SYS.h **** //PB.3
 655:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB3_GPIO         0x00000000UL       /*!< GPB_MFP PB.3 setting for GPIO */
 656:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB3_GPIO         0x00000000UL       /*!< ALT_MFP PB.3 setting for GPIO */
 657:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB3_GPIO        NULL               /*!< No ALT_MFP1 setting for PB.3 */
 658:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB3_GPIO        0x00000000UL       /*!< ALT_MFP2 PB.3 setting for GPIO */
 659:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB3_GPIO        0x00000000UL       /*!< ALT_MFP3 PB.3 setting for GPIO */
 660:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB3_GPIO        NULL               /*!< No ALT_MFP4 setting for PB.3 */
 661:./bsp/inc/SYS.h **** 
 662:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB3_UART_nCTS    (1UL<<3)           /*!< GPB_MFP PB.3 setting for UART_nCTS */
 663:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB3_UART_nCTS    0x00000000UL       /*!< ALT_MFP PB.3 setting for UART_nCTS */
 664:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB3_UART_nCTS   NULL               /*!< No ALT_MFP1 setting for PB.3 */
 665:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB3_UART_nCTS   0x00000000UL       /*!< ALT_MFP2 PB.3 setting for UART_nCTS */
 666:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB3_UART_nCTS   0x00000000UL       /*!< ALT_MFP3 PB.3 setting for UART_nCTS */
 667:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB3_UART_nCTS   NULL               /*!< No ALT_MFP4 setting for PB.3 */
 668:./bsp/inc/SYS.h **** 
 669:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB3_TM3_EXT      (1UL<<3)           /*!< GPB_MFP PB.3 setting for TM3_EXT */
 670:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB3_TM3_EXT      (1UL<<27)          /*!< ALT_MFP PB.3 setting for TM3_EXT */
 671:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB3_TM3_EXT     NULL               /*!< No ALT_MFP1 setting for PB.3 */
 672:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB3_TM3_EXT     0x00000000UL       /*!< ALT_MFP2 PB.3 setting for TM3_EXT */
 673:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB3_TM3_EXT     0x00000000UL       /*!< ALT_MFP3 PB.3 setting for TM3_EXT */
 674:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB3_TM3_EXT     NULL               /*!< No ALT_MFP4 setting for PB.3 */
 675:./bsp/inc/SYS.h **** 
 676:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB3_PWM1_BREAK0     (1UL<<3)        /*!< GPB_MFP PB.3 setting for PWM1_BREAK0 *
 677:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB3_PWM1_BREAK0     0000000UL       /*!< ALT_MFP PB.3 setting for PWM1_BREAK0 *
 678:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB3_PWM1_BREAK0    NULL            /*!< No ALT_MFP1 setting for PB.3 */
 679:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB3_PWM1_BREAK0    0x00000000UL    /*!< ALT_MFP2 PB.3 setting for PWM1_BREAK0 
 680:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB3_PWM1_BREAK0    (1UL<<30)       /*!< ALT_MFP3 PB.3 setting for PWM1_BREAK0 
 681:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB3_PWM1_BREAK0    NULL            /*!< No ALT_MFP4 setting for PB.3 */
 682:./bsp/inc/SYS.h **** 
 683:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB3_TM3         (1UL<<3)            /*!< GPB_MFP PB.3 setting for TM3 */
 684:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB3_TM3         0000000UL           /*!< ALT_MFP PB.3 setting for TM3 */
 685:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB3_TM3        NULL                /*!< No ALT_MFP1 setting for PB.3 */
 686:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB3_TM3        (1UL<<5)            /*!< ALT_MFP2 PB.3 setting for TM3 */
 687:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB3_TM3        0x00000000UL        /*!< ALT_MFP3 PB.3 setting for TM3 */
 688:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB3_TM3        NULL                /*!< No ALT_MFP4 setting for PB.3 */
 689:./bsp/inc/SYS.h **** 
 690:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB3_Msk         (1UL<<3)            /*!< GPB_MFP PB.3 mask */
 691:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB3_Msk         (1UL<<27)           /*!< ALT_MFP PB.3 mask */
 692:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB3_Msk        NULL                /*!< No ALT_MFP1 PB.3 mask */
 693:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB3_Msk        (1UL<<5)            /*!< ALT_MFP2 PB.3 mask */
 694:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB3_Msk        (1UL<<30)           /*!< ALT_MFP3 PB.3 mask */
 695:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB3_Msk        NULL                /*!< No ALT_MFP4 PB.3 mask */
 696:./bsp/inc/SYS.h **** 
 697:./bsp/inc/SYS.h **** //PB.4
 698:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB4_GPIO        0x00000000UL        /*!< GPB_MFP PB.4 setting for GPIO */
 699:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB4_GPIO        NULL                /*!< No ALT_MFP setting for PB.4 */
 700:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB4_GPIO       NULL                /*!< No ALT_MFP1 setting for PB.4 */
 701:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB4_GPIO       NULL                /*!< No ALT_MFP2 setting for PB.4 */
 702:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB4_GPIO       NULL                /*!< No ALT_MFP3 setting for PB.4 */
 703:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB4_GPIO       NULL                /*!< No ALT_MFP4 setting for PB.4 */
 704:./bsp/inc/SYS.h **** 
 705:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB4_UART1_RXD   (1UL<<4)            /*!< GPB_MFP PB.4 setting for UART1_RXD */
 706:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB4_UART1_RXD   NULL                /*!< No ALT_MFP setting for PB.4 */
 707:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB4_UART1_RXD  NULL                /*!< No ALT_MFP1 setting for PB.4 */
 708:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB4_UART1_RXD  NULL                /*!< No ALT_MFP2 setting for PB.4 */
 709:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB4_UART1_RXD  NULL                /*!< No ALT_MFP3 setting for PB.4 */
 710:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB4_UART1_RXD  NULL                /*!< No ALT_MFP4 setting for PB.4 */
 711:./bsp/inc/SYS.h **** 
 712:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB4_Msk         (1UL<<4)            /*!< GPB_MFP PB.4 mask */
 713:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB4_Msk         NULL                /*!< No ALT_MFP PB.4 mask */
 714:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB4_Msk        NULL                /*!< No ALT_MFP1 PB.4 mask */
 715:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB4_Msk        NULL                /*!< No ALT_MFP2 PB.4 mask */
 716:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB4_Msk        NULL                /*!< No ALT_MFP3 PB.4 mask */
 717:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB4_Msk        NULL                /*!< No ALT_MFP4 PB.4 mask */
 718:./bsp/inc/SYS.h **** 
 719:./bsp/inc/SYS.h **** //PB.5
 720:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB5_GPIO        0x00000000UL        /*!< GPB_MFP PB.5 setting for GPIO */
 721:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB5_GPIO        NULL                /*!< No ALT_MFP setting for PB.5 */
 722:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB5_GPIO       NULL                /*!< No ALT_MFP1 setting for PB.5 */
 723:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB5_GPIO       NULL                /*!< No ALT_MFP2 setting for PB.5 */
 724:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB5_GPIO       NULL                /*!< No ALT_MFP3 setting for PB.5 */
 725:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB5_GPIO       NULL                /*!< No ALT_MFP4 setting for PB.5 */
 726:./bsp/inc/SYS.h **** 
 727:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB5_UART1_TXD   (1UL<<5)            /*!< GPB_MFP PB.5 setting for UART1_TXD */
 728:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB5_UART1_TXD   NULL                /*!< No ALT_MFP setting for PB.5 */
 729:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB5_UART1_TXD  NULL                /*!< No ALT_MFP1 setting for PB.5 */
 730:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB5_UART1_TXD  NULL                /*!< No ALT_MFP2 setting for PB.5 */
 731:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB5_UART1_TXD  NULL                /*!< No ALT_MFP3 setting for PB.5 */
 732:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB5_UART1_TXD  NULL                /*!< No ALT_MFP4 setting for PB.5 */
 733:./bsp/inc/SYS.h **** 
 734:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB5_Msk         (1UL<<5)            /*!< GPB_MFP PB.5 mask */
 735:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB5_Msk         NULL                /*!< No ALT_MFP PB.5 mask */
 736:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB5_Msk        NULL                /*!< No ALT_MFP1 PB.5 mask */
 737:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB5_Msk        NULL                /*!< No ALT_MFP2 PB.5 mask */
 738:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB5_Msk        NULL                /*!< No ALT_MFP3 PB.5 mask */
 739:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB5_Msk        NULL                /*!< No ALT_MFP4 PB.5 mask */
 740:./bsp/inc/SYS.h **** 
 741:./bsp/inc/SYS.h **** //PB.6
 742:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB6_GPIO        0x00000000UL        /*!< GPB_MFP PB.6 setting for GPIO */
 743:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB6_GPIO        NULL                /*!< No ALT_MFP setting for PB.6 */
 744:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB6_GPIO       NULL                /*!< No ALT_MFP1 setting for PB.6 */
 745:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB6_GPIO       NULL                /*!< No ALT_MFP2 setting for PB.6 */
 746:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB6_GPIO       NULL                /*!< No ALT_MFP3 setting for PB.6 */
 747:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB6_GPIO       NULL                /*!< No ALT_MFP4 setting for PB.6 */
 748:./bsp/inc/SYS.h **** 
 749:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB6_UART1_nRTS      (1UL<<6)        /*!< GPB_MFP PB.6 setting for UART1_nRTS */
 750:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB6_UART1_nRTS      NULL            /*!< No ALT_MFP setting for PB.6 */
 751:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB6_UART1_nRTS     NULL            /*!< No ALT_MFP1 setting for PB.6 */
 752:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB6_UART1_nRTS     NULL            /*!< No ALT_MFP2 setting for PB.6 */
 753:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB6_UART1_nRTS     NULL            /*!< No ALT_MFP3 setting for PB.6 */
 754:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB6_UART1_nRTS     NULL            /*!< No ALT_MFP4 setting for PB.6 */
 755:./bsp/inc/SYS.h **** 
 756:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB6_Msk         (1UL<<6)            /*!< GPB_MFP PB.6 mask */
 757:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB6_Msk         NULL                /*!< No ALT_MFP PB.6 mask */
 758:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB6_Msk        NULL                /*!< No ALT_MFP1 PB.6 mask */
 759:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB6_Msk        NULL                /*!< No ALT_MFP2 PB.6 mask */
 760:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB6_Msk        NULL                /*!< No ALT_MFP3 PB.6 mask */
 761:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB6_Msk        NULL                /*!< No ALT_MFP4 PB.6 mask */
 762:./bsp/inc/SYS.h **** 
 763:./bsp/inc/SYS.h **** //PB.7
 764:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB7_GPIO        0x00000000UL        /*!< GPB_MFP PB.7 setting for GPIO */
 765:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB7_GPIO        NULL                /*!< No ALT_MFP setting for PB.7 */
 766:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB7_GPIO       NULL                /*!< No ALT_MFP1 setting for PB.7 */
 767:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB7_GPIO       NULL                /*!< No ALT_MFP2 setting for PB.7 */
 768:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB7_GPIO       NULL                /*!< No ALT_MFP3 setting for PB.7 */
 769:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB7_GPIO       NULL                /*!< No ALT_MFP4 setting for PB.7 */
 770:./bsp/inc/SYS.h **** 
 771:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB7_UART1_nCTS      (1UL<<7)        /*!< GPB_MFP PB.7 setting for UART1_nCTS */
 772:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB7_UART1_nCTS      NULL            /*!< No ALT_MFP setting for PB.7 */
 773:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB7_UART1_nCTS     NULL            /*!< No ALT_MFP1 setting for PB.7 */
 774:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB7_UART1_nCTS     NULL            /*!< No ALT_MFP2 setting for PB.7 */
 775:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB7_UART1_nCTS     NULL            /*!< No ALT_MFP3 setting for PB.7 */
 776:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB7_UART1_nCTS     NULL            /*!< No ALT_MFP4 setting for PB.7 */
 777:./bsp/inc/SYS.h **** 
 778:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB7_Msk         (1UL<<7)            /*!< GPB_MFP PB.7 mask */
 779:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB7_Msk         NULL                /*!< No ALT_MFP PB.7 mask */
 780:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB7_Msk        NULL                /*!< No ALT_MFP1 PB.7 mask */
 781:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB7_Msk        NULL                /*!< No ALT_MFP2 PB.7 mask */
 782:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB7_Msk        NULL                /*!< No ALT_MFP3 PB.7 mask */
 783:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB7_Msk        NULL                /*!< No ALT_MFP4 PB.7 mask */
 784:./bsp/inc/SYS.h **** 
 785:./bsp/inc/SYS.h **** //PB.8
 786:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB8_GPIO        0x00000000UL        /*!< GPB_MFP PB.8 setting for GPIO */
 787:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB8_GPIO        0x00000000UL        /*!< ALT_MFP PB.8 setting for GPIO */
 788:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB8_GPIO       NULL                /*!< No ALT_MFP1 setting for PB.8 */
 789:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB8_GPIO       NULL                /*!< No ALT_MFP2 setting for PB.8 */
 790:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB8_GPIO       0x00000000UL        /*!< ALT_MFP3 PB.8 setting for GPIO */
 791:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB8_GPIO       NULL                /*!< No ALT_MFP4 setting for PB.8 */
 792:./bsp/inc/SYS.h **** 
 793:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB8_TM0         (1UL<<8)            /*!< GPB_MFP PB.8 setting for TM0 */
 794:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB8_TM0         0x00000000UL        /*!< ALT_MFP PB.8 setting for TM0 */
 795:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB8_TM0        NULL                /*!< No ALT_MFP1 setting for PB.8 */
 796:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB8_TM0        NULL                /*!< No ALT_MFP2 setting for PB.8 */
 797:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB8_TM0        0x00000000UL        /*!< ALT_MFP3 PB.8 setting for TM0 */
 798:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB8_TM0        NULL                /*!< No ALT_MFP4 setting for PB.8 */
 799:./bsp/inc/SYS.h **** 
 800:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB8_CLKO        (1UL<<8)            /*!< GPB_MFP PB.8 setting for CLKO */
 801:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB8_CLKO        (1UL<<29)           /*!< ALT_MFP PB.8 setting for CLKO */
 802:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB8_CLKO       NULL                /*!< No ALT_MFP1 setting for PB.8 */
 803:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB8_CLKO       NULL                /*!< No ALT_MFP2 setting for PB.8 */
 804:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB8_CLKO       0x00000000UL        /*!< ALT_MFP3 PB.8 setting for CLKO */
 805:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB8_CLKO       NULL                /*!< No ALT_MFP4 setting for PB.8 */
 806:./bsp/inc/SYS.h **** 
 807:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB8_BPWM1_CH2   (1UL<<8)            /*!< GPB_MFP PB.8 setting for CLKO */
 808:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB8_BPWM1_CH2   0x00000000UL        /*!< ALT_MFP PB.8 setting for CLKO */
 809:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB8_BPWM1_CH2  NULL                /*!< No ALT_MFP1 setting for PB.8 */
 810:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB8_BPWM1_CH2  NULL                /*!< No ALT_MFP2 setting for PB.8 */
 811:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB8_BPWM1_CH2  (1UL<<20)           /*!< ALT_MFP3 PB.8 setting for CLKO */
 812:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB8_BPWM1_CH2  NULL                /*!< No ALT_MFP4 setting for PB.8 */
 813:./bsp/inc/SYS.h **** 
 814:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB8_Msk         (1UL<<8)            /*!< GPB_MFP PB.8 mask */
 815:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB8_Msk         (1UL<<29)           /*!< ALT_MFP PB.8 mask */
 816:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB8_Msk        NULL                /*!< No ALT_MFP1 PB.8 mask */
 817:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB8_Msk        NULL                /*!< No ALT_MFP2 PB.8 mask */
 818:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB8_Msk        (1UL<<20)           /*!< ALT_MFP3 PB.8 mask */
 819:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB8_Msk        NULL                /*!< No ALT_MFP4 PB.8 mask */
 820:./bsp/inc/SYS.h **** 
 821:./bsp/inc/SYS.h **** //PB.9
 822:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB9_GPIO        0x00000000UL        /*!< GPB_MFP PB.9 setting for GPIO */
 823:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB9_GPIO        NULL                /*!< No ALT_MFP setting for PB.9 */
 824:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB9_GPIO       NULL                /*!< No ALT_MFP1 setting for PB.9 */
 825:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB9_GPIO       NULL                /*!< No ALT_MFP2 setting for PB.9 */
 826:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB9_GPIO       NULL                /*!< No ALT_MFP3 setting for PB.9 */
 827:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB9_GPIO       NULL                /*!< No ALT_MFP4 setting for PB.9 */
 828:./bsp/inc/SYS.h **** 
 829:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB9_TM1         (1UL<<9)            /*!< GPB_MFP PB.9 setting for TM1 */
 830:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB9_TM1         NULL                /*!< No ALT_MFP setting for PB.9 */
 831:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB9_TM1        NULL                /*!< No ALT_MFP1 setting for PB.9 */
 832:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB9_TM1        NULL                /*!< No ALT_MFP2 setting for PB.9 */
 833:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB9_TM1        NULL                /*!< No ALT_MFP3 setting for PB.9 */
 834:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB9_TM1        NULL                /*!< No ALT_MFP4 setting for PB.9 */
 835:./bsp/inc/SYS.h **** 
 836:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB9_Msk         (1UL<<9)            /*!< GPB_MFP PB.9 mask */
 837:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB9_Msk         NULL                /*!< No ALT_MFP PB.9 mask */
 838:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB9_Msk        NULL                /*!< No ALT_MFP1 PB.9 mask */
 839:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB9_Msk        NULL                /*!< No ALT_MFP2 PB.9 mask */
 840:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB9_Msk        NULL                /*!< No ALT_MFP3 PB.9 mask */
 841:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB9_Msk        NULL                /*!< No ALT_MFP4 PB.9 mask */
 842:./bsp/inc/SYS.h **** 
 843:./bsp/inc/SYS.h **** //PB.10
 844:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB10_GPIO       0x00000000UL        /*!< GPB_MFP PB.10 setting for GPIO */
 845:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB10_GPIO       NULL                /*!< No ALT_MFP setting for PB.10 */
 846:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB10_GPIO      NULL                /*!< No ALT_MFP1 setting for PB.10 */
 847:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB10_GPIO      NULL                /*!< No ALT_MFP2 setting for PB.10 */
 848:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB10_GPIO      NULL                /*!< No ALT_MFP3 setting for PB.10 */
 849:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB10_GPIO      NULL                /*!< No ALT_MFP4 setting for PB.10 */
 850:./bsp/inc/SYS.h **** 
 851:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB10_TM2        (1UL<<10)           /*!< GPB_MFP PB.10 setting for TM2 */
 852:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB10_TM2        NULL                /*!< No ALT_MFP setting for PB.10 */
 853:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB10_TM2       NULL                /*!< No ALT_MFP1 setting for PB.10 */
 854:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB10_TM2       NULL                /*!< No ALT_MFP2 setting for PB.10 */
 855:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB10_TM2       NULL                /*!< No ALT_MFP3 setting for PB.10 */
 856:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB10_TM2       NULL                /*!< No ALT_MFP4 setting for PB.10 */
 857:./bsp/inc/SYS.h **** 
 858:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB10_Msk        (1UL<<10)           /*!< GPB_MFP PB.10 mask */
 859:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB10_Msk        NULL                /*!< No ALT_MFP PB.10 mask */
 860:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB10_Msk       NULL                /*!< No ALT_MFP1 PB.10 mask */
 861:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB10_Msk       NULL                /*!< No ALT_MFP2 PB.10 mask */
 862:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB10_Msk       NULL                /*!< No ALT_MFP3 PB.10 mask */
 863:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB10_Msk       NULL                /*!< No ALT_MFP4 PB.10 mask */
 864:./bsp/inc/SYS.h **** 
 865:./bsp/inc/SYS.h **** //PB.11
 866:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB11_GPIO       0x00000000UL        /*!< GPB_MFP PB.11 setting for GPIO */
 867:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB11_GPIO       NULL                /*!< No ALT_MFP setting for PB.11 */
 868:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB11_GPIO      NULL                /*!< No ALT_MFP1 setting for PB.11 */
 869:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB11_GPIO      NULL                /*!< No ALT_MFP2 setting for PB.11 */
 870:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB11_GPIO      0x00000000UL        /*!< ALT_MFP3 PB.11 setting for GPIO */
 871:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB11_GPIO      NULL                /*!< No ALT_MFP4 setting for PB.11 */
 872:./bsp/inc/SYS.h **** 
 873:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB11_TM3        (1UL<<11)           /*!< GPB_MFP PB.11 setting for TM3 */
 874:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB11_TM3        NULL                /*!< No ALT_MFP setting for PB.11 */
 875:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB11_TM3       NULL                /*!< No ALT_MFP1 setting for PB.11 */
 876:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB11_TM3       NULL                /*!< No ALT_MFP2 setting for PB.11 */
 877:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB11_TM3       0x00000000UL        /*!< ALT_MFP3 PB.11 setting for TM3 */
 878:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB11_TM3       NULL                /*!< No ALT_MFP4 setting for PB.11 */
 879:./bsp/inc/SYS.h **** 
 880:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB11_PWM0_CH4   (1UL<<11)           /*!< GPB_MFP PB.11 setting for PWM0_CH4 */
 881:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB11_PWM0_CH4   NULL                /*!< No ALT_MFP setting for PB.11 */
 882:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB11_PWM0_CH4  NULL                /*!< No ALT_MFP1 setting for PB.11 */
 883:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB11_PWM0_CH4  NULL                /*!< No ALT_MFP2 setting for PB.11 */
 884:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB11_PWM0_CH4  (1UL<<24)           /*!< ALT_MFP3 PB.11 setting for PWM0_CH4 */
 885:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB11_PWM0_CH4  NULL                /*!< No ALT_MFP4 setting for PB.11 */
 886:./bsp/inc/SYS.h **** 
 887:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB11_Msk        (1UL<<11)           /*!< GPB_MFP PB.11 mask */
 888:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB11_Msk        NULL                /*!< No ALT_MFP PB.11 mask */
 889:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB11_Msk       NULL                /*!< No ALT_MFP1 PB.11 mask */
 890:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB11_Msk       NULL                /*!< No ALT_MFP2 PB.11 mask */
 891:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB11_Msk       (1UL<<24)           /*!< ALT_MFP3 PB.11 mask */
 892:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB11_Msk       NULL                /*!< No ALT_MFP4 PB.11 mask */
 893:./bsp/inc/SYS.h **** 
 894:./bsp/inc/SYS.h **** //PB.12
 895:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB12_GPIO       0x00000000UL        /*!< GPB_MFP PB.12 setting for GPIO */
 896:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB12_GPIO       NULL                /*!< No ALT_MFP setting for PB.12 */
 897:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB12_GPIO      NULL                /*!< No ALT_MFP1 setting for PB.12 */
 898:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB12_GPIO      NULL                /*!< No ALT_MFP2 setting for PB.12 */
 899:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB12_GPIO      0x00000000UL        /*!< ALT_MFP3 PB.12 setting for GPIO */
 900:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB12_GPIO      NULL                /*!< No ALT_MFP4 setting for PB.12 */
 901:./bsp/inc/SYS.h **** 
 902:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB12_CLKO       (1UL<<12)           /*!< GPB_MFP PB.12 setting for CLKO */
 903:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB12_CLKO       NULL                /*!< No ALT_MFP setting for PB.12 */
 904:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB12_CLKO      NULL                /*!< No ALT_MFP1 setting for PB.12 */
 905:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB12_CLKO      NULL                /*!< No ALT_MFP2 setting for PB.12 */
 906:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB12_CLKO      0x00000000UL        /*!< ALT_MFP3 PB.12 setting for CLKO */
 907:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB12_CLKO      NULL                /*!< No ALT_MFP4 setting for PB.12 */
 908:./bsp/inc/SYS.h **** 
 909:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB12_BPWM1_CH3      (1UL<<12)       /*!< GPB_MFP PB.12 setting for BPWM1_CH3 */
 910:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB12_BPWM1_CH3      NULL            /*!< No ALT_MFP setting for PB.12 */
 911:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB12_BPWM1_CH3     NULL            /*!< No ALT_MFP1 setting for PB.12 */
 912:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB12_BPWM1_CH3     NULL            /*!< No ALT_MFP2 setting for PB.12 */
 913:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB12_BPWM1_CH3     (1UL<<21)       /*!< ALT_MFP3 PB.12 setting for BPWM1_CH3 *
 914:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB12_BPWM1_CH3     NULL            /*!< No ALT_MFP4 setting for PB.12 */
 915:./bsp/inc/SYS.h **** 
 916:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB12_Msk        (1UL<<12)           /*!< GPB_MFP PB.12 mask */
 917:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB12_Msk        NULL                /*!< No ALT_MFP PB.12 mask */
 918:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB12_Msk       NULL                /*!< No ALT_MFP1 PB.12 mask */
 919:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB12_Msk       NULL                /*!< No ALT_MFP2 PB.12 mask */
 920:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB12_Msk       (1UL<<21)           /*!< ALT_MFP3 PB.12 mask */
 921:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB12_Msk       NULL                /*!< No ALT_MFP4 PB.12 mask */
 922:./bsp/inc/SYS.h **** 
 923:./bsp/inc/SYS.h **** //PB.13
 924:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB13_GPIO       0x00000000UL        /*!< GPB_MFP PB.13 setting for GPIO */
 925:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB13_GPIO       NULL                /*!< No ALT_MFP setting for PB.13 */
 926:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB13_GPIO      NULL                /*!< No ALT_MFP1 setting for PB.13 */
 927:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB13_GPIO      NULL                /*!< No ALT_MFP2 setting for PB.13 */
 928:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB13_GPIO      NULL                /*!< No ALT_MFP3 setting for PB.13 */
 929:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB13_GPIO      NULL                /*!< No ALT_MFP4 setting for PB.13 */
 930:./bsp/inc/SYS.h **** 
 931:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB13_Msk        (1UL<<13)           /*!< GPB_MFP PB.13 mask */
 932:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB13_Msk        NULL                /*!< No ALT_MFP PB.13 mask */
 933:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB13_Msk       NULL                /*!< No ALT_MFP1 PB.13 mask */
 934:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB13_Msk       NULL                /*!< No ALT_MFP2 PB.13 mask */
 935:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB13_Msk       NULL                /*!< No ALT_MFP3 PB.13 mask */
 936:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB13_Msk       NULL                /*!< No ALT_MFP4 PB.13 mask */
 937:./bsp/inc/SYS.h **** 
 938:./bsp/inc/SYS.h **** //PB.14
 939:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB14_GPIO       0x00000000UL        /*!< GPB_MFP PB.14 setting for GPIO */
 940:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB14_GPIO       NULL                /*!< No ALT_MFP setting for PB.14 */
 941:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB14_GPIO      NULL                /*!< No ALT_MFP1 setting for PB.14 */
 942:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB14_GPIO      NULL                /*!< No ALT_MFP2 setting for PB.14 */
 943:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB14_GPIO      NULL                /*!< No ALT_MFP3 setting for PB.14 */
 944:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB14_GPIO      NULL                /*!< No ALT_MFP4 setting for PB.14 */
 945:./bsp/inc/SYS.h **** 
 946:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB14_INT0       0x00000000UL        /*!< GPB_MFP PB.14 setting for INT0 */
 947:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB14_INT0       NULL                /*!< No ALT_MFP setting for PB.14 */
 948:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB14_INT0      NULL                /*!< No ALT_MFP1 setting for PB.14 */
 949:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB14_INT0      NULL                /*!< No ALT_MFP2 setting for PB.14 */
 950:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB14_INT0      NULL                /*!< No ALT_MFP3 setting for PB.14 */
 951:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB14_INT0      NULL                /*!< No ALT_MFP4 setting for PB.14 */
 952:./bsp/inc/SYS.h **** 
 953:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB14_Msk        (1UL<<14)           /*!< GPB_MFP PB.14 mask */
 954:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB14_Msk        NULL                /*!< No ALT_MFP PB.14 mask */
 955:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB14_Msk       NULL                /*!< No ALT_MFP1 PB.14 mask */
 956:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB14_Msk       NULL                /*!< No ALT_MFP2 PB.14 mask */
 957:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB14_Msk       NULL                /*!< No ALT_MFP3 PB.14 mask */
 958:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB14_Msk       NULL                /*!< No ALT_MFP4 PB.14 mask */
 959:./bsp/inc/SYS.h **** 
 960:./bsp/inc/SYS.h **** //PB.15
 961:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB15_GPIO       0x00000000UL        /*!< GPB_MFP PB.15 setting for GPIO */
 962:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB15_GPIO       0x00000000UL        /*!< ALT_MFP PB.15 setting for GPIO */
 963:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB15_GPIO      NULL                /*!< No ALT_MFP1 setting for PB.15 */
 964:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB15_GPIO      0x00000000UL        /*!< ALT_MFP2 PB.15 setting for GPIO */
 965:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB15_GPIO      NULL                /*!< No ALT_MFP3 setting for PB.15 */
 966:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB15_GPIO      NULL                /*!< No ALT_MFP4 setting for PB.15 */
 967:./bsp/inc/SYS.h **** 
 968:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB15_INT1       (1UL<<15)           /*!< GPB_MFP PB.15 setting for INT1 */
 969:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB15_INT1       0x00000000UL        /*!< ALT_MFP PB.15 setting for INT1 */
 970:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB15_INT1      NULL                /*!< No ALT_MFP1 setting for PB.15 */
 971:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB15_INT1      0x00000000UL        /*!< ALT_MFP2 PB.15 setting for INT1 */
 972:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB15_INT1      NULL                /*!< No ALT_MFP3 setting for PB.15 */
 973:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB15_INT1      NULL                /*!< No ALT_MFP4 setting for PB.15 */
 974:./bsp/inc/SYS.h **** 
 975:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB15_TM0        (1UL<<15)           /*!< GPB_MFP PB.15 setting for TM0 */
 976:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB15_TM0        0x00000000UL        /*!< ALT_MFP PB.15 setting for TM0 */
 977:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB15_TM0       NULL                /*!< No ALT_MFP1 setting for PB.15 */
 978:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB15_TM0       (1UL<<2)            /*!< ALT_MFP2 PB.15 setting for TM0 */
 979:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB15_TM0       NULL                /*!< No ALT_MFP3 setting for PB.15 */
 980:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB15_TM0       NULL                /*!< No ALT_MFP4 setting for PB.15 */
 981:./bsp/inc/SYS.h **** 
 982:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB15_TM0_EXT    (1UL<<15)           /*!< GPB_MFP PB.15 setting for TM0_EXT */
 983:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB15_TM0_EXT    (1UL<<24)           /*!< ALT_MFP PB.15 setting for TM0_EXT */
 984:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB15_TM0_EXT   NULL                /*!< No ALT_MFP1 setting for PB.15 */
 985:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB15_TM0_EXT   0x00000000UL        /*!< ALT_MFP2 PB.15 setting for TM0_EXT */
 986:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB15_TM0_EXT   NULL                /*!< No ALT_MFP3 setting for PB.15 */
 987:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB15_TM0_EXT   NULL                /*!< No ALT_MFP4 setting for PB.15 */
 988:./bsp/inc/SYS.h **** 
 989:./bsp/inc/SYS.h **** #define SYS_GPB_MFP_PB15_Msk        (1UL<<15)           /*!< GPB_MFP PB.15 mask */
 990:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PB15_Msk        (1UL<<24)           /*!< ALT_MFP PB.15 mask */
 991:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PB15_Msk       NULL                /*!< No ALT_MFP1 PB.15 mask */
 992:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PB15_Msk       (1UL<<2)            /*!< ALT_MFP2 PB.15 mask */
 993:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PB15_Msk       NULL                /*!< No ALT_MFP3 PB.15 mask */
 994:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PB15_Msk       NULL                /*!< No ALT_MFP4 PB.15 mask */
 995:./bsp/inc/SYS.h **** 
 996:./bsp/inc/SYS.h **** //PC.0
 997:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC0_GPIO        0x00000000UL        /*!< GPC_MFP PC.0 setting for GPIO */
 998:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC0_GPIO        NULL                /*!< No ALT_MFP setting for PC.0 */
 999:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC0_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.0 */
1000:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC0_GPIO       NULL                /*!< ALT_MFP2 PC.0 setting for GPIO */
1001:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC0_GPIO       0x00000000UL        /*!< No ALT_MFP3 setting for PC.0 */
1002:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC0_GPIO       NULL                /*!< No ALT_MFP4 setting for PC.0 */
1003:./bsp/inc/SYS.h **** 
1004:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC0_SPI0_SS0    (1UL<<0)            /*!< GPC_MFP PC.0 setting for SPI0_SS0 */
1005:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC0_SPI0_SS0    NULL                /*!< No ALT_MFP setting for PC.0 */
1006:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC0_SPI0_SS0   NULL                /*!< No ALT_MFP1 setting for PC.0 */
1007:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC0_SPI0_SS0   NULL                /*!< ALT_MFP2 PC.0 setting for SPI0_SS0 */
1008:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC0_SPI0_SS0   0x00000000UL        /*!< No ALT_MFP3 setting for PC.0 */
1009:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC0_SPI0_SS0   NULL                /*!< No ALT_MFP4 setting for PC.0 */
1010:./bsp/inc/SYS.h **** 
1011:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC0_BPWM0_CH0       (1UL<<0)        /*!< GPC_MFP PC.0 setting for BPWM0_CH0 */
1012:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC0_BPWM0_CH0       NULL            /*!< No ALT_MFP setting for PC.0 */
1013:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC0_BPWM0_CH0      NULL            /*!< No ALT_MFP1 setting for PC.0 */
1014:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC0_BPWM0_CH0      NULL            /*!< ALT_MFP2 PC.0 setting for BPWM0_CH0 */
1015:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC0_BPWM0_CH0      (1UL<<12)       /*!< No ALT_MFP3 setting for PC.0 */
1016:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC0_BPWM0_CH0      NULL            /*!< No ALT_MFP4 setting for PC.0 */
1017:./bsp/inc/SYS.h **** 
1018:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC0_Msk         (1UL<<0)            /*!< GPC_MFP PC.0 mask */
1019:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC0_Msk         NULL                /*!< No ALT_MFP PC.0 mask */
1020:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC0_Msk        NULL                /*!< No ALT_MFP1 PC.0 mask */
1021:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC0_Msk        NULL                /*!< No ALT_MFP2 PC.0 mask */
1022:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC0_Msk        (1UL<<12)           /*!< ALT_MFP3 PC.0 mask */
1023:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC0_Msk        NULL                /*!< No ALT_MFP4 PC.0 mask */
1024:./bsp/inc/SYS.h **** 
1025:./bsp/inc/SYS.h **** //PC.1
1026:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC1_GPIO        0x00000000UL        /*!< GPC_MFP PC.1 setting for GPIO */
1027:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC1_GPIO        NULL                /*!< No ALT_MFP setting for PC.1 */
1028:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC1_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.1 */
1029:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC1_GPIO       NULL                /*!< No ALT_MFP2 setting for PC.1 */
1030:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC1_GPIO       0x00000000UL        /*!< ALT_MFP3 PC.1 setting for GPIO */
1031:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC1_GPIO       NULL                /*!< No ALT_MFP4 setting for PC.1 */
1032:./bsp/inc/SYS.h **** 
1033:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC1_SPI0_CLK        (1UL<<1)        /*!< GPC_MFP PC.1 setting for SPI0_CLK */
1034:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC1_SPI0_CLK        NULL            /*!< No ALT_MFP setting for PC.1 */
1035:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC1_SPI0_CLK       NULL            /*!< No ALT_MFP1 setting for PC.1 */
1036:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC1_SPI0_CLK       NULL            /*!< No ALT_MFP2 setting for PC.1 */
1037:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC1_SPI0_CLK       0x00000000UL    /*!< ALT_MFP3 PC.1 setting for SPI0_CLK */
1038:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC1_SPI0_CLK       NULL            /*!< No ALT_MFP4 setting for PC.1 */
1039:./bsp/inc/SYS.h **** 
1040:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC1_BPWM0_CH1       (1UL<<1)        /*!< GPC_MFP PC.1 setting for BPWM0_CH1 */
1041:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC1_BPWM0_CH1       NULL            /*!< No ALT_MFP setting for PC.1 */
1042:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC1_BPWM0_CH1      NULL            /*!< No ALT_MFP1 setting for PC.1 */
1043:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC1_BPWM0_CH1      NULL            /*!< No ALT_MFP2 setting for PC.1 */
1044:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC1_BPWM0_CH1      (1UL<<13)       /*!< ALT_MFP3 PC.1 setting for BPWM0_CH1 */
1045:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC1_BPWM0_CH1      NULL            /*!< No ALT_MFP4 setting for PC.1 */
1046:./bsp/inc/SYS.h **** 
1047:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC1_Msk         (1UL<<1)            /*!< GPC_MFP PC.1 mask */
1048:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC1_Msk         NULL                /*!< No ALT_MFP PC.1 mask */
1049:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC1_Msk        NULL                /*!< No ALT_MFP1 PC.1 mask */
1050:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC1_Msk        NULL                /*!< No ALT_MFP2 PC.1 mask */
1051:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC1_Msk        (1UL<<13)           /*!< ALT_MFP3 PC.1 mask */
1052:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC1_Msk        NULL                /*!< No ALT_MFP4 PC.1 mask */
1053:./bsp/inc/SYS.h **** 
1054:./bsp/inc/SYS.h **** //PC.2
1055:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC2_GPIO        0x00000000UL        /*!< GPC_MFP PC.2 setting for GPIO */
1056:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC2_GPIO        NULL                /*!< No ALT_MFP setting for PC.2 */
1057:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC2_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.2 */
1058:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC2_GPIO       NULL                /*!< No ALT_MFP2 setting for PC.2 */
1059:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC2_GPIO       0x00000000UL        /*!< ALT_MFP3 PC.2 setting for GPIO */
1060:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC2_GPIO       NULL                /*!< No ALT_MFP4 setting for PC.2 */
1061:./bsp/inc/SYS.h **** 
1062:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC2_SPI0_MISO0      (1UL<<2)        /*!< GPC_MFP PC.2 setting for SPI0_MISO0 */
1063:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC2_SPI0_MISO0      NULL            /*!< No ALT_MFP setting for PC.2 */
1064:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC2_SPI0_MISO0     NULL            /*!< No ALT_MFP1 setting for PC.2 */
1065:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC2_SPI0_MISO0     NULL            /*!< No ALT_MFP2 setting for PC.2 */
1066:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC2_SPI0_MISO0     0x00000000UL    /*!< ALT_MFP3 PC.2 setting for SPI0_MISO0 *
1067:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC2_SPI0_MISO0     NULL            /*!< No ALT_MFP4 setting for PC.2 */
1068:./bsp/inc/SYS.h **** 
1069:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC2_BPWM0_CH2   (1UL<<2)            /*!< GPC_MFP PC.2 setting for BPWM0_CH2 */
1070:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC2_BPWM0_CH2   NULL                /*!< No ALT_MFP setting for PC.2 */
1071:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC2_BPWM0_CH2  NULL                /*!< No ALT_MFP1 setting for PC.2 */
1072:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC2_BPWM0_CH2  NULL                /*!< No ALT_MFP2 setting for PC.2 */
1073:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC2_BPWM0_CH2  (1UL<<14)           /*!< ALT_MFP3 PC.2 setting for BPWM0_CH2 */
1074:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC2_BPWM0_CH2  NULL                /*!< No ALT_MFP4 setting for PC.2 */
1075:./bsp/inc/SYS.h **** 
1076:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC2_Msk         (1UL<<2)            /*!< GPC_MFP PC.2 mask */
1077:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC2_Msk         NULL                /*!< No ALT_MFP PC.2 mask */
1078:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC2_Msk        NULL                /*!< No ALT_MFP1 PC.2 mask */
1079:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC2_Msk        NULL                /*!< No ALT_MFP2 PC.2 mask */
1080:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC2_Msk        (1UL<<14)           /*!< ALT_MFP3 PC.2 mask */
1081:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC2_Msk        NULL                /*!< No ALT_MFP4 PC.2 mask */
1082:./bsp/inc/SYS.h **** 
1083:./bsp/inc/SYS.h **** //PC.3
1084:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC3_GPIO        0x00000000UL        /*!< GPC_MFP PC.3 setting for GPIO */
1085:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC3_GPIO        NULL                /*!< No ALT_MFP setting for PC.3 */
1086:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC3_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.3 */
1087:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC3_GPIO       NULL                /*!< No ALT_MFP2 setting for PC.3 */
1088:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC3_GPIO       0x00000000UL        /*!< ALT_MFP3 PC.3 setting for GPIO */
1089:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC3_GPIO       NULL                /*!< No ALT_MFP4 setting for PC.3 */
1090:./bsp/inc/SYS.h **** 
1091:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC3_SPI0_MOSI0      (1UL<<3)        /*!< GPC_MFP PC.3 setting for SPI0_MOSI0 */
1092:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC3_SPI0_MOSI0      NULL            /*!< No ALT_MFP setting for PC.3 */
1093:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC3_SPI0_MOSI0     NULL            /*!< No ALT_MFP1 setting for PC.3 */
1094:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC3_SPI0_MOSI0     NULL            /*!< No ALT_MFP2 setting for PC.3 */
1095:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC3_SPI0_MOSI0     0x00000000UL    /*!< ALT_MFP3 PC.3 setting for SPI0_MOSI0 *
1096:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC3_SPI0_MOSI0     NULL            /*!< No ALT_MFP4 setting for PC.3 */
1097:./bsp/inc/SYS.h **** 
1098:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC3_BPWM0_CH3   (1UL<<3)            /*!< GPC_MFP PC.3 setting for BPWM0_CH3 */
1099:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC3_BPWM0_CH3   NULL                /*!< No ALT_MFP setting for PC.3 */
1100:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC3_BPWM0_CH3  NULL                /*!< No ALT_MFP1 setting for PC.3 */
1101:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC3_BPWM0_CH3  NULL                /*!< No ALT_MFP2 setting for PC.3 */
1102:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC3_BPWM0_CH3  (1UL<<15)           /*!< ALT_MFP3 PC.3 setting for BPWM0_CH3 */
1103:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC3_BPWM0_CH3  NULL                /*!< No ALT_MFP4 setting for PC.3 */
1104:./bsp/inc/SYS.h **** 
1105:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC3_Msk         (1UL<<3)            /*!< GPC_MFP PC.3 mask */
1106:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC3_Msk         NULL                /*!< No ALT_MFP PC.3 mask */
1107:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC3_Msk        NULL                /*!< No ALT_MFP1 PC.3 mask */
1108:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC3_Msk        NULL                /*!< No ALT_MFP2 PC.3 mask */
1109:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC3_Msk        (1UL<<15)           /*!< ALT_MFP3 PC.3 mask */
1110:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC3_Msk        NULL                /*!< No ALT_MFP4 PC.3 mask */
1111:./bsp/inc/SYS.h **** 
1112:./bsp/inc/SYS.h **** //PC.6
1113:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC6_GPIO        0x00000000UL        /*!< GPC_MFP PC.6 setting for GPIO */
1114:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC6_GPIO        NULL                /*!< No ALT_MFP setting for PC.6 */
1115:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC6_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.6 */
1116:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC6_GPIO       NULL                /*!< No ALT_MFP2 setting for PC.6 */
1117:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC6_GPIO       0x00000000UL        /*!< ALT_MFP3 PC.4 setting for GPIO */
1118:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC6_GPIO       0x00000000UL        /*!< ALT_MFP4 PC.4 setting for GPIO */
1119:./bsp/inc/SYS.h **** 
1120:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC6_UART4_TXD   (1UL<<6)            /*!< GPC_MFP PC.4 setting for UART6_TXD */
1121:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC6_UART4_TXD   NULL                /*!< No ALT_MFP setting for PC.6 */
1122:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC6_UART4_TXD  NULL                /*!< No ALT_MFP1 setting for PC.6 */
1123:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC6_UART4_TXD  NULL                /*!< No ALT_MFP2 setting for PC.6 */
1124:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC6_UART4_TXD  0x00000000UL        /*!< ALT_MFP3 PC.6 setting for UART4_TXD */
1125:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC6_UART4_TXD  0x00000000UL        /*!< ALT_MFP4 PC.6 setting for UART4_TXD */
1126:./bsp/inc/SYS.h **** 
1127:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC6_I2C0_SDA    (1UL<<6)            /*!< GPC_MFP PC.6 setting for I2C0_SDA */
1128:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC6_I2C0_SDA    NULL                /*!< No ALT_MFP setting for PC.6 */
1129:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC6_I2C0_SDA   NULL                /*!< No ALT_MFP1 setting for PC.6 */
1130:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC6_I2C0_SDA   NULL                /*!< No ALT_MFP2 setting for PC.6 */
1131:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC6_I2C0_SDA   0x00000000UL        /*!< ALT_MFP3 PC.6 setting for I2C0_SDA */
1132:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC6_I2C0_SDA   (1UL<<10)           /*!< ALT_MFP4 PC.6 setting for I2C0_SDA */
1133:./bsp/inc/SYS.h **** 
1134:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC6_PWM0_BREAK0     (1UL<<6)        /*!< GPC_MFP PC.6 setting for PWM0_BREAK0 *
1135:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC6_PWM0_BREAK0     NULL            /*!< No ALT_MFP setting for PC.6 */
1136:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC6_PWM0_BREAK0    NULL            /*!< No ALT_MFP1 setting for PC.6 */
1137:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC6_PWM0_BREAK0    NULL            /*!< No ALT_MFP2 setting for PC.6 */
1138:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC6_PWM0_BREAK0    (1UL<<28)       /*!< ALT_MFP3 PC.6 setting for PWM0_BREAK0 
1139:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC6_PWM0_BREAK0    0x00000000UL    /*!< ALT_MFP4 PC.6 setting for PWM0_BREAK0 
1140:./bsp/inc/SYS.h **** 
1141:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC6_Msk         (1UL<<6)            /*!< GPC_MFP PC.6 mask */
1142:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC6_Msk         NULL                /*!< No ALT_MFP PC.6 mask */
1143:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC6_Msk        NULL                /*!< No ALT_MFP1 PC.6 mask */
1144:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC6_Msk        NULL                /*!< No ALT_MFP2 PC.6 mask */
1145:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC6_Msk        (1UL<<28)           /*!< ALT_MFP3 PC.6 mask */
1146:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC6_Msk        (1UL<<10)           /*!< ALT_MFP4 PC.6 mask */
1147:./bsp/inc/SYS.h **** 
1148:./bsp/inc/SYS.h **** //PC.7
1149:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC7_GPIO        0x00000000UL        /*!< GPC_MFP PC.7 setting for GPIO */
1150:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC7_GPIO        NULL                /*!< No ALT_MFP setting for PC.7 */
1151:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC7_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.7 */
1152:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC7_GPIO       NULL                /*!< No ALT_MFP2 setting for PC.7 */
1153:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC7_GPIO       0x00000000UL        /*!< ALT_MFP3 PC.7 setting for GPIO */
1154:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC7_GPIO       0x00000000UL        /*!< ALT_MFP4 PC.7 setting for GPIO */
1155:./bsp/inc/SYS.h **** 
1156:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC7_UART4_RXD   (1UL<<7)            /*!< GPC_MFP PC.7 setting for UART4_RXD */
1157:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC7_UART4_RXD   NULL                /*!< No ALT_MFP setting for PC.7 */
1158:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC7_UART4_RXD  NULL                /*!< No ALT_MFP1 setting for PC.7 */
1159:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC7_UART4_RXD  NULL                /*!< No ALT_MFP2 setting for PC.7 */
1160:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC7_UART4_RXD  0x00000000UL        /*!< ALT_MFP3 PC.7 setting for UART4_RXD */
1161:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC7_UART4_RXD  0x00000000UL        /*!< ALT_MFP4 PC.7 setting for UART4_RXD */
1162:./bsp/inc/SYS.h **** 
1163:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC7_I2C0_SCL    (1UL<<7)            /*!< GPC_MFP PC.7 setting for I2C0_SCL */
1164:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC7_I2C0_SCL    NULL                /*!< No ALT_MFP setting for PC.7 */
1165:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC7_I2C0_SCL   NULL                /*!< No ALT_MFP1 setting for PC.7 */
1166:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC7_I2C0_SCL   NULL                /*!< No ALT_MFP2 setting for PC.7 */
1167:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC7_I2C0_SCL   0x00000000UL        /*!< ALT_MFP3 PC.7 setting for I2C0_SCL */
1168:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC7_I2C0_SCL   (1UL<<11)           /*!< ALT_MFP4 PC.7 setting for I2C0_SCL */
1169:./bsp/inc/SYS.h **** 
1170:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC7_PWM0_BRAKE1     (1UL<<7)        /*!< GPC_MFP PC.7 setting for PWM0_BRAKE1 *
1171:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC7_PWM0_BRAKE1     NULL            /*!< No ALT_MFP setting for PC.7 */
1172:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC7_PWM0_BRAKE1    NULL            /*!< No ALT_MFP1 setting for PC.7 */
1173:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC7_PWM0_BRAKE1    NULL            /*!< No ALT_MFP2 setting for PC.7 */
1174:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC7_PWM0_BRAKE1    (1UL<<29)       /*!< ALT_MFP3 PC.7 setting for PWM0_BRAKE1 
1175:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC7_PWM0_BRAKE1    0x00000000UL    /*!< ALT_MFP4 PC.7 setting for PWM0_BRAKE1 
1176:./bsp/inc/SYS.h **** 
1177:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC7_Msk         (1UL<<7)            /*!< GPC_MFP PC.7 mask */
1178:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC7_Msk         NULL                /*!< No ALT_MFP PC.7 mask */
1179:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC7_Msk        NULL                /*!< No ALT_MFP1 PC.7 mask */
1180:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC7_Msk        NULL                /*!< No ALT_MFP2 PC.7 mask */
1181:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC7_Msk        (1UL<<29)           /*!< ALT_MFP3 PC.7 mask */
1182:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC7_Msk        (1UL<<11)           /*!< ALT_MFP4 PC.7 mask */
1183:./bsp/inc/SYS.h **** 
1184:./bsp/inc/SYS.h **** //PC.8
1185:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC8_GPIO        0x00000000UL        /*!< GPC_MFP PC.8 setting for GPIO */
1186:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC8_GPIO        NULL                /*!< No ALT_MFP setting for PC.8 */
1187:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC8_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.8 */
1188:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC8_GPIO       NULL                /*!< No ALT_MFP2 setting for PC.8 */
1189:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC8_GPIO       NULL                /*!< No ALT_MFP3 setting for PC.8 */
1190:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC8_GPIO       NULL                /*!< No ALT_MFP4 setting for PC.8 */
1191:./bsp/inc/SYS.h **** 
1192:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC8_PWM0_BRAKE0     (1UL<<8)        /*!< GPC_MFP PC.8 setting for PWM0_BRAKE0 *
1193:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC8_PWM0_BRAKE0     NULL            /*!< No ALT_MFP setting for PC.8 */
1194:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC8_PWM0_BRAKE0    NULL            /*!< No ALT_MFP1 setting for PC.8 */
1195:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC8_PWM0_BRAKE0    NULL            /*!< No ALT_MFP2 setting for PC.8 */
1196:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC8_PWM0_BRAKE0    NULL            /*!< No ALT_MFP3 setting for PC.8 */
1197:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC8_PWM0_BRAKE0    NULL            /*!< No ALT_MFP4 setting for PC.8 */
1198:./bsp/inc/SYS.h **** 
1199:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC8_Msk         (1UL<<8)            /*!< GPC_MFP PC.8 mask */
1200:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC8_Msk         NULL                /*!< No ALT_MFP PC.8 mask */
1201:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC8_Msk        NULL                /*!< No ALT_MFP1 PC.8 mask */
1202:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC8_Msk        NULL                /*!< No ALT_MFP2 PC.8 mask */
1203:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC8_Msk        NULL                /*!< No ALT_MFP3 PC.8 mask */
1204:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC8_Msk        NULL                /*!< No ALT_MFP4 PC.8 mask */
1205:./bsp/inc/SYS.h **** 
1206:./bsp/inc/SYS.h **** //PC.9
1207:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC9_GPIO        0x00000000UL        /*!< GPC_MFP PC.9 setting for GPIO */
1208:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC9_GPIO        NULL                /*!< No ALT_MFP setting for PC.9 */
1209:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC9_GPIO       NULL                /*!< No ALT_MFP1 setting for PC.9 */
1210:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC9_GPIO       NULL                /*!< No ALT_MFP2 setting for PC.9 */
1211:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC9_GPIO       NULL                /*!< No ALT_MFP3 setting for PC.9 */
1212:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC9_GPIO       NULL                /*!< No ALT_MFP4 setting for PC.9 */
1213:./bsp/inc/SYS.h **** 
1214:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC9_PWM0_BRAKE1     (1UL<<9)        /*!< GPC_MFP PC.9 setting for PWM0_BRAKE1 *
1215:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC9_PWM0_BRAKE1     NULL            /*!< No ALT_MFP setting for PC.9 */
1216:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC9_PWM0_BRAKE1    NULL            /*!< No ALT_MFP1 setting for PC.9 */
1217:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC9_PWM0_BRAKE1    NULL            /*!< No ALT_MFP2 setting for PC.9 */
1218:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC9_PWM0_BRAKE1    NULL            /*!< No ALT_MFP3 setting for PC.9 */
1219:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC9_PWM0_BRAKE1    NULL            /*!< No ALT_MFP4 setting for PC.9 */
1220:./bsp/inc/SYS.h **** 
1221:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC9_Msk         (1UL<<9)            /*!< GPC_MFP PC.9 mask */
1222:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC9_Msk         NULL                /*!< No ALT_MFP PC.9 mask */
1223:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC9_Msk        NULL                /*!< No ALT_MFP1 PC.9 mask */
1224:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC9_Msk        NULL                /*!< No ALT_MFP2 PC.9 mask */
1225:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC9_Msk        NULL                /*!< No ALT_MFP3 PC.9 mask */
1226:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC9_Msk        NULL                /*!< No ALT_MFP4 PC.9 mask */
1227:./bsp/inc/SYS.h **** 
1228:./bsp/inc/SYS.h **** //PC.10
1229:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC10_GPIO       0x00000000UL        /*!< GPC_MFP PC.10 setting for GPIO */
1230:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC10_GPIO       NULL                /*!< No ALT_MFP setting for PC.10 */
1231:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC10_GPIO      NULL                /*!< No ALT_MFP1 setting for PC.10 */
1232:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC10_GPIO      NULL                /*!< No ALT_MFP2 setting for PC.10 */
1233:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC10_GPIO      NULL                /*!< No ALT_MFP3 setting for PC.10 */
1234:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC10_GPIO      NULL                /*!< No ALT_MFP4 setting for PC.10 */
1235:./bsp/inc/SYS.h **** 
1236:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC10_PWM1_BRAKE0    (1UL<<10)       /*!< GPC_MFP PC.10 setting for PWM1_BRAKE0 
1237:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC10_PWM1_BRAKE0    NULL            /*!< No ALT_MFP setting for PC.10 */
1238:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC10_PWM1_BRAKE0   NULL            /*!< No ALT_MFP1 setting for PC.10 */
1239:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC10_PWM1_BRAKE0   NULL            /*!< No ALT_MFP2 setting for PC.10 */
1240:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC10_PWM1_BRAKE0   NULL            /*!< No ALT_MFP3 setting for PC.10 */
1241:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC10_PWM1_BRAKE0   NULL            /*!< No ALT_MFP4 setting for PC.10 */
1242:./bsp/inc/SYS.h **** 
1243:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC10_Msk        (1UL<<10)           /*!< GPC_MFP PC.10 mask */
1244:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC10_Msk        NULL                /*!< No ALT_MFP PC.10 mask */
1245:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC10_Msk       NULL                /*!< No ALT_MFP1 PC.10 mask */
1246:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC10_Msk       NULL                /*!< No ALT_MFP2 PC.10 mask */
1247:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC10_Msk       NULL                /*!< No ALT_MFP3 PC.10 mask */
1248:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC10_Msk       NULL                /*!< No ALT_MFP4 PC.10 mask */
1249:./bsp/inc/SYS.h **** 
1250:./bsp/inc/SYS.h **** //PC.11
1251:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC11_GPIO       0x00000000UL        /*!< GPC_MFP PC.11 setting for GPIO */
1252:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC11_GPIO       NULL                /*!< No ALT_MFP setting for PC.11 */
1253:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC11_GPIO      NULL                /*!< No ALT_MFP1 setting for PC.11 */
1254:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC11_GPIO      NULL                /*!< No ALT_MFP2 setting for PC.11 */
1255:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC11_GPIO      NULL                /*!< No ALT_MFP3 setting for PC.11 */
1256:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC11_GPIO      NULL                /*!< No ALT_MFP4 setting for PC.11 */
1257:./bsp/inc/SYS.h **** 
1258:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC11_PWM1_BRAKE1    (1UL<<11)       /*!< GPC_MFP PC.11 setting for PWM1_BRAKE1 
1259:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC11_PWM1_BRAKE1    NULL            /*!< No ALT_MFP setting for PC.11 */
1260:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC11_PWM1_BRAKE1   NULL            /*!< No ALT_MFP1 setting for PC.11 */
1261:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC11_PWM1_BRAKE1   NULL            /*!< No ALT_MFP2 setting for PC.11 */
1262:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC11_PWM1_BRAKE1   NULL            /*!< No ALT_MFP3 setting for PC.11 */
1263:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC11_PWM1_BRAKE1   NULL            /*!< No ALT_MFP4 setting for PC.11 */
1264:./bsp/inc/SYS.h **** 
1265:./bsp/inc/SYS.h **** #define SYS_GPC_MFP_PC11_Msk        (1UL<<11)           /*!< GPC_MFP PC.11 mask */
1266:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PC11_Msk        NULL                /*!< No ALT_MFP PC.11 mask */
1267:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PC11_Msk       NULL                /*!< No ALT_MFP1 PC.11 mask */
1268:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PC11_Msk       NULL                /*!< No ALT_MFP2 PC.11 mask */
1269:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PC11_Msk       NULL                /*!< No ALT_MFP3 PC.11 mask */
1270:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PC11_Msk       NULL                /*!< No ALT_MFP4 PC.11 mask */
1271:./bsp/inc/SYS.h **** 
1272:./bsp/inc/SYS.h **** //PD.6
1273:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD6_GPIO        0x00000000UL        /*!< GPD_MFP PD.6 setting for GPIO */
1274:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD6_GPIO        NULL                /*!< No ALT_MFP setting for PD.6 */
1275:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD6_GPIO       NULL                /*!< No ALT_MFP1 setting for PD.6 */
1276:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD6_GPIO       NULL                /*!< No ALT_MFP2 setting for PD.6 */
1277:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD6_GPIO       0x00000000UL        /*!< ALT_MFP3 PD.6 setting for GPIO */
1278:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD6_GPIO       NULL                /*!< No ALT_MFP4 setting for PD.6 */
1279:./bsp/inc/SYS.h **** 
1280:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD6_CAN0_RXD    (1UL<<6)            /*!< GPD_MFP PD.6 setting for CAN0_RXD */
1281:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD6_CAN0_RXD    NULL                /*!< No ALT_MFP setting for PD.6 */
1282:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD6_CAN0_RXD   NULL                /*!< No ALT_MFP1 setting for PD.6 */
1283:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD6_CAN0_RXD   NULL                /*!< No ALT_MFP2 setting for PD.6 */
1284:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD6_CAN0_RXD   0x00000000UL        /*!< ALT_MFP3 PD.6 setting for CAN0_RXD */
1285:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD6_CAN0_RXD   NULL                /*!< No ALT_MFP4 setting for PD.6 */
1286:./bsp/inc/SYS.h **** 
1287:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD6_BPWM1_CH1   (1UL<<6)            /*!< GPD_MFP PD.6 setting for BPWM1_CH1 */
1288:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD6_BPWM1_CH1   NULL                /*!< No ALT_MFP setting for PD.6 */
1289:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD6_BPWM1_CH1  NULL                /*!< No ALT_MFP1 setting for PD.6 */
1290:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD6_BPWM1_CH1  NULL                /*!< No ALT_MFP2 setting for PD.6 */
1291:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD6_BPWM1_CH1  (1UL<<19)           /*!< ALT_MFP3 PD.6 setting for BPWM1_CH1 */
1292:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD6_BPWM1_CH1  NULL                /*!< No ALT_MFP4 setting for PD.6 */
1293:./bsp/inc/SYS.h **** 
1294:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD6_Msk         (1UL<<6)            /*!< GPD_MFP PD.6 mask */
1295:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD6_Msk         NULL                /*!< No ALT_MFP PD.6 mask */
1296:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD6_Msk        NULL                /*!< No ALT_MFP1 PD.6 mask */
1297:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD6_Msk        NULL                /*!< No ALT_MFP2 PD.6 mask */
1298:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD6_Msk        (1UL<<19)           /*!< ALT_MFP3 PD.6 mask */
1299:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD6_Msk        NULL                /*!< No ALT_MFP4 PD.6 mask */
1300:./bsp/inc/SYS.h **** 
1301:./bsp/inc/SYS.h **** //PD.7
1302:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD7_GPIO        0x00000000UL        /*!< GPD_MFP PD.7 setting for GPIO */
1303:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD7_GPIO        NULL                /*!< No ALT_MFP setting for PD.7 */
1304:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD7_GPIO       NULL                /*!< No ALT_MFP1 setting for PD.7 */
1305:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD7_GPIO       NULL                /*!< No ALT_MFP2 setting for PD.7 */
1306:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD7_GPIO       0x00000000UL        /*!< ALT_MFP3 PD.7 setting for GPIO */
1307:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD7_GPIO       NULL                /*!< No ALT_MFP4 setting for PD.7 */
1308:./bsp/inc/SYS.h **** 
1309:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD7_CAN0_TXD    (1UL<<7)            /*!< GPD_MFP PD.7 setting for CAN0_TXD */
1310:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD7_CAN0_TXD    NULL                /*!< No ALT_MFP setting for PD.7 */
1311:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD7_CAN0_TXD   NULL                /*!< No ALT_MFP1 setting for PD.7 */
1312:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD7_CAN0_TXD   NULL                /*!< No ALT_MFP2 setting for PD.7 */
1313:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD7_CAN0_TXD   0x00000000UL        /*!< ALT_MFP3 PD.7 setting for CAN0_TXD */
1314:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD7_CAN0_TXD   NULL                /*!< No ALT_MFP4 setting for PD.7 */
1315:./bsp/inc/SYS.h **** 
1316:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD7_BPWM1_CH0   (1UL<<7)            /*!< GPD_MFP PD.7 setting for BPWM1_CH0 */
1317:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD7_BPWM1_CH0   NULL                /*!< No ALT_MFP setting for PD.7 */
1318:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD7_BPWM1_CH0  NULL                /*!< No ALT_MFP1 setting for PD.7 */
1319:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD7_BPWM1_CH0  NULL                /*!< No ALT_MFP2 setting for PD.7 */
1320:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD7_BPWM1_CH0  (1UL<<18)           /*!< ALT_MFP3 PD.7 setting for BPWM1_CH0 */
1321:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD7_BPWM1_CH0  NULL                /*!< No ALT_MFP4 setting for PD.7 */
1322:./bsp/inc/SYS.h **** 
1323:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD7_Msk         (1UL<<7)            /*!< GPD_MFP PD.7 mask */
1324:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD7_Msk         NULL                /*!< No ALT_MFP PD.7 mask */
1325:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD7_Msk        NULL                /*!< No ALT_MFP1 PD.7 mask */
1326:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD7_Msk        NULL                /*!< No ALT_MFP2 PD.7 mask */
1327:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD7_Msk        (1UL<<18)           /*!< ALT_MFP3 PD.7 mask */
1328:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD7_Msk        NULL                /*!< No ALT_MFP4 PD.7 mask */
1329:./bsp/inc/SYS.h **** 
1330:./bsp/inc/SYS.h **** //PD.14
1331:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD14_GPIO       0x00000000UL        /*!< GPD_MFP PD.14 setting for GPIO */
1332:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD14_GPIO       NULL                /*!< No ALT_MFP setting for PD.14 */
1333:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD14_GPIO      NULL                /*!< No ALT_MFP1 setting for PD.14 */
1334:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD14_GPIO      NULL                /*!< No ALT_MFP2 setting for PD.14 */
1335:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD14_GPIO      0x00000000UL        /*!< ALT_MFP3 PD.14 setting for GPIO */
1336:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD14_GPIO      NULL                /*!< No ALT_MFP4 setting for PD.14 */
1337:./bsp/inc/SYS.h **** 
1338:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD14_UART2_RXD      (1UL<<14)       /*!< GPD_MFP PD.14 setting for UART2_RXD */
1339:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD14_UART2_RXD      NULL            /*!< No ALT_MFP setting for PD.14 */
1340:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD14_UART2_RXD     NULL            /*!< No ALT_MFP1 setting for PD.14 */
1341:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD14_UART2_RXD     NULL            /*!< No ALT_MFP2 setting for PD.14 */
1342:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD14_UART2_RXD     0x00000000UL    /*!< ALT_MFP3 PD.14 setting for UART2_RXD *
1343:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD14_UART2_RXD     NULL            /*!< No ALT_MFP4 setting for PD.14 */
1344:./bsp/inc/SYS.h **** 
1345:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD14_BPWM0_CH5      (1UL<<14)       /*!< GPD_MFP PD.14 setting for BPWM0_CH5 */
1346:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD14_BPWM0_CH5      NULL            /*!< No ALT_MFP setting for PD.14 */
1347:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD14_BPWM0_CH5     NULL            /*!< No ALT_MFP1 setting for PD.14 */
1348:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD14_BPWM0_CH5     NULL            /*!< No ALT_MFP2 setting for PD.14 */
1349:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD14_BPWM0_CH5     (1UL<<17)       /*!< ALT_MFP3 PD.14 setting for BPWM0_CH5 *
1350:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD14_BPWM0_CH5     NULL            /*!< No ALT_MFP4 setting for PD.14 */
1351:./bsp/inc/SYS.h **** 
1352:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD14_Msk        (1UL<<14)           /*!< GPD_MFP PD.14 mask */
1353:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD14_Msk        NULL                /*!< No ALT_MFP PD.14 mask */
1354:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD14_Msk       NULL                /*!< No ALT_MFP1 PD.14 mask */
1355:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD14_Msk       NULL                /*!< No ALT_MFP2 PD.14 mask */
1356:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD14_Msk       (1UL<<17)           /*!< ALT_MFP3 PD.14 mask */
1357:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD14_Msk       NULL                /*!< No ALT_MFP4 PD.14 mask */
1358:./bsp/inc/SYS.h **** 
1359:./bsp/inc/SYS.h **** //PD.15
1360:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD15_GPIO       0x00000000UL        /*!< GPD_MFP PD.15 setting for GPIO */
1361:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD15_GPIO       NULL                /*!< No ALT_MFP setting for PD.15 */
1362:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD15_GPIO      NULL                /*!< No ALT_MFP1 setting for PD.15 */
1363:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD15_GPIO      NULL                /*!< No ALT_MFP2 setting for PD.15 */
1364:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD15_GPIO      0x00000000UL        /*!< ALT_MFP3 PD.15 setting for GPIO */
1365:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD15_GPIO      NULL                /*!< No ALT_MFP4 setting for PD.15 */
1366:./bsp/inc/SYS.h **** 
1367:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD15_UART2_TXD      (1UL<<15)       /*!< GPD_MFP PD.15 setting for UART2_TXD */
1368:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD15_UART2_TXD      NULL            /*!< No ALT_MFP setting for PD.15 */
1369:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD15_UART2_TXD     NULL            /*!< No ALT_MFP1 setting for PD.15 */
1370:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD15_UART2_TXD     NULL            /*!< No ALT_MFP2 setting for PD.15 */
1371:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD15_UART2_TXD     0x00000000UL    /*!< ALT_MFP3 PD.15 setting for UART2_TXD *
1372:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD15_UART2_TXD     NULL            /*!< No ALT_MFP4 setting for PD.15 */
1373:./bsp/inc/SYS.h **** 
1374:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD15_BPWM0_CH4      (1UL<<15)       /*!< GPD_MFP PD.15 setting for BPWM0_CH4 */
1375:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD15_BPWM0_CH4      NULL            /*!< No ALT_MFP setting for PD.15 */
1376:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD15_BPWM0_CH4     NULL            /*!< No ALT_MFP1 setting for PD.15 */
1377:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD15_BPWM0_CH4     NULL            /*!< No ALT_MFP2 setting for PD.15 */
1378:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD15_BPWM0_CH4     (1UL<<16)       /*!< ALT_MFP3 PD.15 setting for BPWM0_CH4 *
1379:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD15_BPWM0_CH4     NULL            /*!< No ALT_MFP4 setting for PD.15 */
1380:./bsp/inc/SYS.h **** 
1381:./bsp/inc/SYS.h **** #define SYS_GPD_MFP_PD15_Msk        (1UL<<15)           /*!< GPD_MFP PD.15 mask */
1382:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PD15_Msk        NULL                /*!< No ALT_MFP PD.15 mask */
1383:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PD5_Msk        NULL                /*!< No ALT_MFP1 PD.15 mask */
1384:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PD15_Msk       NULL                /*!< No ALT_MFP2 PD.15 mask */
1385:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PD15_Msk       (1UL<<16)           /*!< ALT_MFP3 PD.15 mask */
1386:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PD15_Msk       NULL                /*!< No ALT_MFP4 PD.15 mask */
1387:./bsp/inc/SYS.h **** 
1388:./bsp/inc/SYS.h **** //PE.5
1389:./bsp/inc/SYS.h **** #define SYS_GPE_MFP_PE5_GPIO        0x00000000UL        /*!< GPE_MFP PE.5 setting for GPIO */
1390:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PE5_GPIO        0x00000000UL        /*!< ALT_MFP PE.5 setting for GPIO */
1391:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PE5_GPIO       NULL                /*!< No ALT_MFP1 setting for PE.5 */
1392:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PE5_GPIO       0x00000000UL        /*!< ALT_MFP2 PE.5 setting for GPIO */
1393:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PE5_GPIO       NULL                /*!< No ALT_MFP3 setting for PE.5 */
1394:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PE5_GPIO       NULL                /*!< No ALT_MFP4 setting for PE.5 */
1395:./bsp/inc/SYS.h **** 
1396:./bsp/inc/SYS.h **** #define SYS_GPE_MFP_PE5_PWM0_CH5    (1UL<<5)            /*!< GPE_MFP PE.5 setting for PWM0_CH5 */
1397:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PE5_PWM0_CH5    0x00000000UL        /*!< ALT_MFP PE.5 setting for PWM0_CH5 */
1398:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PE5_PWM0_CH5   NULL                /*!< No ALT_MFP1 setting for PE.5 */
1399:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PE5_PWM0_CH5   0x00000000UL        /*!< ALT_MFP2 PE.5 setting for PWM0_CH5 */
1400:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PE5_PWM0_CH5   NULL                /*!< No ALT_MFP3 setting for PE.5 */
1401:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PE5_PWM0_CH5   NULL                /*!< No ALT_MFP4 setting for PE.5 */
1402:./bsp/inc/SYS.h **** 
1403:./bsp/inc/SYS.h **** #define SYS_GPE_MFP_PE5_TM1         (1UL<<5)            /*!< GPE_MFP PE.5 setting for TM1 */
1404:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PE5_TM1         0x00000000UL        /*!< ALT_MFP PE.5 setting for TM1 */
1405:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PE5_TM1        NULL                /*!< No ALT_MFP1 setting for PE.5 */
1406:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PE5_TM1        (1UL<<3)            /*!< ALT_MFP2 PE.5 setting for TM1 */
1407:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PE5_TM1        NULL                /*!< No ALT_MFP3 setting for PE.5 */
1408:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PE5_TM1        NULL                /*!< No ALT_MFP4 setting for PE.5 */
1409:./bsp/inc/SYS.h **** 
1410:./bsp/inc/SYS.h **** #define SYS_GPE_MFP_PE5_TM1_EXT     (1UL<<5)            /*!< GPE_MFP PE.5 setting for TM1_EXT */
1411:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PE5_TM1_EXT     (1UL<<25)           /*!< ALT_MFP PE.5 setting for TM1_EXT */
1412:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PE5_TM1_EXT    NULL                /*!< No ALT_MFP1 setting for PE.5_EXT */
1413:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PE5_TM1_EXT    0x00000000UL        /*!< ALT_MFP2 PE.5 setting for TM1_EXT */
1414:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PE5_TM1_EXT    NULL                /*!< No ALT_MFP3 setting for PE.5 */
1415:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PE5_TM1_EXT    NULL                /*!< No ALT_MFP4 setting for PE.5 */
1416:./bsp/inc/SYS.h **** 
1417:./bsp/inc/SYS.h **** #define SYS_GPE_MFP_PE5_Msk         (1UL<<5)            /*!< GPE_MFP PE.5 mask */
1418:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PE5_Msk         (1UL<<25)           /*!< ALT_MFP PE.5 mask */
1419:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PE5_Msk        NULL                /*!< No ALT_MFP1 PE.5 mask */
1420:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PE5_Msk        (1UL<<3)            /*!< ALT_MFP2 PE.5 mask */
1421:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PE5_Msk        NULL                /*!< No ALT_MFP3 PE.5 mask */
1422:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PE5_Msk        NULL                /*!< No ALT_MFP4 PE.5 mask */
1423:./bsp/inc/SYS.h **** 
1424:./bsp/inc/SYS.h **** //PF.0
1425:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF0_GPIO        0x00000000UL        /*!< GPF_MFP PF.0 setting for GPIO */
1426:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF0_GPIO        NULL                /*!< No ALT_MFP setting for PF.0 */
1427:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF0_GPIO       NULL                /*!< No ALT_MFP1 setting for PF.0 */
1428:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF0_GPIO       NULL                /*!< No ALT_MFP2 setting for PF.0 */
1429:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF0_GPIO       0x00000000UL        /*!< ALT_MFP3 PF.0 setting for GPIO */
1430:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF0_GPIO       NULL                /*!< No ALT_MFP4 setting for PF.0 */
1431:./bsp/inc/SYS.h **** 
1432:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF0_XT1_OUT     (1UL<<0)            /*!< GPF_MFP PF.0 setting for XT1_OUT */
1433:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF0_XT1_OUT     NULL                /*!< No ALT_MFP setting for PF.0 */
1434:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF0_XT1_OUT    NULL                /*!< No ALT_MFP1 setting for PF.0 */
1435:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF0_XT1_OUT    NULL                /*!< No ALT_MFP2 setting for PF.0 */
1436:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF0_XT1_OUT    0x00000000UL        /*!< ALT_MFP3 PF.0 setting for XT1_OUT */
1437:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF0_XT1_OUT    NULL                /*!< No ALT_MFP4 setting for PF.0 */
1438:./bsp/inc/SYS.h **** 
1439:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF0_BPWM1_CH4   0x00000000UL        /*!< GPF_MFP PF.0 setting for BPWM1_CH4 */
1440:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF0_BPWM1_CH4   NULL                /*!< No ALT_MFP setting for PF.0 */
1441:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF0_BPWM1_CH4  NULL                /*!< No ALT_MFP1 setting for PF.0 */
1442:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF0_BPWM1_CH4  NULL                /*!< No ALT_MFP2 setting for PF.0 */
1443:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF0_BPWM1_CH4  (1UL<<22)           /*!< ALT_MFP3 PF.0 setting for BPWM1_CH4 */
1444:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF0_BPWM1_CH4  NULL                /*!< No ALT_MFP4 setting for PF.0 */
1445:./bsp/inc/SYS.h **** 
1446:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF0_Msk         (1UL<<0)            /*!< GPE_MFP PF.0 mask */
1447:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF0_Msk         NULL                /*!< No ALT_MFP PF.0 mask */
1448:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF0_Msk        NULL                /*!< No ALT_MFP1 PF.0 mask */
1449:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF0_Msk        NULL                /*!< No ALT_MFP2 PF.0 mask */
1450:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF0_Msk        (1UL<<22)           /*!< ALT_MFP3 PF.0 mask */
1451:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF0_Msk        NULL                /*!< No ALT_MFP4 PF.0 mask */
1452:./bsp/inc/SYS.h **** 
1453:./bsp/inc/SYS.h **** //PF.1
1454:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF1_GPIO        0x00000000UL        /*!< GPF_MFP PF.1 setting for GPIO */
1455:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF1_GPIO        NULL                /*!< No ALT_MFP setting for PF.1 */
1456:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF1_GPIO       NULL                /*!< No ALT_MFP1 setting for PF.1 */
1457:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF1_GPIO       NULL                /*!< No ALT_MFP2 setting for PF.1 */
1458:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF1_GPIO       0x00000000UL        /*!< ALT_MFP3 PF.1 setting for GPIO */
1459:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF1_GPIO       NULL                /*!< No ALT_MFP4 setting for PF.1 */
1460:./bsp/inc/SYS.h **** 
1461:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF1_XT1_IN      (1UL<<1)            /*!< GPF_MFP PF.1 setting for XT1_IN */
1462:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF1_XT1_IN      NULL                /*!< No ALT_MFP setting for PF.1 */
1463:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF1_XT1_IN     NULL                /*!< No ALT_MFP1 setting for PF.1 */
1464:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF1_XT1_IN     NULL                /*!< No ALT_MFP2 setting for PF.1 */
1465:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF1_XT1_IN     0x00000000UL        /*!< ALT_MFP3 PF.1 setting for XT1_IN */
1466:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF1_XT1_IN     NULL                /*!< No ALT_MFP4 setting for PF.1 */
1467:./bsp/inc/SYS.h **** 
1468:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF1_BPWM1_CH5   0x00000000UL        /*!< GPF_MFP PF.1 setting for BPWM1_CH5 */
1469:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF1_BPWM1_CH5   NULL                /*!< No ALT_MFP setting for PF.1 */
1470:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF1_BPWM1_CH5  NULL                /*!< No ALT_MFP1 setting for PF.1 */
1471:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF1_BPWM1_CH5  NULL                /*!< No ALT_MFP2 setting for PF.1 */
1472:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF1_BPWM1_CH5  (1UL<<23)           /*!< ALT_MFP3 PF.1 setting for BPWM1_CH5 */
1473:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF1_BPWM1_CH5  NULL                /*!< No ALT_MFP4 setting for PF.1 */
1474:./bsp/inc/SYS.h **** 
1475:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF1_Msk         (1UL<<1)            /*!< GPE_MFP PF.1 mask */
1476:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF1_Msk         NULL                /*!< No ALT_MFP PF.1 mask */
1477:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF1_Msk        NULL                /*!< No ALT_MFP1 PF.1 mask */
1478:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF1_Msk        NULL                /*!< No ALT_MFP2 PF.1 mask */
1479:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF1_Msk        (1UL<<23)           /*!< ALT_MFP3 PF.1 mask */
1480:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF1_Msk        NULL                /*!< No ALT_MFP4 PF.1 mask */
1481:./bsp/inc/SYS.h **** 
1482:./bsp/inc/SYS.h **** //PF.4
1483:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF4_GPIO        0x00000000UL        /*!< GPF_MFP PF.4 setting for GPIO */
1484:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF4_GPIO        NULL                /*!< No ALT_MFP setting for PF.4 */
1485:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF4_GPIO       NULL                /*!< No ALT_MFP1 setting for PF.4 */
1486:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF4_GPIO       NULL                /*!< No ALT_MFP2 setting for PF.4 */
1487:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF4_GPIO       0x00000000UL        /*!< ALT_MFP3 PF.4 setting for GPIO */
1488:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF4_GPIO       NULL                /*!< No ALT_MFP4 setting for PF.4 */
1489:./bsp/inc/SYS.h **** 
1490:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF4_I2C0_SDA    (1UL<<4)            /*!< GPF_MFP PF.4 setting for I2C0_SDA */
1491:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF4_I2C0_SDA    NULL                /*!< No ALT_MFP setting for PF.4 */
1492:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF4_I2C0_SDA   NULL                /*!< No ALT_MFP1 setting for PF.4 */
1493:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF4_I2C0_SDA   NULL                /*!< No ALT_MFP2 setting for PF.4 */
1494:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF4_I2C0_SDA   0x00000000UL        /*!< ALT_MFP3 PF.4 setting for I2C0_SDA */
1495:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF4_I2C0_SDA   NULL                /*!< No ALT_MFP4 setting for PF.4 */
1496:./bsp/inc/SYS.h **** 
1497:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF4_PWM1_CH4    (1UL<<4)            /*!< GPF_MFP PF.4 setting for PWM1_CH4 */
1498:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF4_PWM1_CH4    NULL                /*!< No ALT_MFP setting for PF.4 */
1499:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF4_PWM1_CH4   NULL                /*!< No ALT_MFP1 setting for PF.4 */
1500:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF4_PWM1_CH4   NULL                /*!< No ALT_MFP2 setting for PF.4 */
1501:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF4_PWM1_CH4   (1UL<<10)           /*!< ALT_MFP3 PF.4 setting for PWM1_CH4 */
1502:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF4_PWM1_CH4   NULL                /*!< No ALT_MFP4 setting for PF.4 */
1503:./bsp/inc/SYS.h **** 
1504:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF4_Msk         (1UL<<4)            /*!< GPF_MFP PF.4 mask */
1505:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF4_Msk         NULL                /*!< No ALT_MFP PF.4 mask */
1506:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF4_Msk        NULL                /*!< No ALT_MFP1 PF.4 mask */
1507:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF4_Msk        NULL                /*!< No ALT_MFP2 PF.4 mask */
1508:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF4_Msk        (1UL<<10)           /*!< ALT_MFP3 PF.4 mask */
1509:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF4_Msk        NULL                /*!< No ALT_MFP4 PF.4 mask */
1510:./bsp/inc/SYS.h **** 
1511:./bsp/inc/SYS.h **** //PF.5
1512:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF5_GPIO        0x00000000UL        /*!< GPF_MFP PF.5 setting for GPIO */
1513:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF5_GPIO        NULL                /*!< No ALT_MFP setting for PF.5 */
1514:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF5_GPIO       NULL                /*!< No ALT_MFP1 setting for PF.5 */
1515:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF5_GPIO       NULL                /*!< No ALT_MFP2 setting for PF.5 */
1516:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF5_GPIO       0x00000000UL        /*!< ALT_MFP3 PF.5 setting for GPIO */
1517:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF5_GPIO       NULL                /*!< No ALT_MFP4 setting for PF.5 */
1518:./bsp/inc/SYS.h **** 
1519:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF5_I2C0_SCL    (1UL<<5)            /*!< GPF_MFP PF.5 setting for I2C0_SCL */
1520:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF5_I2C0_SCL    NULL                /*!< No ALT_MFP setting for PF.5 */
1521:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF5_I2C0_SCL   NULL                /*!< No ALT_MFP1 setting for PF.5 */
1522:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF5_I2C0_SCL   NULL                /*!< No ALT_MFP2 setting for PF.5 */
1523:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF5_I2C0_SCL   0x00000000UL        /*!< ALT_MFP3 PF.5 setting for I2C0_SCL */
1524:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF5_I2C0_SCL   NULL                /*!< No ALT_MFP4 setting for PF.5 */
1525:./bsp/inc/SYS.h **** 
1526:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF5_PWM1_CH5    (1UL<<5)            /*!< GPF_MFP PF.5 setting for PWM1_CH5 */
1527:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF5_PWM1_CH5    NULL                /*!< No ALT_MFP setting for PF.6 */
1528:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF5_PWM1_CH5   NULL                /*!< No ALT_MFP1 setting for PF.5 */
1529:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF5_PWM1_CH5   NULL                /*!< No ALT_MFP2 setting for PF.5 */
1530:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF5_PWM1_CH5   (1UL<<11)           /*!< ALT_MFP3 PF.5 setting for PWM1_CH5 */
1531:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF5_PWM1_CH5   NULL                /*!< No ALT_MFP4 setting for PF.5 */
1532:./bsp/inc/SYS.h **** 
1533:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF5_Msk         (1UL<<5)            /*!< GPF_MFP PF.5 mask */
1534:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF5_Msk         NULL                /*!< No ALT_MFP PF.5 mask */
1535:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF5_Msk        NULL                /*!< No ALT_MFP1 PF.5 mask */
1536:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF5_Msk        NULL                /*!< No ALT_MFP2 PF.5 mask */
1537:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF5_Msk        (1UL<<11)           /*!< ALT_MFP3 PF.5 mask */
1538:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF5_Msk        NULL                /*!< No ALT_MFP4 PF.5 mask */
1539:./bsp/inc/SYS.h **** 
1540:./bsp/inc/SYS.h **** //PF.6
1541:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF6_GPIO        0x00000000UL        /*!< GPF_MFP PF.6 setting for GPIO */
1542:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF6_GPIO        NULL                /*!< No ALT_MFP setting for PF.6 */
1543:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF6_GPIO       NULL                /*!< No ALT_MFP1 setting for PF.6 */
1544:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF6_GPIO       NULL                /*!< No ALT_MFP2 setting for PF.6 */
1545:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF6_GPIO       NULL                /*!< No ALT_MFP3 setting for PF.6 */
1546:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF6_GPIO       NULL                /*!< No ALT_MFP4 setting for PF.6 */
1547:./bsp/inc/SYS.h **** 
1548:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF6_ICE_CLK     (1UL<<6)            /*!< GPF_MFP PF.6 setting for ICE_CLK */
1549:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF6_ICE_CLK     NULL                /*!< No ALT_MFP setting for PF.6 */
1550:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF6_ICE_CLK    NULL                /*!< No ALT_MFP1 setting for PF.6 */
1551:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF6_ICE_CLK    NULL                /*!< No ALT_MFP2 setting for PF.6 */
1552:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF6_ICE_CLK    NULL                /*!< No ALT_MFP3 setting for PF.6 */
1553:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF6_ICE_CLK    NULL                /*!< No ALT_MFP4 setting for PF.6 */
1554:./bsp/inc/SYS.h **** 
1555:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF6_Msk         (1UL<<6)            /*!< GPF_MFP PF.6 mask */
1556:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF6_Msk         NULL                /*!< No ALT_MFP PF.6 mask */
1557:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF6_Msk        NULL                /*!< No ALT_MFP1 PF.6 mask */
1558:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF6_Msk        NULL                /*!< No ALT_MFP2 PF.6 mask */
1559:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF6_Msk        NuLL                /*!< No ALT_MFP3 PF.6 mask */
1560:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF6_Msk        NULL                /*!< No ALT_MFP4 PF.6 mask */
1561:./bsp/inc/SYS.h **** 
1562:./bsp/inc/SYS.h **** //PF.7
1563:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF7_GPIO        0x00000000UL        /*!< GPF_MFP PF.7 setting for GPIO */
1564:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF7_GPIO        NULL                /*!< No ALT_MFP setting for PF.7 */
1565:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF7_GPIO       NULL                /*!< No ALT_MFP1 setting for PF.7 */
1566:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF7_GPIO       NULL                /*!< No ALT_MFP2 setting for PF.7 */
1567:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF7_GPIO       NULL                /*!< No ALT_MFP3 setting for PF.7 */
1568:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF7_GPIO       NULL                /*!< No ALT_MFP4 setting for PF.7 */
1569:./bsp/inc/SYS.h **** 
1570:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF7_ICE_DAT     (1UL<<7)            /*!< GPF_MFP PF.7 setting for ICE_DAT */
1571:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF7_ICE_DAT     NULL                /*!< No ALT_MFP setting for PF.7 */
1572:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF7_ICE_DAT    NULL                /*!< No ALT_MFP1 setting for PF.7 */
1573:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF7_ICE_DAT    NULL                /*!< No ALT_MFP2 setting for PF.7 */
1574:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF7_ICE_DAT    NULL                /*!< No ALT_MFP3 setting for PF.7 */
1575:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF7_ICE_DAT    NULL                /*!< No ALT_MFP4 setting for PF.7 */
1576:./bsp/inc/SYS.h **** 
1577:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF7_Msk         (1UL<<7)            /*!< GPF_MFP PF.7 mask */
1578:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF7_Msk         NULL                /*!< No ALT_MFP PF.7 mask */
1579:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF7_Msk        NULL                /*!< No ALT_MFP1 PF.7 mask */
1580:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF7_Msk        NULL                /*!< No ALT_MFP2 PF.7 mask */
1581:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF7_Msk        NuLL                /*!< No ALT_MFP3 PF.7 mask */
1582:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF7_Msk        NULL                /*!< No ALT_MFP4 PF.7 mask */
1583:./bsp/inc/SYS.h **** 
1584:./bsp/inc/SYS.h **** //PF.8
1585:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF8_GPIO        0x00000000UL        /*!< GPF_MFP PF.8 setting for GPIO */
1586:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF8_GPIO        NULL                /*!< No ALT_MFP setting for PF.8 */
1587:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF8_GPIO       NULL                /*!< No ALT_MFP1 setting for PF.8 */
1588:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF8_GPIO       NULL                /*!< No ALT_MFP2 setting for PF.8 */
1589:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF8_GPIO       NULL                /*!< No ALT_MFP3 setting for PF.8 */
1590:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF8_GPIO       NULL                /*!< No ALT_MFP4 setting for PF.8 */
1591:./bsp/inc/SYS.h **** 
1592:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF8_CLKO        0x00000000UL        /*!< GPF_MFP PF.8 setting for CLKO */
1593:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF8_CLKO        NULL                /*!< No ALT_MFP setting for PF.8 */
1594:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF8_CLKO       NULL                /*!< No ALT_MFP1 setting for PF.8 */
1595:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF8_CLKO       NULL                /*!< No ALT_MFP2 setting for PF.8 */
1596:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF8_CLKO       NULL                /*!< No ALT_MFP3 setting for PF.8 */
1597:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF8_CLKO       NULL                /*!< No ALT_MFP4 setting for PF.8 */
1598:./bsp/inc/SYS.h **** 
1599:./bsp/inc/SYS.h **** #define SYS_GPF_MFP_PF8_Msk         (1UL<<8)            /*!< GPF_MFP PF.8 mask */
1600:./bsp/inc/SYS.h **** #define SYS_ALT_MFP_PF8_Msk         NULL                /*!< No ALT_MFP PF.8 mask */
1601:./bsp/inc/SYS.h **** #define SYS_ALT_MFP1_PF8_Msk        NULL                /*!< No ALT_MFP1 PF.8 mask */
1602:./bsp/inc/SYS.h **** #define SYS_ALT_MFP2_PF8_Msk        NULL                /*!< No ALT_MFP2 PF.8 mask */
1603:./bsp/inc/SYS.h **** #define SYS_ALT_MFP3_PF8_Msk        NuLL                /*!< No ALT_MFP3 PF.8 mask */
1604:./bsp/inc/SYS.h **** #define SYS_ALT_MFP4_PF8_Msk        NULL                /*!< No ALT_MFP4 PF.8 mask */
1605:./bsp/inc/SYS.h **** 
1606:./bsp/inc/SYS.h **** 
1607:./bsp/inc/SYS.h **** /*@}*/ /* end of group NUC131_SYS_EXPORTED_CONSTANTS */
1608:./bsp/inc/SYS.h **** 
1609:./bsp/inc/SYS.h **** /** @addtogroup NUC131_SYS_EXPORTED_FUNCTIONS SYS Exported Functions
1610:./bsp/inc/SYS.h ****   @{
1611:./bsp/inc/SYS.h **** */
1612:./bsp/inc/SYS.h **** 
1613:./bsp/inc/SYS.h **** 
1614:./bsp/inc/SYS.h **** /**
1615:./bsp/inc/SYS.h ****   * @brief      Clear Brown-out detector interrupt flag
1616:./bsp/inc/SYS.h ****   * @param      None
1617:./bsp/inc/SYS.h ****   * @return     None
1618:./bsp/inc/SYS.h ****   * @details    This macro clear Brown-out detector interrupt flag.
1619:./bsp/inc/SYS.h ****   */
1620:./bsp/inc/SYS.h **** #define SYS_CLEAR_BOD_INT_FLAG()        (SYS->BODCR |= SYS_BODCR_BOD_INTF_Msk)
1621:./bsp/inc/SYS.h **** 
1622:./bsp/inc/SYS.h **** /**
1623:./bsp/inc/SYS.h ****   * @brief      Set Brown-out detector function to normal mode
1624:./bsp/inc/SYS.h ****   * @param      None
1625:./bsp/inc/SYS.h ****   * @return     None
1626:./bsp/inc/SYS.h ****   * @details    This macro set Brown-out detector to normal mode.
1627:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1628:./bsp/inc/SYS.h ****   */
1629:./bsp/inc/SYS.h **** #define SYS_CLEAR_BOD_LPM()             (SYS->BODCR &= ~SYS_BODCR_BOD_LPM_Msk)
1630:./bsp/inc/SYS.h **** 
1631:./bsp/inc/SYS.h **** /**
1632:./bsp/inc/SYS.h ****   * @brief      Disable Brown-out detector function
1633:./bsp/inc/SYS.h ****   * @param      None
1634:./bsp/inc/SYS.h ****   * @return     None
1635:./bsp/inc/SYS.h ****   * @details    This macro disable Brown-out detector function.
1636:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1637:./bsp/inc/SYS.h ****   */
1638:./bsp/inc/SYS.h **** #define SYS_DISABLE_BOD()               (SYS->BODCR &= ~SYS_BODCR_BOD_EN_Msk)
1639:./bsp/inc/SYS.h **** 
1640:./bsp/inc/SYS.h **** /**
1641:./bsp/inc/SYS.h ****   * @brief      Enable Brown-out detector function
1642:./bsp/inc/SYS.h ****   * @param      None
1643:./bsp/inc/SYS.h ****   * @return     None
1644:./bsp/inc/SYS.h ****   * @details    This macro enable Brown-out detector function.
1645:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1646:./bsp/inc/SYS.h ****   */
1647:./bsp/inc/SYS.h **** #define SYS_ENABLE_BOD()                (SYS->BODCR |= SYS_BODCR_BOD_EN_Msk)
1648:./bsp/inc/SYS.h **** 
1649:./bsp/inc/SYS.h **** /**
1650:./bsp/inc/SYS.h ****   * @brief      Get Brown-out detector interrupt flag
1651:./bsp/inc/SYS.h ****   * @param      None
1652:./bsp/inc/SYS.h ****   * @retval     0   Brown-out detect interrupt flag is not set.
1653:./bsp/inc/SYS.h ****   * @retval     >=1 Brown-out detect interrupt flag is set.
1654:./bsp/inc/SYS.h ****   * @details    This macro get Brown-out detector interrupt flag.
1655:./bsp/inc/SYS.h ****   */
1656:./bsp/inc/SYS.h **** #define SYS_GET_BOD_INT_FLAG()          (SYS->BODCR & SYS_BODCR_BOD_INTF_Msk)
1657:./bsp/inc/SYS.h **** 
1658:./bsp/inc/SYS.h **** /**
1659:./bsp/inc/SYS.h ****   * @brief      Get Brown-out detector status
1660:./bsp/inc/SYS.h ****   * @param      None
1661:./bsp/inc/SYS.h ****   * @retval     0   System voltage is higher than BOD threshold voltage setting or BOD function is 
1662:./bsp/inc/SYS.h ****   * @retval     >=1 System voltage is lower than BOD threshold voltage setting.
1663:./bsp/inc/SYS.h ****   * @details    This macro get Brown-out detector output status.
1664:./bsp/inc/SYS.h ****   *             If the BOD function is disabled, this function always return 0.
1665:./bsp/inc/SYS.h ****   */
1666:./bsp/inc/SYS.h **** #define SYS_GET_BOD_OUTPUT()            (SYS->BODCR & SYS_BODCR_BOD_OUT_Msk)
1667:./bsp/inc/SYS.h **** 
1668:./bsp/inc/SYS.h **** /**
1669:./bsp/inc/SYS.h ****   * @brief      Enable Brown-out detector interrupt function
1670:./bsp/inc/SYS.h ****   * @param      None
1671:./bsp/inc/SYS.h ****   * @return     None
1672:./bsp/inc/SYS.h ****   * @details    This macro enable Brown-out detector interrupt function.
1673:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1674:./bsp/inc/SYS.h ****   */
1675:./bsp/inc/SYS.h **** #define SYS_DISABLE_BOD_RST()           (SYS->BODCR &= ~SYS_BODCR_BOD_RSTEN_Msk)
1676:./bsp/inc/SYS.h **** 
1677:./bsp/inc/SYS.h **** /**
1678:./bsp/inc/SYS.h ****   * @brief      Enable Brown-out detector reset function
1679:./bsp/inc/SYS.h ****   * @param      None
1680:./bsp/inc/SYS.h ****   * @return     None
1681:./bsp/inc/SYS.h ****   * @details    This macro enable Brown-out detect reset function.
1682:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1683:./bsp/inc/SYS.h ****   */
1684:./bsp/inc/SYS.h **** #define SYS_ENABLE_BOD_RST()            (SYS->BODCR |= SYS_BODCR_BOD_RSTEN_Msk)
1685:./bsp/inc/SYS.h **** 
1686:./bsp/inc/SYS.h **** /**
1687:./bsp/inc/SYS.h ****   * @brief      Set Brown-out detector function low power mode
1688:./bsp/inc/SYS.h ****   * @param      None
1689:./bsp/inc/SYS.h ****   * @return     None
1690:./bsp/inc/SYS.h ****   * @details    This macro set Brown-out detector to low power mode.
1691:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1692:./bsp/inc/SYS.h ****   */
1693:./bsp/inc/SYS.h **** #define SYS_SET_BOD_LPM()               (SYS->BODCR |= SYS_BODCR_BOD_LPM_Msk)
1694:./bsp/inc/SYS.h **** 
1695:./bsp/inc/SYS.h **** /**
1696:./bsp/inc/SYS.h ****   * @brief      Set Brown-out detector voltage level
1697:./bsp/inc/SYS.h ****   * @param[in]  u32Level is Brown-out voltage level. Including :
1698:./bsp/inc/SYS.h ****   *             - \ref SYS_BODCR_BOD_VL_4_4V
1699:./bsp/inc/SYS.h ****   *             - \ref SYS_BODCR_BOD_VL_3_7V
1700:./bsp/inc/SYS.h ****   *             - \ref SYS_BODCR_BOD_VL_2_7V
1701:./bsp/inc/SYS.h ****   *             - \ref SYS_BODCR_BOD_VL_2_2V
1702:./bsp/inc/SYS.h ****   * @return     None
1703:./bsp/inc/SYS.h ****   * @details    This macro set Brown-out detector voltage level.
1704:./bsp/inc/SYS.h ****   *             The write-protection function should be disabled before using this macro.
1705:./bsp/inc/SYS.h ****   */
1706:./bsp/inc/SYS.h **** #define SYS_SET_BOD_LEVEL(u32Level)     (SYS->BODCR = (SYS->BODCR & ~SYS_BODCR_BOD_VL_Msk) | (u32Le
1707:./bsp/inc/SYS.h **** 
1708:./bsp/inc/SYS.h **** /**
1709:./bsp/inc/SYS.h ****   * @brief      Get reset source is from Brown-out detector reset
1710:./bsp/inc/SYS.h ****   * @param      None
1711:./bsp/inc/SYS.h ****   * @retval     0   Previous reset source is not from Brown-out detector reset
1712:./bsp/inc/SYS.h ****   * @retval     >=1 Previous reset source is from Brown-out detector reset
1713:./bsp/inc/SYS.h ****   * @details    This macro get previous reset source is from Brown-out detect reset or not.
1714:./bsp/inc/SYS.h ****   */
1715:./bsp/inc/SYS.h **** #define SYS_IS_BOD_RST()                (SYS->RSTSRC & SYS_RSTSRC_RSTS_BOD_Msk)
1716:./bsp/inc/SYS.h **** 
1717:./bsp/inc/SYS.h **** /**
1718:./bsp/inc/SYS.h ****   * @brief      Get reset source is from CPU reset
1719:./bsp/inc/SYS.h ****   * @param      None
1720:./bsp/inc/SYS.h ****   * @retval     0   Previous reset source is not from CPU reset
1721:./bsp/inc/SYS.h ****   * @retval     >=1 Previous reset source is from CPU reset
1722:./bsp/inc/SYS.h ****   * @details    This macro get previous reset source is from CPU reset.
1723:./bsp/inc/SYS.h ****   */
1724:./bsp/inc/SYS.h **** #define SYS_IS_CPU_RST()                (SYS->RSTSRC & SYS_RSTSRC_RSTS_CPU_Msk)
1725:./bsp/inc/SYS.h **** 
1726:./bsp/inc/SYS.h **** /**
1727:./bsp/inc/SYS.h ****   * @brief      Get reset source is from Power-on Reset
1728:./bsp/inc/SYS.h ****   * @param      None
1729:./bsp/inc/SYS.h ****   * @retval     0   Previous reset source is not from Power-on Reset
1730:./bsp/inc/SYS.h ****   * @retval     >=1 Previous reset source is from Power-on Reset
1731:./bsp/inc/SYS.h ****   * @details    This macro get previous reset source is from Power-on Reset.
1732:./bsp/inc/SYS.h ****   */
1733:./bsp/inc/SYS.h **** #define SYS_IS_POR_RST()                (SYS->RSTSRC & SYS_RSTSRC_RSTS_POR_Msk)
1734:./bsp/inc/SYS.h **** 
1735:./bsp/inc/SYS.h **** /**
1736:./bsp/inc/SYS.h ****   * @brief      Get reset source is from reset pin reset
1737:./bsp/inc/SYS.h ****   * @param      None
1738:./bsp/inc/SYS.h ****   * @retval     0   Previous reset source is not from reset pin reset
1739:./bsp/inc/SYS.h ****   * @retval     >=1 Previous reset source is from reset pin reset
1740:./bsp/inc/SYS.h ****   * @details    This macro get previous reset source is from reset pin reset.
1741:./bsp/inc/SYS.h ****   */
1742:./bsp/inc/SYS.h **** #define SYS_IS_RSTPIN_RST()             (SYS->RSTSRC & SYS_RSTSRC_RSTS_RESET_Msk)
1743:./bsp/inc/SYS.h **** 
1744:./bsp/inc/SYS.h **** /**
1745:./bsp/inc/SYS.h ****   * @brief      Get reset source is from system reset
1746:./bsp/inc/SYS.h ****   * @param      None
1747:./bsp/inc/SYS.h ****   * @retval     0   Previous reset source is not from system reset
1748:./bsp/inc/SYS.h ****   * @retval     >=1 Previous reset source is from system reset
1749:./bsp/inc/SYS.h ****   * @details    This macro get previous reset source is from system reset.
1750:./bsp/inc/SYS.h ****   */
1751:./bsp/inc/SYS.h **** #define SYS_IS_SYSTEM_RST()             (SYS->RSTSRC & SYS_RSTSRC_RSTS_MCU_Msk)
1752:./bsp/inc/SYS.h **** 
1753:./bsp/inc/SYS.h **** /**
1754:./bsp/inc/SYS.h ****   * @brief      Get reset source is from window watch dog reset
1755:./bsp/inc/SYS.h ****   * @param      None
1756:./bsp/inc/SYS.h ****   * @retval     0   Previous reset source is not from window watch dog reset
1757:./bsp/inc/SYS.h ****   * @retval     >=1 Previous reset source is from window watch dog reset
1758:./bsp/inc/SYS.h ****   * @details    This macro get previous reset source is from window watch dog reset.
1759:./bsp/inc/SYS.h ****   */
1760:./bsp/inc/SYS.h **** #define SYS_IS_WDT_RST()                (SYS->RSTSRC & SYS_RSTSRC_RSTS_WDT_Msk)
1761:./bsp/inc/SYS.h **** 
1762:./bsp/inc/SYS.h **** /**
1763:./bsp/inc/SYS.h ****   * @brief      Disable Low-Voltage-Reset function
1764:./bsp/inc/SYS.h ****   * @param      None
1765:./bsp/inc/SYS.h ****   * @return     None
1766:./bsp/inc/SYS.h ****   * @details    This macro disable Low-Voltage-Reset function.
1767:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1768:./bsp/inc/SYS.h ****   */
1769:./bsp/inc/SYS.h **** #define SYS_DISABLE_LVR()               (SYS->BODCR &= ~SYS_BODCR_LVR_EN_Msk)
1770:./bsp/inc/SYS.h **** 
1771:./bsp/inc/SYS.h **** /**
1772:./bsp/inc/SYS.h ****   * @brief      Enable Low-Voltage-Reset function
1773:./bsp/inc/SYS.h ****   * @param      None
1774:./bsp/inc/SYS.h ****   * @return     None
1775:./bsp/inc/SYS.h ****   * @details    This macro enable Low-Voltage-Reset function.
1776:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1777:./bsp/inc/SYS.h ****   */
1778:./bsp/inc/SYS.h **** #define SYS_ENABLE_LVR()                (SYS->BODCR |= SYS_BODCR_LVR_EN_Msk)
1779:./bsp/inc/SYS.h **** 
1780:./bsp/inc/SYS.h **** /**
1781:./bsp/inc/SYS.h ****   * @brief      Disable Power-on Reset function
1782:./bsp/inc/SYS.h ****   * @param      None
1783:./bsp/inc/SYS.h ****   * @return     None
1784:./bsp/inc/SYS.h ****   * @details    This macro disable Power-on Reset function.
1785:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1786:./bsp/inc/SYS.h ****   */
1787:./bsp/inc/SYS.h **** #define SYS_DISABLE_POR()               (SYS->PORCR = 0x5AA5)
1788:./bsp/inc/SYS.h **** 
1789:./bsp/inc/SYS.h **** /**
1790:./bsp/inc/SYS.h ****   * @brief      Enable Power-on Reset function
1791:./bsp/inc/SYS.h ****   * @param      None
1792:./bsp/inc/SYS.h ****   * @return     None
1793:./bsp/inc/SYS.h ****   * @details    This macro enable Power-on Reset function.
1794:./bsp/inc/SYS.h ****   *             The register write-protection function should be disabled before using this macro.
1795:./bsp/inc/SYS.h ****   */
1796:./bsp/inc/SYS.h **** #define SYS_ENABLE_POR()                (SYS->PORCR = 0)
1797:./bsp/inc/SYS.h **** 
1798:./bsp/inc/SYS.h **** /**
1799:./bsp/inc/SYS.h ****   * @brief      Clear reset source flag
1800:./bsp/inc/SYS.h ****   * @param[in]  u32RstSrc is reset source. Including:
1801:./bsp/inc/SYS.h ****   *             - \ref SYS_RSTSRC_RSTS_CPU_Msk
1802:./bsp/inc/SYS.h ****   *             - \ref SYS_RSTSRC_RSTS_SYS_Msk
1803:./bsp/inc/SYS.h ****   *             - \ref SYS_RSTSRC_RSTS_BOD_Msk
1804:./bsp/inc/SYS.h ****   *             - \ref SYS_RSTSRC_RSTS_LVR_Msk
1805:./bsp/inc/SYS.h ****   *             - \ref SYS_RSTSRC_RSTS_WDT_Msk
1806:./bsp/inc/SYS.h ****   *             - \ref SYS_RSTSRC_RSTS_RESET_Msk
1807:./bsp/inc/SYS.h ****   *             - \ref SYS_RSTSRC_RSTS_POR_Msk
1808:./bsp/inc/SYS.h ****   * @return     None
1809:./bsp/inc/SYS.h ****   * @details    This macro clear reset source flag.
1810:./bsp/inc/SYS.h ****   */
1811:./bsp/inc/SYS.h **** #define SYS_CLEAR_RST_SOURCE(u32RstSrc) (SYS->RSTSRC | (u32RstSrc) )
1812:./bsp/inc/SYS.h **** 
1813:./bsp/inc/SYS.h **** 
1814:./bsp/inc/SYS.h **** /**
1815:./bsp/inc/SYS.h ****   * @brief      Enable register write-protection function
1816:./bsp/inc/SYS.h ****   * @param      None
1817:./bsp/inc/SYS.h ****   * @return     None
1818:./bsp/inc/SYS.h ****   * @details    This function enable register write-protection function.
1819:./bsp/inc/SYS.h ****   *             To lock the protected register to forbid write access.
1820:./bsp/inc/SYS.h ****   */
1821:./bsp/inc/SYS.h **** static __INLINE void SYS_LockReg(void)
1822:./bsp/inc/SYS.h **** {
1823:./bsp/inc/SYS.h ****     SYS->REGWRPROT = 0;
1824:./bsp/inc/SYS.h **** }
1825:./bsp/inc/SYS.h **** 
1826:./bsp/inc/SYS.h **** /**
1827:./bsp/inc/SYS.h ****   * @brief      Disable register write-protection function
1828:./bsp/inc/SYS.h ****   * @param      None
1829:./bsp/inc/SYS.h ****   * @return     None
1830:./bsp/inc/SYS.h ****   * @details    This function disable register write-protection function.
1831:./bsp/inc/SYS.h ****   *             To unlock the protected register to allow write access.
1832:./bsp/inc/SYS.h ****   *
1833:./bsp/inc/SYS.h ****   */
1834:./bsp/inc/SYS.h **** static __INLINE void SYS_UnlockReg(void)
1835:./bsp/inc/SYS.h **** {
1836:./bsp/inc/SYS.h ****     while(SYS->REGWRPROT != SYS_REGWRPROT_REGPROTDIS_Msk)
1837:./bsp/inc/SYS.h ****     {
1838:./bsp/inc/SYS.h ****         SYS->REGWRPROT = 0x59;
 149              		.loc 4 1838 0
 150 0002 5921     		movs	r1, #89
1839:./bsp/inc/SYS.h ****         SYS->REGWRPROT = 0x16;
 151              		.loc 4 1839 0
 152 0004 1620     		movs	r0, #22
1840:./bsp/inc/SYS.h ****         SYS->REGWRPROT = 0x88;
 153              		.loc 4 1840 0
 154 0006 8824     		movs	r4, #136
1836:./bsp/inc/SYS.h ****     {
 155              		.loc 4 1836 0
 156 0008 064B     		ldr	r3, .L16
 157              	.L13:
 158 000a 5A68     		ldr	r2, [r3, #4]
 159 000c 012A     		cmp	r2, #1
 160 000e 03D0     		beq	.L15
1838:./bsp/inc/SYS.h ****         SYS->REGWRPROT = 0x16;
 161              		.loc 4 1838 0
 162 0010 5960     		str	r1, [r3, #4]
1839:./bsp/inc/SYS.h ****         SYS->REGWRPROT = 0x88;
 163              		.loc 4 1839 0
 164 0012 5860     		str	r0, [r3, #4]
 165              		.loc 4 1840 0
 166 0014 5C60     		str	r4, [r3, #4]
 167 0016 F8E7     		b	.L13
 168              	.L15:
 169              	.LBE19:
 170              	.LBE18:
  19:./drive/fmc_rw.c ****     /* Unlock protected registers */
  20:./drive/fmc_rw.c ****     SYS_UnlockReg();
  21:./drive/fmc_rw.c ****     FMC->ISPCON |=  FMC_ISPCON_ISPEN_Msk | FMC_ISPCON_APUEN_Msk;
 171              		.loc 3 21 0
 172 0018 0921     		movs	r1, #9
 173 001a 034A     		ldr	r2, .L16+4
  22:./drive/fmc_rw.c **** }
 174              		.loc 3 22 0
 175              		@ sp needed
  21:./drive/fmc_rw.c **** }
 176              		.loc 3 21 0
 177 001c 1368     		ldr	r3, [r2]
 178 001e 0B43     		orrs	r3, r1
 179 0020 1360     		str	r3, [r2]
 180              		.loc 3 22 0
 181 0022 10BD     		pop	{r4, pc}
 182              	.L17:
 183              		.align	2
 184              	.L16:
 185 0024 FC000050 		.word	1342177532
 186 0028 00C00050 		.word	1342226432
 187              		.cfi_endproc
 188              	.LFE61:
 190              		.section	.text.fmc_Init,"ax",%progbits
 191              		.align	1
 192              		.global	fmc_Init
 193              		.code	16
 194              		.thumb_func
 196              	fmc_Init:
 197              	.LFB66:
  23:./drive/fmc_rw.c **** 
  24:./drive/fmc_rw.c **** __STATIC_INLINE
  25:./drive/fmc_rw.c **** void fmc_close(void){
  26:./drive/fmc_rw.c ****     FMC->ISPCON &= ~(FMC_ISPCON_ISPEN_Msk | FMC_ISPCON_APUEN_Msk);   
  27:./drive/fmc_rw.c ****     SYS_LockReg();
  28:./drive/fmc_rw.c **** }
  29:./drive/fmc_rw.c **** 
  30:./drive/fmc_rw.c **** __STATIC_INLINE
  31:./drive/fmc_rw.c **** int32_t fmc_WriteConfig(uint32_t *u32Config, uint32_t u32Count)
  32:./drive/fmc_rw.c **** {
  33:./drive/fmc_rw.c ****     int32_t i;
  34:./drive/fmc_rw.c **** 
  35:./drive/fmc_rw.c ****     for(i = 0; i < u32Count; i++)
  36:./drive/fmc_rw.c ****     {
  37:./drive/fmc_rw.c ****         FMC_Write(FMC_CONFIG_BASE + i * 4, u32Config[i]);
  38:./drive/fmc_rw.c ****         if(FMC_Read(FMC_CONFIG_BASE + i * 4) != u32Config[i])
  39:./drive/fmc_rw.c ****             return -1;
  40:./drive/fmc_rw.c ****     }
  41:./drive/fmc_rw.c **** 
  42:./drive/fmc_rw.c ****     return 0;
  43:./drive/fmc_rw.c **** }
  44:./drive/fmc_rw.c **** 
  45:./drive/fmc_rw.c **** __STATIC_INLINE 
  46:./drive/fmc_rw.c **** void fmc_CfgDataFlash( void )
  47:./drive/fmc_rw.c **** {
  48:./drive/fmc_rw.c ****     OS_SREG_VAR;
  49:./drive/fmc_rw.c ****     OS_ENTER_CRITICAL();
  50:./drive/fmc_rw.c ****     fmc_open();
  51:./drive/fmc_rw.c ****     //uint32 uData = FMC_Read(FMC_CONFIG_BASE + 4);
  52:./drive/fmc_rw.c ****     uint32 uData = FMC->DFBADR;
  53:./drive/fmc_rw.c **** 
  54:./drive/fmc_rw.c ****     if( uData != (uint32) __DataFlash )
  55:./drive/fmc_rw.c ****     {
  56:./drive/fmc_rw.c ****         FMC->ISPCON |= FMC_ISPCON_CFGUEN_Msk;
  57:./drive/fmc_rw.c **** 
  58:./drive/fmc_rw.c ****         uData = FMC_Read(FMC_CONFIG_BASE);
  59:./drive/fmc_rw.c **** 
  60:./drive/fmc_rw.c ****         uData &=    ~(BIT(0)|BIT(2));
  61:./drive/fmc_rw.c ****         FMC_Erase( FMC_CONFIG_BASE );
  62:./drive/fmc_rw.c **** 
  63:./drive/fmc_rw.c **** 
  64:./drive/fmc_rw.c ****         FMC_Write( FMC_CONFIG_BASE, uData );
  65:./drive/fmc_rw.c ****         //uData = (uint32) __DataFlash;
  66:./drive/fmc_rw.c ****         FMC_Write( FMC_CONFIG_BASE+4, (uint32) __DataFlash );
  67:./drive/fmc_rw.c **** 
  68:./drive/fmc_rw.c **** 
  69:./drive/fmc_rw.c ****         pr_debug("\nSet Data Flash base as 0x%x.\n",  (int)FMC->DFBADR);
  70:./drive/fmc_rw.c **** 
  71:./drive/fmc_rw.c ****         /* Perform chip reset to make new User Config take effect */
  72:./drive/fmc_rw.c ****         SYS->IPRSTC1 |= SYS_IPRSTC1_CHIP_RST_Msk;
  73:./drive/fmc_rw.c **** 
  74:./drive/fmc_rw.c ****         CBI( FMC->ISPCON, FMC_ISPCON_CFGUEN_Pos );
  75:./drive/fmc_rw.c **** 
  76:./drive/fmc_rw.c ****     }
  77:./drive/fmc_rw.c ****     pr_debug("DataFlash Cfg %08x\n", uData );
  78:./drive/fmc_rw.c **** 
  79:./drive/fmc_rw.c ****     fmc_close();        
  80:./drive/fmc_rw.c ****     OS_EXIT_CRITICAL();
  81:./drive/fmc_rw.c **** }
  82:./drive/fmc_rw.c **** 
  83:./drive/fmc_rw.c **** __STATIC_INLINE
  84:./drive/fmc_rw.c **** int fmc_WriteData( uint32 Addr, uint8 *buff, int len )
  85:./drive/fmc_rw.c **** {
  86:./drive/fmc_rw.c ****     int i;
  87:./drive/fmc_rw.c ****     for( i=0; i<len; )
  88:./drive/fmc_rw.c ****     {
  89:./drive/fmc_rw.c ****         uint32 tmp = buff[0] + (buff[1]<<8) + (buff[2]<<16) + (buff[3]<<24);
  90:./drive/fmc_rw.c ****         FMC_Write( Addr + i , tmp );
  91:./drive/fmc_rw.c ****         buff += 4;
  92:./drive/fmc_rw.c ****         i    += 4;
  93:./drive/fmc_rw.c ****     }
  94:./drive/fmc_rw.c ****     return i;
  95:./drive/fmc_rw.c **** }
  96:./drive/fmc_rw.c **** 
  97:./drive/fmc_rw.c **** 
  98:./drive/fmc_rw.c **** void fmc_Init(void)
  99:./drive/fmc_rw.c **** {
 198              		.loc 3 99 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 203              	.LCFI1:
 204              		.cfi_def_cfa_offset 32
 205              		.cfi_offset 0, -32
 206              		.cfi_offset 1, -28
 207              		.cfi_offset 2, -24
 208              		.cfi_offset 4, -20
 209              		.cfi_offset 5, -16
 210              		.cfi_offset 6, -12
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213              	.LBB30:
 214              	.LBB31:
  49:./drive/fmc_rw.c ****     fmc_open();
 215              		.loc 3 49 0
 216 0002 FFF7FEFF 		bl	OS_CPU_SR_Save
 217              	.LVL3:
  52:./drive/fmc_rw.c **** 
 218              		.loc 3 52 0
 219 0006 1F4C     		ldr	r4, .L22
  49:./drive/fmc_rw.c ****     fmc_open();
 220              		.loc 3 49 0
 221 0008 0190     		str	r0, [sp, #4]
 222              	.LVL4:
  50:./drive/fmc_rw.c ****     //uint32 uData = FMC_Read(FMC_CONFIG_BASE + 4);
 223              		.loc 3 50 0
 224 000a FFF7FEFF 		bl	fmc_open
 225              	.LVL5:
  52:./drive/fmc_rw.c **** 
 226              		.loc 3 52 0
 227 000e 6369     		ldr	r3, [r4, #20]
 228              	.LVL6:
  54:./drive/fmc_rw.c ****     {
 229              		.loc 3 54 0
 230 0010 1D4F     		ldr	r7, .L22+4
 231 0012 BB42     		cmp	r3, r7
 232 0014 2AD0     		beq	.L19
  56:./drive/fmc_rw.c **** 
 233              		.loc 3 56 0
 234 0016 1022     		movs	r2, #16
 235 0018 2368     		ldr	r3, [r4]
 236              	.LVL7:
 237 001a 1343     		orrs	r3, r2
 238 001c 2360     		str	r3, [r4]
 239              	.LVL8:
 240              	.LBB32:
 241              	.LBB33:
 263:./bsp/inc/FMC.h ****     FMC->ISPADR = u32addr;         /* Set Target ROM Address. The address must be word alignment. *
 242              		.loc 1 263 0
 243 001e 0023     		movs	r3, #0
 244 0020 E360     		str	r3, [r4, #12]
 264:./bsp/inc/FMC.h ****     FMC->ISPTRG = 0x1;             /* Trigger to start ISP procedure */
 245              		.loc 1 264 0
 246 0022 C023     		movs	r3, #192
 247 0024 9B03     		lsls	r3, r3, #14
 248 0026 6360     		str	r3, [r4, #4]
 265:./bsp/inc/FMC.h ****     __ISB();                       /* To make sure ISP/CPU be Synchronized */
 249              		.loc 1 265 0
 250 0028 0123     		movs	r3, #1
 251 002a 2361     		str	r3, [r4, #16]
 252              	.LBB34:
 253              	.LBB35:
 254              		.loc 2 648 0
 255              		.syntax divided
 256              	@ 648 "./bsp/core_cm0.h" 1
 257 002c BFF36F8F 		isb
 258              	@ 0 "" 2
 259              		.thumb
 260              		.syntax unified
 261              	.L20:
 262              	.LBE35:
 263              	.LBE34:
 267:./bsp/inc/FMC.h **** 
 264              		.loc 1 267 0
 265 0030 2369     		ldr	r3, [r4, #16]
 266 0032 144D     		ldr	r5, .L22
 267 0034 002B     		cmp	r3, #0
 268 0036 FBD1     		bne	.L20
 269              	.LBE33:
 270              	.LBE32:
  61:./drive/fmc_rw.c **** 
 271              		.loc 3 61 0
 272 0038 C020     		movs	r0, #192
 273              	.LBB37:
 274              	.LBB36:
 269:./bsp/inc/FMC.h **** }
 275              		.loc 1 269 0
 276 003a AE68     		ldr	r6, [r5, #8]
 277              	.LVL9:
 278              	.LBE36:
 279              	.LBE37:
  61:./drive/fmc_rw.c **** 
 280              		.loc 3 61 0
 281 003c 8003     		lsls	r0, r0, #14
 282 003e FFF7FEFF 		bl	FMC_Erase
 283              	.LVL10:
  64:./drive/fmc_rw.c ****         //uData = (uint32) __DataFlash;
 284              		.loc 3 64 0
 285 0042 0523     		movs	r3, #5
 286 0044 3100     		movs	r1, r6
 287 0046 C020     		movs	r0, #192
 288 0048 9943     		bics	r1, r3
 289 004a 8003     		lsls	r0, r0, #14
 290 004c FFF7FEFF 		bl	FMC_Write
 291              	.LVL11:
  66:./drive/fmc_rw.c **** 
 292              		.loc 3 66 0
 293 0050 3900     		movs	r1, r7
 294 0052 0E48     		ldr	r0, .L22+8
 295 0054 FFF7FEFF 		bl	FMC_Write
 296              	.LVL12:
  72:./drive/fmc_rw.c **** 
 297              		.loc 3 72 0
 298 0058 A022     		movs	r2, #160
 299 005a 0121     		movs	r1, #1
 300 005c D205     		lsls	r2, r2, #23
 301 005e 9368     		ldr	r3, [r2, #8]
 302 0060 0B43     		orrs	r3, r1
 303 0062 9360     		str	r3, [r2, #8]
  74:./drive/fmc_rw.c **** 
 304              		.loc 3 74 0
 305 0064 1022     		movs	r2, #16
 306 0066 2B68     		ldr	r3, [r5]
 307 0068 9343     		bics	r3, r2
 308 006a 2B60     		str	r3, [r5]
 309              	.LVL13:
 310              	.L19:
 311              	.LBB38:
 312              	.LBB39:
  26:./drive/fmc_rw.c ****     SYS_LockReg();
 313              		.loc 3 26 0
 314 006c 0922     		movs	r2, #9
 315 006e 2368     		ldr	r3, [r4]
 316              	.LBE39:
 317              	.LBE38:
  80:./drive/fmc_rw.c **** }
 318              		.loc 3 80 0
 319 0070 0198     		ldr	r0, [sp, #4]
 320              	.LBB48:
 321              	.LBB46:
  26:./drive/fmc_rw.c ****     SYS_LockReg();
 322              		.loc 3 26 0
 323 0072 9343     		bics	r3, r2
 324              	.LBB40:
 325              	.LBB41:
1823:./bsp/inc/SYS.h **** }
 326              		.loc 4 1823 0
 327 0074 0022     		movs	r2, #0
 328              	.LBE41:
 329              	.LBE40:
  26:./drive/fmc_rw.c ****     SYS_LockReg();
 330              		.loc 3 26 0
 331 0076 2360     		str	r3, [r4]
 332              	.LBB44:
 333              	.LBB42:
1823:./bsp/inc/SYS.h **** }
 334              		.loc 4 1823 0
 335 0078 054B     		ldr	r3, .L22+12
 336              	.LBE42:
 337              	.LBE44:
 338              	.LBE46:
 339              	.LBE48:
 340              	.LBE31:
 341              	.LBE30:
 100:./drive/fmc_rw.c ****     fmc_CfgDataFlash();
 101:./drive/fmc_rw.c **** }
 342              		.loc 3 101 0
 343              		@ sp needed
 344              	.LBB51:
 345              	.LBB50:
 346              	.LBB49:
 347              	.LBB47:
 348              	.LBB45:
 349              	.LBB43:
1823:./bsp/inc/SYS.h **** }
 350              		.loc 4 1823 0
 351 007a 5A60     		str	r2, [r3, #4]
 352              	.LBE43:
 353              	.LBE45:
 354              	.LBE47:
 355              	.LBE49:
  80:./drive/fmc_rw.c **** }
 356              		.loc 3 80 0
 357 007c FFF7FEFF 		bl	OS_CPU_SR_Restore
 358              	.LVL14:
 359              	.LBE50:
 360              	.LBE51:
 361              		.loc 3 101 0
 362 0080 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 363              	.L23:
 364 0082 C046     		.align	2
 365              	.L22:
 366 0084 00C00050 		.word	1342226432
 367 0088 00000000 		.word	__DataFlash
 368 008c 04003000 		.word	3145732
 369 0090 FC000050 		.word	1342177532
 370              		.cfi_endproc
 371              	.LFE66:
 373              		.section	.text.fmc_Write,"ax",%progbits
 374              		.align	1
 375              		.global	fmc_Write
 376              		.code	16
 377              		.thumb_func
 379              	fmc_Write:
 380              	.LFB67:
 102:./drive/fmc_rw.c **** 
 103:./drive/fmc_rw.c **** 
 104:./drive/fmc_rw.c **** int fmc_Write( uint8 *ToFlash, uint8 *From, int size )
 105:./drive/fmc_rw.c **** {
 381              		.loc 3 105 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              	.LVL15:
 386 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 387              	.LCFI2:
 388              		.cfi_def_cfa_offset 20
 389              		.cfi_offset 4, -20
 390              		.cfi_offset 5, -16
 391              		.cfi_offset 6, -12
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 85B0     		sub	sp, sp, #20
 395              	.LCFI3:
 396              		.cfi_def_cfa_offset 40
 397              		.loc 3 105 0
 398 0004 0E00     		movs	r6, r1
 399 0006 1500     		movs	r5, r2
 106:./drive/fmc_rw.c ****     uint32 u32Addr = (uint32)ToFlash;
 400              		.loc 3 106 0
 401 0008 0700     		movs	r7, r0
 402              	.LVL16:
 107:./drive/fmc_rw.c ****     int i=0;
 108:./drive/fmc_rw.c ****     int cnt;        
 109:./drive/fmc_rw.c ****     OS_SREG_VAR;
 110:./drive/fmc_rw.c ****     FVoid *pd = (FVoid *)From;
 111:./drive/fmc_rw.c **** 
 112:./drive/fmc_rw.c ****     pr_debug("fmc erase %08x\n", u32Addr);
 113:./drive/fmc_rw.c ****     OS_ENTER_CRITICAL();
 403              		.loc 3 113 0
 404 000a FFF7FEFF 		bl	OS_CPU_SR_Save
 405              	.LVL17:
 406 000e 0390     		str	r0, [sp, #12]
 407              	.LVL18:
 114:./drive/fmc_rw.c ****     fmc_open();
 408              		.loc 3 114 0
 409 0010 FFF7FEFF 		bl	fmc_open
 410              	.LVL19:
 107:./drive/fmc_rw.c ****     int i=0;
 411              		.loc 3 107 0
 412 0014 0023     		movs	r3, #0
 413 0016 0293     		str	r3, [sp, #8]
 414              	.LVL20:
 415              	.L25:
 115:./drive/fmc_rw.c **** 
 116:./drive/fmc_rw.c ****     while( size )
 416              		.loc 3 116 0
 417 0018 002D     		cmp	r5, #0
 418 001a 25D0     		beq	.L30
 117:./drive/fmc_rw.c ****     {
 118:./drive/fmc_rw.c ****         cnt = MIN( size, FMC_FLASH_PAGE_SIZE );
 419              		.loc 3 118 0
 420 001c 8023     		movs	r3, #128
 421 001e 0195     		str	r5, [sp, #4]
 422 0020 9B00     		lsls	r3, r3, #2
 423 0022 9D42     		cmp	r5, r3
 424 0024 00DD     		ble	.L26
 425 0026 0193     		str	r3, [sp, #4]
 426              	.L26:
 427              	.LVL21:
 119:./drive/fmc_rw.c ****         FMC_Erase( u32Addr);
 428              		.loc 3 119 0
 429 0028 3800     		movs	r0, r7
 430 002a FFF7FEFF 		bl	FMC_Erase
 431              	.LVL22:
 120:./drive/fmc_rw.c **** 
 121:./drive/fmc_rw.c ****         for(i=0; i<cnt; i +=4 )
 432              		.loc 3 121 0
 433 002e 3400     		movs	r4, r6
 434              	.LVL23:
 435              	.L27:
 436 0030 A31B     		subs	r3, r4, r6
 437 0032 0293     		str	r3, [sp, #8]
 438              	.LVL24:
 439              		.loc 3 121 0 is_stmt 0 discriminator 1
 440 0034 019B     		ldr	r3, [sp, #4]
 441              	.LVL25:
 442 0036 A21B     		subs	r2, r4, r6
 443 0038 9342     		cmp	r3, r2
 444 003a 11DD     		ble	.L31
 122:./drive/fmc_rw.c ****         {
 123:./drive/fmc_rw.c ****             FMC_Write( u32Addr + i, pd->dat );
 445              		.loc 3 123 0 is_stmt 1 discriminator 3
 446 003c 6378     		ldrb	r3, [r4, #1]
 447 003e 2078     		ldrb	r0, [r4]
 448 0040 A178     		ldrb	r1, [r4, #2]
 449 0042 1B02     		lsls	r3, r3, #8
 450 0044 0343     		orrs	r3, r0
 451 0046 0904     		lsls	r1, r1, #16
 452 0048 1A00     		movs	r2, r3
 453 004a 0B00     		movs	r3, r1
 454 004c E178     		ldrb	r1, [r4, #3]
 455 004e 1343     		orrs	r3, r2
 456 0050 0906     		lsls	r1, r1, #24
 457 0052 B81B     		subs	r0, r7, r6
 458 0054 2018     		adds	r0, r4, r0
 459 0056 1943     		orrs	r1, r3
 460 0058 FFF7FEFF 		bl	FMC_Write
 461              	.LVL26:
 124:./drive/fmc_rw.c **** //            pr_debug("FMC Write %08x: %08x\n", u32Addr + i, pd->dat  );
 125:./drive/fmc_rw.c ****             pd++;
 462              		.loc 3 125 0 discriminator 3
 463 005c 0434     		adds	r4, r4, #4
 464              	.LVL27:
 465 005e E7E7     		b	.L27
 466              	.LVL28:
 467              	.L31:
 126:./drive/fmc_rw.c ****         }
 127:./drive/fmc_rw.c ****         
 128:./drive/fmc_rw.c ****         size    -= cnt;
 468              		.loc 3 128 0
 469 0060 ED1A     		subs	r5, r5, r3
 470              	.LVL29:
 129:./drive/fmc_rw.c ****         u32Addr += cnt;
 471              		.loc 3 129 0
 472 0062 FF18     		adds	r7, r7, r3
 473              	.LVL30:
 474 0064 2600     		movs	r6, r4
 475 0066 D7E7     		b	.L25
 476              	.LVL31:
 477              	.L30:
 478              	.LBB56:
 479              	.LBB57:
  26:./drive/fmc_rw.c ****     SYS_LockReg();
 480              		.loc 3 26 0
 481 0068 0921     		movs	r1, #9
 482 006a 064A     		ldr	r2, .L32
 483              	.LBE57:
 484              	.LBE56:
 130:./drive/fmc_rw.c ****     }
 131:./drive/fmc_rw.c ****     //fmc_WriteData( u32Addr, From, i );
 132:./drive/fmc_rw.c ****     fmc_close(); 
 133:./drive/fmc_rw.c ****     OS_EXIT_CRITICAL();
 485              		.loc 3 133 0
 486 006c 0398     		ldr	r0, [sp, #12]
 487              	.LBB61:
 488              	.LBB60:
  26:./drive/fmc_rw.c ****     SYS_LockReg();
 489              		.loc 3 26 0
 490 006e 1368     		ldr	r3, [r2]
 491 0070 8B43     		bics	r3, r1
 492 0072 1360     		str	r3, [r2]
 493              	.LBB58:
 494              	.LBB59:
1823:./bsp/inc/SYS.h **** }
 495              		.loc 4 1823 0
 496 0074 044B     		ldr	r3, .L32+4
 497 0076 5D60     		str	r5, [r3, #4]
 498              	.LBE59:
 499              	.LBE58:
 500              	.LBE60:
 501              	.LBE61:
 502              		.loc 3 133 0
 503 0078 FFF7FEFF 		bl	OS_CPU_SR_Restore
 504              	.LVL32:
 134:./drive/fmc_rw.c ****     return i;
 135:./drive/fmc_rw.c **** }
 505              		.loc 3 135 0
 506 007c 0298     		ldr	r0, [sp, #8]
 507 007e 05B0     		add	sp, sp, #20
 508              		@ sp needed
 509              	.LVL33:
 510              	.LVL34:
 511              	.LVL35:
 512 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 513              	.L33:
 514 0082 C046     		.align	2
 515              	.L32:
 516 0084 00C00050 		.word	1342226432
 517 0088 FC000050 		.word	1342177532
 518              		.cfi_endproc
 519              	.LFE67:
 521              		.section	.text.fmc_Read,"ax",%progbits
 522              		.align	1
 523              		.global	fmc_Read
 524              		.code	16
 525              		.thumb_func
 527              	fmc_Read:
 528              	.LFB68:
 136:./drive/fmc_rw.c **** 
 137:./drive/fmc_rw.c **** #if 0
 138:./drive/fmc_rw.c **** __STATIC_INLINE int uint32Touint8( uint32 data, uint8 *buff, int size )
 139:./drive/fmc_rw.c **** {
 140:./drive/fmc_rw.c ****     size = MIN( 4, size );
 141:./drive/fmc_rw.c ****     switch( size )
 142:./drive/fmc_rw.c ****     {
 143:./drive/fmc_rw.c ****         case 4:
 144:./drive/fmc_rw.c ****             buff[3] = data >> 24;
 145:./drive/fmc_rw.c ****         case 3:
 146:./drive/fmc_rw.c ****             buff[2] = data >> 16;
 147:./drive/fmc_rw.c ****         case 2:
 148:./drive/fmc_rw.c ****             buff[1] = data >> 8;
 149:./drive/fmc_rw.c ****         case 1:
 150:./drive/fmc_rw.c ****             buff[0] = data;
 151:./drive/fmc_rw.c ****             break;
 152:./drive/fmc_rw.c ****     }
 153:./drive/fmc_rw.c ****     return size;
 154:./drive/fmc_rw.c **** }
 155:./drive/fmc_rw.c **** 
 156:./drive/fmc_rw.c **** 
 157:./drive/fmc_rw.c **** int fmc_Read( uint8 *FromFlash, uint8 *To, int size )
 158:./drive/fmc_rw.c **** {
 159:./drive/fmc_rw.c ****     uint32 Addr = (uint32) FromFlash;
 160:./drive/fmc_rw.c ****     uint32 tmp;
 161:./drive/fmc_rw.c ****     int ret = 0;
 162:./drive/fmc_rw.c ****     int cnt;
 163:./drive/fmc_rw.c ****     FVoid *pd = (FVoid *)To;
 164:./drive/fmc_rw.c ****     /* Unlock protected registers */
 165:./drive/fmc_rw.c ****     SYS_UnlockReg();
 166:./drive/fmc_rw.c ****     fmc_open();
 167:./drive/fmc_rw.c ****     while( size > 0 )
 168:./drive/fmc_rw.c ****     {
 169:./drive/fmc_rw.c ****         pd->dat = FMC_Read( Addr );
 170:./drive/fmc_rw.c ****         pr_debug("FMC Write %08x: %08x\n", Addr, pd->dat  );
 171:./drive/fmc_rw.c ****         pd++;
 172:./drive/fmc_rw.c ****         Addr += 4;
 173:./drive/fmc_rw.c ****         size -= 4;
 174:./drive/fmc_rw.c ****         ret  += 4;
 175:./drive/fmc_rw.c ****         /*
 176:./drive/fmc_rw.c ****         tmp = FMC_Read( Addr );
 177:./drive/fmc_rw.c ****         cnt = uint32Touint8( tmp, To, size );
 178:./drive/fmc_rw.c ****         size -= cnt;
 179:./drive/fmc_rw.c ****         ret  += cnt;
 180:./drive/fmc_rw.c ****         To   += cnt;
 181:./drive/fmc_rw.c ****         //*/
 182:./drive/fmc_rw.c ****     }
 183:./drive/fmc_rw.c ****     fmc_close();
 184:./drive/fmc_rw.c ****     
 185:./drive/fmc_rw.c ****     /* Lock protected registers */
 186:./drive/fmc_rw.c ****     SYS_LockReg();
 187:./drive/fmc_rw.c **** 
 188:./drive/fmc_rw.c ****     return ret;
 189:./drive/fmc_rw.c **** }
 190:./drive/fmc_rw.c **** #else
 191:./drive/fmc_rw.c **** int fmc_Read( uint8 *FromFlash, uint8 *To, int size )
 192:./drive/fmc_rw.c **** {
 529              		.loc 3 192 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              	.LVL36:
 534              	.LBB62:
 193:./drive/fmc_rw.c ****     for( int i=0; i<size; i++)
 535              		.loc 3 193 0
 536 0000 0023     		movs	r3, #0
 537              	.LBE62:
 192:./drive/fmc_rw.c ****     for( int i=0; i<size; i++)
 538              		.loc 3 192 0
 539 0002 10B5     		push	{r4, lr}
 540              	.LCFI4:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 4, -8
 543              		.cfi_offset 14, -4
 544              	.LVL37:
 545              	.L35:
 546              	.LBB63:
 547              		.loc 3 193 0 discriminator 1
 548 0004 9342     		cmp	r3, r2
 549 0006 03DA     		bge	.L37
 194:./drive/fmc_rw.c ****     {
 195:./drive/fmc_rw.c ****         To[i] = FromFlash[i];
 550              		.loc 3 195 0 discriminator 3
 551 0008 C45C     		ldrb	r4, [r0, r3]
 552 000a CC54     		strb	r4, [r1, r3]
 193:./drive/fmc_rw.c ****     {
 553              		.loc 3 193 0 discriminator 3
 554 000c 0133     		adds	r3, r3, #1
 555              	.LVL38:
 556 000e F9E7     		b	.L35
 557              	.L37:
 558              	.LBE63:
 196:./drive/fmc_rw.c ****     }
 197:./drive/fmc_rw.c ****     return size;
 198:./drive/fmc_rw.c **** }
 559              		.loc 3 198 0
 560 0010 1000     		movs	r0, r2
 561              	.LVL39:
 562              		@ sp needed
 563 0012 10BD     		pop	{r4, pc}
 564              		.cfi_endproc
 565              	.LFE68:
 567              		.text
 568              	.Letext0:
 569              		.file 5 "d:\\wingcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 570              		.file 6 "d:\\wingcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 571              		.file 7 "./bsp/NUC131.h"
 572              		.file 8 "./bsp/mytype.h"
 573              		.file 9 "../mylib_t/os_cpu.h"
 574              		.file 10 "./bsp/system_NUC131.h"
 575              		.file 11 "./drive/fmc_rw.h"
DEFINED SYMBOLS
                            *ABS*:00000000 fmc_rw.c
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:20     .text.FMC_Write:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:24     .text.FMC_Write:00000000 FMC_Write
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:68     .text.FMC_Write:0000001c $d
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:73     .text.FMC_Erase:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:77     .text.FMC_Erase:00000000 FMC_Erase
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:125    .text.FMC_Erase:00000020 $d
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:130    .text.fmc_open:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:134    .text.fmc_open:00000000 fmc_open
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:185    .text.fmc_open:00000024 $d
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:191    .text.fmc_Init:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:196    .text.fmc_Init:00000000 fmc_Init
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:366    .text.fmc_Init:00000084 $d
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:374    .text.fmc_Write:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:379    .text.fmc_Write:00000000 fmc_Write
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:516    .text.fmc_Write:00000084 $d
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:522    .text.fmc_Read:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccu3DxMj.s:527    .text.fmc_Read:00000000 fmc_Read
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
OS_CPU_SR_Save
OS_CPU_SR_Restore
__DataFlash
