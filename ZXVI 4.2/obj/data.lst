   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"data.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.data_cmd,"ax",%progbits
  20              		.align	1
  21              		.global	data_cmd
  22              		.code	16
  23              		.thumb_func
  25              	data_cmd:
  26              	.LFB67:
  27              		.file 1 "./data/data.c"
   1:./data/data.c **** 
   2:./data/data.c **** 
   3:./data/data.c **** /*
   4:./data/data.c ****    文件名：data.c
   5:./data/data.c ****    功能：HBTK-1000XQ增强型，数据处理部分
   6:./data/data.c ****    数据采集后判断处理，及通信设置部分设置数据转换
   7:./data/data.c ****    */
   8:./data/data.c **** #define DATA_GLOBAL
   9:./data/data.c **** 
  10:./data/data.c **** #define DATA_DEFDIS
  11:./data/data.c **** 
  12:./data/data.c **** #include <string.h>
  13:./data/data.c **** #include "mytype.h"
  14:./data/data.c **** #include "global.h"
  15:./data/data.c **** #include "data.h"
  16:./data/data.c **** #include "MicroOS.h"
  17:./data/data.c **** #include "user.h"
  18:./data/data.c **** #include "protocol.h"
  19:./data/data.c **** #include "hardware.h"
  20:./data/data.c **** #include "app_cfg.h"
  21:./data/data.c **** #include "nuc_adc.h"
  22:./data/data.c **** #include "pcommand.h"
  23:./data/data.c **** #include "shellSort.h"
  24:./data/data.c **** 
  25:./data/data.c **** TData       data[MAX_DATA_SIZE] __NOINIT__;
  26:./data/data.c **** extern uint8 Sound;
  27:./data/data.c **** TDataState  MKState __NOINIT__;
  28:./data/data.c **** 
  29:./data/data.c **** uint8 BD_disable;
  30:./data/data.c **** int    wValue;
  31:./data/data.c **** 
  32:./data/data.c **** void Data_Init( uint8 en )
  33:./data/data.c **** {
  34:./data/data.c ****     int i;
  35:./data/data.c ****     int dis = 0;
  36:./data/data.c ****     for(i=0; i<ARRAY_SIZE(data); i++)
  37:./data/data.c ****     {
  38:./data/data.c ****         data[i].type  = TT_V;
  39:./data/data.c ****         data[i].value = 0;
  40:./data/data.c ****         data[i].state = 0;
  41:./data/data.c ****         data[i].trans = 0;
  42:./data/data.c ****         data[i].value_tmp = 0;
  43:./data/data.c ****         data[i].bj_delay = pUsrCfg->delay;
  44:./data/data.c ****         data[i].yj_delay = pUsrCfg->delay;
  45:./data/data.c ****     }
  46:./data/data.c **** 
  47:./data/data.c ****     BD_disable = 0;
  48:./data/data.c ****     dis = PBI( pUsrCfg->enable, USER_TYPE_BD);
  49:./data/data.c **** 
  50:./data/data.c ****     // TODO 更新了通道类型
  51:./data/data.c **** #if OEM == 2
  52:./data/data.c ****     data[6].type = eTTwv;
  53:./data/data.c **** #else
  54:./data/data.c ****     data[6].type = eTTv;
  55:./data/data.c **** #endif
  56:./data/data.c ****     data[7].type = eTTw;
  57:./data/data.c ****     pUsrCfg->count = 8;
  58:./data/data.c ****     switch( pUsrCfg->type )
  59:./data/data.c ****     {
  60:./data/data.c ****     	case CGQ_TYPE_VA_D6:
  61:./data/data.c ****     	    data[6].type = 0;
  62:./data/data.c ****     		break;
  63:./data/data.c ****         case CGQ_TYPE_VA_S2:
  64:./data/data.c ****             BD_disable = dis;
  65:./data/data.c ****             break;
  66:./data/data.c ****         case eCGQvaw2:
  67:./data/data.c ****             BD_disable    = dis;
  68:./data/data.c ****             data[0].type  = TT_WV;
  69:./data/data.c ****             data[1].type  = TT_WV;
  70:./data/data.c ****             data[2].type  = TT_WV;
  71:./data/data.c ****             data[3].type  = TT_WV;
  72:./data/data.c ****             data[4].type  = TT_WV;
  73:./data/data.c ****             data[5].type  = TT_WV;
  74:./data/data.c ****             data[6].type  = eTTwv;
  75:./data/data.c ****             break;
  76:./data/data.c ****         case eCGQvad:
  77:./data/data.c ****             data[0].type  = 0;
  78:./data/data.c ****             data[1].type  = 0;
  79:./data/data.c ****             data[2].type  = TT_V;
  80:./data/data.c ****             data[3].type  = 0;
  81:./data/data.c ****             data[4].type  = 0;
  82:./data/data.c ****             data[5].type  = 0;
  83:./data/data.c ****             break;
  84:./data/data.c ****         case eCGQvd:
  85:./data/data.c ****             data[0].type  = 0;
  86:./data/data.c ****             data[1].type  = 0;
  87:./data/data.c ****             data[2].type  = TT_VD;
  88:./data/data.c ****             data[3].type  = 0;
  89:./data/data.c ****             data[4].type  = 0;
  90:./data/data.c ****             data[5].type  = 0;
  91:./data/data.c ****             data[6].type  = TT_VD;
  92:./data/data.c ****             break;
  93:./data/data.c ****         case eCGQvdi:
  94:./data/data.c ****             data[0].type  = 0;
  95:./data/data.c ****             data[1].type  = 0;
  96:./data/data.c ****             data[2].type  = TT_VD;
  97:./data/data.c ****             data[3].type  = 0;
  98:./data/data.c ****             data[4].type  = 0;
  99:./data/data.c ****             data[5].type  = TT_ID;
 100:./data/data.c ****             data[6].type  = TT_VD;
 101:./data/data.c ****             break;
 102:./data/data.c ****         case CGQ_TYPE_VA_W:
 103:./data/data.c ****             data[0].type  = TT_WV;
 104:./data/data.c ****             data[1].type  = TT_WV;
 105:./data/data.c ****             data[2].type  = TT_WV;
 106:./data/data.c ****             data[3].type  = 0;
 107:./data/data.c ****             data[4].type  = 0;
 108:./data/data.c ****             data[5].type  = 0;
 109:./data/data.c ****             data[6].type  = eTTwv;
 110:./data/data.c ****             break;
 111:./data/data.c ****         case CGQ_TYPE_VI_W:
 112:./data/data.c ****             data[0].type  = TT_WV;
 113:./data/data.c ****             data[1].type  = TT_WV;
 114:./data/data.c ****             data[2].type  = TT_WV;
 115:./data/data.c ****             data[3].type  = TT_I;
 116:./data/data.c ****             data[4].type  = TT_I;
 117:./data/data.c ****             data[5].type  = TT_I;
 118:./data/data.c ****             data[6].type  = eTTwv;
 119:./data/data.c ****             break;
 120:./data/data.c ****         case CGQ_TYPE_VA_D2:
 121:./data/data.c ****             data[0].type  = 0;
 122:./data/data.c ****             data[1].type  = 0;
 123:./data/data.c ****             data[2].type  = TT_V;
 124:./data/data.c ****             data[3].type  = 0;
 125:./data/data.c ****             data[4].type  = 0;
 126:./data/data.c ****             data[5].type  = TT_V;
 127:./data/data.c ****             break;
 128:./data/data.c ****         case CGQ_TYPE_VI_D:
 129:./data/data.c ****             BD_disable = dis;
 130:./data/data.c ****             data[0].type  = 0;
 131:./data/data.c ****             data[1].type  = 0;
 132:./data/data.c ****             data[2].type  = TT_V;
 133:./data/data.c ****             data[3].type  = 0;
 134:./data/data.c ****             data[4].type  = 0;
 135:./data/data.c ****             data[5].type  = 0;
 136:./data/data.c ****             break;
 137:./data/data.c ****         case CGQ_TYPE_VI_S:
 138:./data/data.c ****             data[3].type  = TT_I;
 139:./data/data.c ****             data[4].type  = TT_I;
 140:./data/data.c ****             data[5].type  = TT_I;
 141:./data/data.c ****             break;
 142:./data/data.c ****         case CGQ_TYPE_VA_S1:
 143:./data/data.c ****             data[3].type  = 0;
 144:./data/data.c ****             data[4].type  = 0;
 145:./data/data.c ****             data[5].type  = 0;
 146:./data/data.c ****             break;
 147:./data/data.c **** //        case eCGQvis2:
 148:./data/data.c **** //            pUsrCfg->count = 8;
 149:./data/data.c **** //        	break;
 150:./data/data.c ****         default:
 151:./data/data.c ****             break;
 152:./data/data.c ****     }
 153:./data/data.c ****     MKState.state = 0;
 154:./data/data.c ****     MKState.state2 = 0;
 155:./data/data.c ****     MKState.trans = 0;
 156:./data/data.c **** }
 157:./data/data.c **** 
 158:./data/data.c **** 
 159:./data/data.c **** __STATIC_INLINE
 160:./data/data.c **** void GetADC_Enable(void)
 161:./data/data.c **** {   //同时采集8路AD，等待结束
 162:./data/data.c ****     int value;
 163:./data/data.c **** 	OSTimeDly( HZ/20 );
 164:./data/data.c ****     ADC_Enable( 0 );
 165:./data/data.c ****     while( (value = ADC_Flag() ) < 0 )
 166:./data/data.c ****     {
 167:./data/data.c ****         OSTimeDly(1 );
 168:./data/data.c ****     }
 169:./data/data.c **** }
 170:./data/data.c **** 
 171:./data/data.c **** __STATIC_INLINE
 172:./data/data.c **** int16 GetADCValue( int channel, int wd )
 173:./data/data.c **** {   //得到单路AD采集的值
 174:./data/data.c ****     return ADC_GetExt( channel, wd );
 175:./data/data.c **** }
 176:./data/data.c **** 
 177:./data/data.c **** /*
 178:./data/data.c ****  * 每个数据采集10次，
 179:./data/data.c ****  * 通过shell排序法排序
 180:./data/data.c ****  * 去掉2个最大、最小值
 181:./data/data.c ****  * 其余6个数取平均值
 182:./data/data.c ****  */
 183:./data/data.c **** void DataCJgetValue(void)
 184:./data/data.c **** {
 185:./data/data.c **** 	int i,j;
 186:./data/data.c **** 	int value;
 187:./data/data.c **** 	for( j=0; j<GETBUFF_SIZE; j++ )
 188:./data/data.c **** 	{
 189:./data/data.c ****         GetADC_Enable();
 190:./data/data.c ****         for(i=0; i<ARRAY_SIZE(data); i++)
 191:./data/data.c ****         {
 192:./data/data.c ****             value = 0;
 193:./data/data.c ****             switch( data[i].type )
 194:./data/data.c ****             {
 195:./data/data.c ****                 case eTTs:
 196:./data/data.c ****                 case eTTi:
 197:./data/data.c ****                 case eTTv:
 198:./data/data.c ****                 case eTTwv:
 199:./data/data.c ****                     value = GetADCValue(i, 1 );
 200:./data/data.c ****                     break;
 201:./data/data.c ****                 case eTTw:
 202:./data/data.c ****                 case eTTvd:
 203:./data/data.c ****                 case eTTid:
 204:./data/data.c ****                     value = GetADCValue(i, 0 );
 205:./data/data.c ****                     break;
 206:./data/data.c ****                 default:
 207:./data/data.c ****                     value = 0;
 208:./data/data.c ****                     break;
 209:./data/data.c ****             }
 210:./data/data.c ****             data[i].vbuff[j] = value;
 211:./data/data.c ****         }
 212:./data/data.c **** 	}
 213:./data/data.c ****     for(i=0; i<ARRAY_SIZE(data); i++)
 214:./data/data.c ****     {//通过shell排序，去掉2个最大值，去掉2个最小值，取平均值。
 215:./data/data.c ****     	shellSort16( data[i].vbuff, GETBUFF_SIZE);
 216:./data/data.c ****     	value = 0;
 217:./data/data.c ****     	for(j=2; j<GETBUFF_SIZE-2; j++)
 218:./data/data.c ****     	{
 219:./data/data.c ****     		value += data[i].vbuff[j];
 220:./data/data.c ****     	}
 221:./data/data.c **** 		value /= (GETBUFF_SIZE - 4);
 222:./data/data.c **** 		//第7路温度采用12位AD值，其他采用10位AD
 223:./data/data.c **** 		data[i].tmp = value;
 224:./data/data.c ****     }
 225:./data/data.c **** }
 226:./data/data.c **** 
 227:./data/data.c **** void DataCJ_Task( void );
 228:./data/data.c **** void DataCJ_Task( void )
 229:./data/data.c **** {
 230:./data/data.c ****     int i;
 231:./data/data.c ****     int value;
 232:./data/data.c ****     wValue=20;
 233:./data/data.c ****     pr_debug("data cj task\n");
 234:./data/data.c ****     while( 1 )
 235:./data/data.c ****     {
 236:./data/data.c ****     	DataCJgetValue();
 237:./data/data.c ****     	createWJZ(wValue);
 238:./data/data.c ****         for(i=0; i<ARRAY_SIZE(data); i++)
 239:./data/data.c ****         {
 240:./data/data.c ****             value = data[i].tmp;
 241:./data/data.c ****             switch( data[i].type )
 242:./data/data.c ****             {
 243:./data/data.c ****                 case TT_VD:
 244:./data/data.c ****                     value = GetValueVD( value, pUsrCfg->JZ[i] );
 245:./data/data.c ****                     break;
 246:./data/data.c ****                 case TT_WV:
 247:./data/data.c ****                     value = GetValueWV( value, pUsrCfg->JZ[i] );
 248:./data/data.c ****                     break;
 249:./data/data.c ****                 case TT_V:
 250:./data/data.c ****                     value = GetValueV( value, pUsrCfg->JZ[i] );
 251:./data/data.c ****                     break;
 252:./data/data.c ****                 case eTTw:
 253:./data/data.c ****                 	value = WValue(value);
 254:./data/data.c ****                 	wValue = value;
 255:./data/data.c ****                 	if( value < 0 )
 256:./data/data.c ****                 		value = 0;
 257:./data/data.c ****                 	break;
 258:./data/data.c ****                 case TT_ID:
 259:./data/data.c ****                 case TT_I:
 260:./data/data.c ****                     value = value * pUsrCfg->Aed / pUsrCfg->JZ[i];
 261:./data/data.c ****                     value = value < 5 ? 0: value;
 262:./data/data.c ****                     break;
 263:./data/data.c ****                 default:
 264:./data/data.c ****                     value = 0;
 265:./data/data.c ****                     break;
 266:./data/data.c ****             }
 267:./data/data.c ****             data[i].value = value;
 268:./data/data.c **** 	}
 269:./data/data.c ****         OSTimeDly(1);
 270:./data/data.c ****     }
 271:./data/data.c **** }
 272:./data/data.c **** 
 273:./data/data.c **** int Data_PD( void )
 274:./data/data.c **** {
 275:./data/data.c ****     int i;
 276:./data/data.c ****     int ret = 0;
 277:./data/data.c ****     int gy,qy,qx;
 278:./data/data.c ****     uint8 disable=0;
 279:./data/data.c ****     gy = pUsrCfg->Vbj;
 280:./data/data.c ****     qy = pUsrCfg->Vqy;
 281:./data/data.c ****     qx = qy / 2;
 282:./data/data.c **** 
 283:./data/data.c ****     if( BD_disable )
 284:./data/data.c ****     {
 285:./data/data.c ****         if( MKState.Zs == 0x3F )
 286:./data/data.c ****             disable = 0;
 287:./data/data.c ****         else
 288:./data/data.c ****             disable = 1;
 289:./data/data.c ****     }
 290:./data/data.c ****     for(i=0; i<pUsrCfg->count; i++)
 291:./data/data.c ****     {
 292:./data/data.c ****         if( i>2 )
 293:./data/data.c ****         {
 294:./data/data.c ****             if( ( data[i].type == eTTv || data[i].type == eTTwv ) && disable )
 295:./data/data.c ****             {
 296:./data/data.c ****                 data[i].bj_delay = pUsrCfg->delay;
 297:./data/data.c ****                 data[i].yj_delay = pUsrCfg->delay;
 298:./data/data.c ****                 continue;
 299:./data/data.c ****             }
 300:./data/data.c ****         }
 301:./data/data.c ****         switch( data[i].type )
 302:./data/data.c ****         {
 303:./data/data.c ****             case TT_WV:
 304:./data/data.c **** 			if( gy < 300 )
 305:./data/data.c **** 			{
 306:./data/data.c **** 				gy = gy * 380 / 220;
 307:./data/data.c **** 				qy = qy * 380 / 220;
 308:./data/data.c **** 				qx = qy / 2;
 309:./data/data.c **** 			}
 310:./data/data.c ****             case TT_V:
 311:./data/data.c ****             case TT_VD:
 312:./data/data.c ****                 if( data[i].value <= qx && data[i].value_tmp <= qx )
 313:./data/data.c ****                 {
 314:./data/data.c ****                     data[i].state = 3;
 315:./data/data.c ****                     data[i].bj_delay = pUsrCfg->delay;
 316:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delay;
 317:./data/data.c ****                 }else if( data[i].value > gy && data[i].value_tmp > gy )
 318:./data/data.c ****                 {
 319:./data/data.c ****                     if( data[i].bj_delay == 0 )
 320:./data/data.c ****                     {
 321:./data/data.c ****                         data[i].state = 1;
 322:./data/data.c ****                     }else
 323:./data/data.c ****                         data[i].bj_delay--;
 324:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delay;
 325:./data/data.c ****                 }else if( data[i].value < qy && data[i].value_tmp < qy )
 326:./data/data.c ****                 {
 327:./data/data.c ****                     if( data[i].yj_delay == 0 )
 328:./data/data.c ****                     {
 329:./data/data.c ****                         data[i].state = 2;
 330:./data/data.c ****                     }else
 331:./data/data.c ****                     {
 332:./data/data.c ****                         data[i].yj_delay--;
 333:./data/data.c ****                     }
 334:./data/data.c ****                     data[i].bj_delay = pUsrCfg->delay;
 335:./data/data.c ****                 }else
 336:./data/data.c ****                 {
 337:./data/data.c ****                     data[i].bj_delay = pUsrCfg->delay;
 338:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delay;
 339:./data/data.c ****                     data[i].state = 0;
 340:./data/data.c ****                 }
 341:./data/data.c ****                 break;
 342:./data/data.c ****             case TT_ID:
 343:./data/data.c ****             case TT_I:
 344:./data/data.c ****                 if( data[i].value > pUsrCfg->Abj && data[i].value_tmp > pUsrCfg->Abj )
 345:./data/data.c ****                 {
 346:./data/data.c ****                     if( data[i].bj_delay == 0 )
 347:./data/data.c ****                     {
 348:./data/data.c ****                         data[i].state = 1;
 349:./data/data.c ****                     }else
 350:./data/data.c ****                         data[i].bj_delay--;
 351:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delayI;
 352:./data/data.c ****                 }else if( data[i].value < pUsrCfg->Abj/2 && data[i].value_tmp < pUsrCfg->Abj/2 )
 353:./data/data.c ****                 {
 354:./data/data.c ****                     data[i].bj_delay = pUsrCfg->delayI;
 355:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delayI;
 356:./data/data.c ****                     data[i].state = 0;
 357:./data/data.c ****                 }
 358:./data/data.c ****                 break;
 359:./data/data.c ****         }
 360:./data/data.c ****         if( data[i].state )
 361:./data/data.c ****         {
 362:./data/data.c ****             ret++;
 363:./data/data.c ****         }
 364:./data/data.c ****         data[i].value_tmp = data[i].value;
 365:./data/data.c ****     }
 366:./data/data.c **** 
 367:./data/data.c ****     MKState.Za  = data[0].state;
 368:./data/data.c ****     MKState.Zb  = data[1].state;
 369:./data/data.c ****     MKState.Zc  = data[2].state;
 370:./data/data.c ****     MKState.Ba  = data[3].state;
 371:./data/data.c ****     MKState.Bb  = data[4].state;
 372:./data/data.c ****     MKState.Bc  = data[5].state;
 373:./data/data.c ****     MKState.t21 = data[6].state;
 374:./data/data.c ****     MKState.t22 = data[7].state;
 375:./data/data.c ****     return ret;
 376:./data/data.c **** }
 377:./data/data.c **** 
 378:./data/data.c **** 
 379:./data/data.c **** 
 380:./data/data.c **** #define TRANS_ZDGD            0            /*中断供电*/
 381:./data/data.c **** #define TRANS_GY              1            /*过压*/
 382:./data/data.c **** #define TRANS_QY              2            /*欠压*/
 383:./data/data.c **** #define TRANS_DD              3            /*断电 缺相*/
 384:./data/data.c **** 
 385:./data/data.c **** void Data_Trans( void )
 386:./data/data.c **** {
 387:./data/data.c ****     int i;
 388:./data/data.c **** 
 389:./data/data.c **** 	switch (pUsrCfg->type) {
 390:./data/data.c **** 	case eCGQvaw2:
 391:./data/data.c **** 	case eCGQvis2:
 392:./data/data.c **** 	case CGQ_TYPE_VA_S2:
 393:./data/data.c **** 		if (MKState.Ba == 3 && MKState.Bb == 3 && MKState.Bc == 3) {
 394:./data/data.c **** 			if ((MKState.trans & 2) == 0) {
 395:./data/data.c **** 				if (GZ_Trans(3, TCMDDATA_ZDGD, DATA_GZ_ZDGD))
 396:./data/data.c **** 					SBI(MKState.trans, 1);
 397:./data/data.c **** 			}
 398:./data/data.c **** 		} else {
 399:./data/data.c **** 			if (MKState.trans & 2) {
 400:./data/data.c **** 				if (GZ_Trans(3, TCMDDATA_NOZDGD, DATA_GZ_ZDGD))
 401:./data/data.c **** 					CBI(MKState.trans, 1);
 402:./data/data.c **** 			}
 403:./data/data.c **** 		}
 404:./data/data.c **** 	case CGQ_TYPE_VA_W:
 405:./data/data.c **** 	case CGQ_TYPE_VI_W:
 406:./data/data.c **** 	case CGQ_TYPE_VI_S:
 407:./data/data.c **** 	case CGQ_TYPE_VA_S1:
 408:./data/data.c **** 		if (MKState.Za == 3 && MKState.Zb == 3 && MKState.Zc == 3) {
 409:./data/data.c **** 			if ((MKState.trans & 1) == 0) {
 410:./data/data.c **** 				if (GZ_Trans(0, TCMDDATA_ZDGD, DATA_GZ_ZDGD))
 411:./data/data.c **** 					SBI(MKState.trans, 0);
 412:./data/data.c **** 			}
 413:./data/data.c **** 		} else {
 414:./data/data.c **** 			if (MKState.trans & 1) {
 415:./data/data.c **** 				if (GZ_Trans(0, TCMDDATA_NOZDGD, DATA_GZ_ZDGD))
 416:./data/data.c **** 					CBI(MKState.trans, 0);
 417:./data/data.c **** 			}
 418:./data/data.c **** 		}
 419:./data/data.c **** 		break;
 420:./data/data.c **** 	}
 421:./data/data.c **** 
 422:./data/data.c **** 	for (i = 0; i < ARRAY_SIZE(data); i++) {
 423:./data/data.c **** 		int BJtype = DATA_GZ_GY;
 424:./data/data.c **** 		int QXtype = DATA_GZ_QX;
 425:./data/data.c **** 		uint8 cmd;
 426:./data/data.c **** 
 427:./data/data.c **** 		if (data[i].type == TT_I || data[i].type == TT_ID)
 428:./data/data.c **** 			BJtype = DATA_GZ_GL;
 429:./data/data.c **** 
 430:./data/data.c **** 		switch (pUsrCfg->type) {
 431:./data/data.c **** 		case eCGQvd:
 432:./data/data.c **** 		case eCGQvdi:
 433:./data/data.c **** 		case eCGQvad6:
 434:./data/data.c **** 		case eCGQvad2:
 435:./data/data.c **** 		case eCGQvid:
 436:./data/data.c **** 		case eCGQvad:
 437:./data/data.c **** 			QXtype = DATA_GZ_ZDGD;
 438:./data/data.c **** 			break;
 439:./data/data.c **** 		}
 440:./data/data.c **** 
 441:./data/data.c **** 		switch (data[i].state) {
 442:./data/data.c **** 		case 0:
 443:./data/data.c **** 			if (PBI(data[i].trans, TRANS_GY)) {
 444:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_NOGZ, BJtype))
 445:./data/data.c **** 					CBI(data[i].trans, TRANS_GY);
 446:./data/data.c **** 			}
 447:./data/data.c **** 			if (PBI(data[i].trans, TRANS_QY)) {
 448:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_NOGZ, DATA_GZ_QY))
 449:./data/data.c **** 					CBI(data[i].trans, TRANS_QY);
 450:./data/data.c **** 			}
 451:./data/data.c **** 			if (PBI(data[i].trans, TRANS_DD)) {  //判断是缺相，还是中断供电恢复
 452:./data/data.c **** 				if (i >= 6)
 453:./data/data.c **** 					cmd = TCMDDATA_NOZDGD;
 454:./data/data.c **** 				else
 455:./data/data.c **** 					cmd = QXtype == DATA_GZ_ZDGD ?
 456:./data/data.c **** 							TCMDDATA_NOZDGD : TCMDDATA_NOGZ;
 457:./data/data.c **** 
 458:./data/data.c **** 				if (GZ_Trans(i, cmd, QXtype)) {
 459:./data/data.c **** 					CBI(data[i].trans, TRANS_DD);
 460:./data/data.c **** 				}
 461:./data/data.c **** 			}
 462:./data/data.c **** 			break;
 463:./data/data.c **** 		case 1:
 464:./data/data.c **** 			if (!PBI(data[i].trans, TRANS_GY)) {
 465:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_GZ, BJtype)) {
 466:./data/data.c **** 					SBI(data[i].trans, TRANS_GY);
 467:./data/data.c **** 				}
 468:./data/data.c **** 			}
 469:./data/data.c **** 			break;
 470:./data/data.c **** 		case 2:
 471:./data/data.c **** 			if (!PBI(data[i].trans, TRANS_QY)) {
 472:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_GZ, DATA_GZ_QY)) {
 473:./data/data.c **** 					SBI(data[i].trans, TRANS_QY);
 474:./data/data.c **** 				}
 475:./data/data.c **** 			}
 476:./data/data.c **** 			break;
 477:./data/data.c **** 		case 3:
 478:./data/data.c **** 			if( i<3 )
 479:./data/data.c **** 			{
 480:./data/data.c **** 				switch (pUsrCfg->type) {
 481:./data/data.c **** 				case eCGQvaw2:
 482:./data/data.c **** 				case eCGQvis2:
 483:./data/data.c **** 				case CGQ_TYPE_VA_S2:
 484:./data/data.c **** 
 485:./data/data.c **** 				case CGQ_TYPE_VA_W:
 486:./data/data.c **** 				case CGQ_TYPE_VI_W:
 487:./data/data.c **** 				case CGQ_TYPE_VI_S:
 488:./data/data.c **** 				case CGQ_TYPE_VA_S1:
 489:./data/data.c **** 					if (MKState.Za == 3 && MKState.Zb == 3 && MKState.Zc == 3) {
 490:./data/data.c **** 						goto Data_Trans12;
 491:./data/data.c **** 					}
 492:./data/data.c **** 					break;
 493:./data/data.c **** 				}
 494:./data/data.c **** 			}else if( i<6 )
 495:./data/data.c **** 			{
 496:./data/data.c **** 				switch( pUsrCfg->type )
 497:./data/data.c **** 				{
 498:./data/data.c **** 				case eCGQvaw2:
 499:./data/data.c **** 				case eCGQvis2:
 500:./data/data.c **** 				case CGQ_TYPE_VA_S2:
 501:./data/data.c **** 					if (MKState.Ba == 3 && MKState.Bb == 3 && MKState.Bc == 3) {
 502:./data/data.c **** 						goto Data_Trans12;
 503:./data/data.c **** 					}
 504:./data/data.c **** 					break;
 505:./data/data.c **** 				}
 506:./data/data.c **** 			}
 507:./data/data.c **** 
 508:./data/data.c **** 			if (!PBI(data[i].trans, TRANS_DD)) {
 509:./data/data.c **** 				if (i >= 6)
 510:./data/data.c **** 					cmd = TCMDDATA_ZDGD;
 511:./data/data.c **** 				else
 512:./data/data.c **** 					cmd = QXtype == DATA_GZ_ZDGD ? TCMDDATA_ZDGD : TCMDDATA_GZ;
 513:./data/data.c **** 				if (GZ_Trans(i, cmd, QXtype)) {
 514:./data/data.c **** 					SBI(data[i].trans, TRANS_DD);
 515:./data/data.c **** 				}
 516:./data/data.c **** 			}
 517:./data/data.c **** 			break;
 518:./data/data.c **** 		}
 519:./data/data.c **** Data_Trans12: ;
 520:./data/data.c **** 	}
 521:./data/data.c **** }
 522:./data/data.c **** 
 523:./data/data.c **** const TOBJname OBJname[]={
 524:./data/data.c ****     {eCGQvas2,  _T("ZXVA-S2")},
 525:./data/data.c ****     {eCGQvad2, _T("ZXVA-D2")},
 526:./data/data.c **** 	{eCGQvis, _T("ZXVI-S")},
 527:./data/data.c **** 	{eCGQvas1, _T("ZXVA-S1")},
 528:./data/data.c **** 	{eCGQvad6, _T("ZXVA-D6")},
 529:./data/data.c **** 	{eCGQvd, _T("ZXVD")},
 530:./data/data.c **** 	{eCGQvid, _T("ZXVI-D")},
 531:./data/data.c **** 	{eCGQviw, _T("ZXVI-W")},
 532:./data/data.c **** 	{eCGQvaw, _T("ZXVA-W")},
 533:./data/data.c **** 	{eCGQvas2f, _T("ZXVA-S2F")},
 534:./data/data.c **** 	{eCGQvad, _T("ZXVA-D")},
 535:./data/data.c **** 	{eCGQvaw2, _T("ZXVA-W2")},
 536:./data/data.c **** 	{eCGQvdi, _T("ZXVD-I")},
 537:./data/data.c **** 	{eCGQld, _T("ZXLW")},
 538:./data/data.c **** 	{eCGQvis2, _T("ZXVI-S2")},
 539:./data/data.c **** };
 540:./data/data.c **** 
 541:./data/data.c **** const char *GetObjName( int type )
 542:./data/data.c **** {
 543:./data/data.c ****     int i;
 544:./data/data.c ****     for(i=0; i<ARRAY_SIZE( OBJname ); i++)
 545:./data/data.c ****     {
 546:./data/data.c ****         if( OBJname[i].type == type )
 547:./data/data.c ****             return OBJname[i].name;
 548:./data/data.c ****     }
 549:./data/data.c ****     return " ";
 550:./data/data.c **** }
 551:./data/data.c **** 
 552:./data/data.c **** 
 553:./data/data.c **** 
 554:./data/data.c **** void data_cmd( int args, char **argv );
 555:./data/data.c **** void data_cmd( int args, char **argv )
 556:./data/data.c **** {
  28              		.loc 1 556 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 0, -24
  37              		.cfi_offset 1, -20
  38              		.cfi_offset 2, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
 557:./data/data.c ****     int i;
 558:./data/data.c ****     TRACE("T n\tvalue\tdata\tstate\n" );
 559:./data/data.c ****     for(i=0; i<ARRAY_SIZE(data); i++)
  42              		.loc 1 559 0
  43 0002 0025     		movs	r5, #0
 558:./data/data.c ****     for(i=0; i<ARRAY_SIZE(data); i++)
  44              		.loc 1 558 0
  45 0004 1348     		ldr	r0, .L13
  46              	.LVL1:
  47 0006 FFF7FEFF 		bl	dbg_print
  48              	.LVL2:
  49 000a 134C     		ldr	r4, .L13+4
  50 000c 0234     		adds	r4, r4, #2
  51              	.LVL3:
  52              	.L9:
 560:./data/data.c ****     {
 561:./data/data.c ****         switch( data[i].type )
  53              		.loc 1 561 0
  54 000e 607E     		ldrb	r0, [r4, #25]
  55 0010 0138     		subs	r0, r0, #1
  56 0012 0528     		cmp	r0, #5
  57 0014 0FD8     		bhi	.L2
  58 0016 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
  59              	.L4:
  60 001a 07       		.byte	(.L3-.L4)/2
  61 001b 03       		.byte	(.L5-.L4)/2
  62 001c 05       		.byte	(.L6-.L4)/2
  63 001d 09       		.byte	(.L7-.L4)/2
  64 001e 0B       		.byte	(.L8-.L4)/2
  65 001f 03       		.byte	(.L5-.L4)/2
  66              		.p2align 1
  67              	.L5:
 562:./data/data.c ****         {
 563:./data/data.c ****             case eTTi:
 564:./data/data.c ****             case eTTid:
 565:./data/data.c ****             	TRACE("I");
  68              		.loc 1 565 0
  69 0020 0E48     		ldr	r0, .L13+8
  70 0022 06E0     		b	.L11
  71              	.L6:
 566:./data/data.c ****                 break;
 567:./data/data.c ****             case eTTw:
 568:./data/data.c ****             	TRACE("W");
  72              		.loc 1 568 0
  73 0024 0E48     		ldr	r0, .L13+12
  74 0026 04E0     		b	.L11
  75              	.L3:
 569:./data/data.c ****                 break;
 570:./data/data.c **** //            case eTTs:
 571:./data/data.c **** //                printk("S");
 572:./data/data.c **** //                break;
 573:./data/data.c ****             case eTTv:
 574:./data/data.c ****             	TRACE("V");
  76              		.loc 1 574 0
  77 0028 0E48     		ldr	r0, .L13+16
  78 002a 02E0     		b	.L11
  79              	.L7:
 575:./data/data.c ****                 break;
 576:./data/data.c ****             case eTTwv:
 577:./data/data.c ****             	TRACE("WV");
  80              		.loc 1 577 0
  81 002c 0E48     		ldr	r0, .L13+20
  82 002e 00E0     		b	.L11
  83              	.L8:
 578:./data/data.c ****                 break;
 579:./data/data.c ****             case eTTvd:
 580:./data/data.c ****             	TRACE("VD");
  84              		.loc 1 580 0
  85 0030 0E48     		ldr	r0, .L13+24
  86              	.L11:
  87 0032 FFF7FEFF 		bl	dbg_print
  88              	.LVL4:
  89              	.L2:
 581:./data/data.c ****                 break;
 582:./data/data.c ****         }
 583:./data/data.c ****         TRACE(" %d.\t%d\t%d\t%d\n", i+1, data[i].value, data[i].tmp, data[i].state);
  90              		.loc 1 583 0 discriminator 2
  91 0036 217E     		ldrb	r1, [r4, #24]
  92 0038 A21E     		subs	r2, r4, #2
  93 003a 0135     		adds	r5, r5, #1
  94              	.LVL5:
  95 003c 2388     		ldrh	r3, [r4]
  96 003e 1288     		ldrh	r2, [r2]
  97 0040 0B48     		ldr	r0, .L13+28
  98 0042 0091     		str	r1, [sp]
  99 0044 2900     		movs	r1, r5
 100 0046 FFF7FEFF 		bl	dbg_print
 101              	.LVL6:
 102 004a 2034     		adds	r4, r4, #32
 559:./data/data.c ****     {
 103              		.loc 1 559 0 discriminator 2
 104 004c 082D     		cmp	r5, #8
 105 004e DED1     		bne	.L9
 584:./data/data.c ****     }
 585:./data/data.c **** }
 106              		.loc 1 585 0
 107              		@ sp needed
 108              	.LVL7:
 109 0050 37BD     		pop	{r0, r1, r2, r4, r5, pc}
 110              	.L14:
 111 0052 C046     		.align	2
 112              	.L13:
 113 0054 00000000 		.word	.LC3
 114 0058 00000000 		.word	.LANCHOR0
 115 005c 16000000 		.word	.LC6
 116 0060 18000000 		.word	.LC8
 117 0064 1A000000 		.word	.LC10
 118 0068 1C000000 		.word	.LC12
 119 006c 1F000000 		.word	.LC14
 120 0070 22000000 		.word	.LC16
 121              		.cfi_endproc
 122              	.LFE67:
 124              		.section	.text.Data_Init,"ax",%progbits
 125              		.align	1
 126              		.global	Data_Init
 127              		.code	16
 128              		.thumb_func
 130              	Data_Init:
 131              	.LFB59:
  33:./data/data.c ****     int i;
 132              		.loc 1 33 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL8:
 137 0000 70B5     		push	{r4, r5, r6, lr}
 138              	.LCFI1:
 139              		.cfi_def_cfa_offset 16
 140              		.cfi_offset 4, -16
 141              		.cfi_offset 5, -12
 142              		.cfi_offset 6, -8
 143              		.cfi_offset 14, -4
 144 0002 0024     		movs	r4, #0
  38:./data/data.c ****         data[i].value = 0;
 145              		.loc 1 38 0
 146 0004 0126     		movs	r6, #1
  43:./data/data.c ****         data[i].yj_delay = pUsrCfg->delay;
 147              		.loc 1 43 0
 148 0006 5C4B     		ldr	r3, .L40
 149 0008 1868     		ldr	r0, [r3]
 150              	.LVL9:
 151 000a 5C4B     		ldr	r3, .L40+4
 152 000c 5D1D     		adds	r5, r3, #5
 153 000e 191D     		adds	r1, r3, #4
 154 0010 FF35     		adds	r5, r5, #255
 155              	.LVL10:
 156              	.L16:
 157 0012 0022     		movs	r2, #0
  36:./data/data.c ****     {
 158              		.loc 1 36 0 discriminator 1
 159 0014 A942     		cmp	r1, r5
 160 0016 0BD0     		beq	.L39
  39:./data/data.c ****         data[i].state = 0;
 161              		.loc 1 39 0 discriminator 3
 162 0018 0A1F     		subs	r2, r1, #4
  38:./data/data.c ****         data[i].value = 0;
 163              		.loc 1 38 0 discriminator 3
 164 001a CE75     		strb	r6, [r1, #23]
  39:./data/data.c ****         data[i].state = 0;
 165              		.loc 1 39 0 discriminator 3
 166 001c 1480     		strh	r4, [r2]
  40:./data/data.c ****         data[i].trans = 0;
 167              		.loc 1 40 0 discriminator 3
 168 001e 8C75     		strb	r4, [r1, #22]
  41:./data/data.c ****         data[i].value_tmp = 0;
 169              		.loc 1 41 0 discriminator 3
 170 0020 0C76     		strb	r4, [r1, #24]
  42:./data/data.c ****         data[i].bj_delay = pUsrCfg->delay;
 171              		.loc 1 42 0 discriminator 3
 172 0022 0C80     		strh	r4, [r1]
  43:./data/data.c ****         data[i].yj_delay = pUsrCfg->delay;
 173              		.loc 1 43 0 discriminator 3
 174 0024 0279     		ldrb	r2, [r0, #4]
 175 0026 8A76     		strb	r2, [r1, #26]
  44:./data/data.c ****     }
 176              		.loc 1 44 0 discriminator 3
 177 0028 0279     		ldrb	r2, [r0, #4]
 178 002a CA76     		strb	r2, [r1, #27]
 179 002c 2031     		adds	r1, r1, #32
 180 002e F0E7     		b	.L16
 181              	.L39:
  54:./data/data.c **** #endif
 182              		.loc 1 54 0
 183 0030 1E00     		movs	r6, r3
 184 0032 0125     		movs	r5, #1
  47:./data/data.c ****     dis = PBI( pUsrCfg->enable, USER_TYPE_BD);
 185              		.loc 1 47 0
 186 0034 5249     		ldr	r1, .L40+8
  54:./data/data.c **** #endif
 187              		.loc 1 54 0
 188 0036 DB36     		adds	r6, r6, #219
  47:./data/data.c ****     dis = PBI( pUsrCfg->enable, USER_TYPE_BD);
 189              		.loc 1 47 0
 190 0038 0A70     		strb	r2, [r1]
 191 003a 8479     		ldrb	r4, [r0, #6]
  54:./data/data.c **** #endif
 192              		.loc 1 54 0
 193 003c 3570     		strb	r5, [r6]
 194 003e 2C40     		ands	r4, r5
 195              	.LVL11:
  56:./data/data.c ****     pUsrCfg->count = 8;
 196              		.loc 1 56 0
 197 0040 1D00     		movs	r5, r3
 198 0042 0326     		movs	r6, #3
 199 0044 FB35     		adds	r5, r5, #251
 200 0046 2E70     		strb	r6, [r5]
  57:./data/data.c ****     switch( pUsrCfg->type )
 201              		.loc 1 57 0
 202 0048 0825     		movs	r5, #8
 203 004a 8570     		strb	r5, [r0, #2]
  58:./data/data.c ****     {
 204              		.loc 1 58 0
 205 004c C078     		ldrb	r0, [r0, #3]
 206 004e 0138     		subs	r0, r0, #1
 207 0050 0D28     		cmp	r0, #13
 208 0052 00D9     		bls	.LCB166
 209 0054 8AE0     		b	.L18	@long jump
 210              	.LCB166:
 211 0056 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 212              	.L20:
 213 005a 07       		.byte	(.L19-.L20)/2
 214 005b 62       		.byte	(.L21-.L20)/2
 215 005c 7D       		.byte	(.L22-.L20)/2
 216 005d 81       		.byte	(.L23-.L20)/2
 217 005e 1B       		.byte	(.L37-.L20)/2
 218 005f 1D       		.byte	(.L25-.L20)/2
 219 0060 73       		.byte	(.L26-.L20)/2
 220 0061 4F       		.byte	(.L27-.L20)/2
 221 0062 43       		.byte	(.L28-.L20)/2
 222 0063 89       		.byte	(.L18-.L20)/2
 223 0064 89       		.byte	(.L18-.L20)/2
 224 0065 74       		.byte	(.L36-.L20)/2
 225 0066 09       		.byte	(.L30-.L20)/2
 226 0067 2F       		.byte	(.L31-.L20)/2
 227              		.p2align 1
 228              	.L19:
  64:./data/data.c ****             break;
 229              		.loc 1 64 0
 230 0068 0C70     		strb	r4, [r1]
  65:./data/data.c ****         case eCGQvaw2:
 231              		.loc 1 65 0
 232 006a 7FE0     		b	.L18
 233              	.L30:
  67:./data/data.c ****             data[0].type  = TT_WV;
 234              		.loc 1 67 0
 235 006c 0C70     		strb	r4, [r1]
  69:./data/data.c ****             data[2].type  = TT_WV;
 236              		.loc 1 69 0
 237 006e 1900     		movs	r1, r3
  68:./data/data.c ****             data[1].type  = TT_WV;
 238              		.loc 1 68 0
 239 0070 0422     		movs	r2, #4
  69:./data/data.c ****             data[2].type  = TT_WV;
 240              		.loc 1 69 0
 241 0072 3B31     		adds	r1, r1, #59
 242 0074 0A70     		strb	r2, [r1]
  70:./data/data.c ****             data[3].type  = TT_WV;
 243              		.loc 1 70 0
 244 0076 1900     		movs	r1, r3
 245 0078 5B31     		adds	r1, r1, #91
 246 007a 0A70     		strb	r2, [r1]
  71:./data/data.c ****             data[4].type  = TT_WV;
 247              		.loc 1 71 0
 248 007c 1900     		movs	r1, r3
 249 007e 7B31     		adds	r1, r1, #123
 250 0080 0A70     		strb	r2, [r1]
  72:./data/data.c ****             data[5].type  = TT_WV;
 251              		.loc 1 72 0
 252 0082 1900     		movs	r1, r3
 253 0084 9B31     		adds	r1, r1, #155
 254 0086 0A70     		strb	r2, [r1]
  73:./data/data.c ****             data[6].type  = eTTwv;
 255              		.loc 1 73 0
 256 0088 1900     		movs	r1, r3
 257 008a BB31     		adds	r1, r1, #187
  68:./data/data.c ****             data[1].type  = TT_WV;
 258              		.loc 1 68 0
 259 008c DA76     		strb	r2, [r3, #27]
  73:./data/data.c ****             data[6].type  = eTTwv;
 260              		.loc 1 73 0
 261 008e 0A70     		strb	r2, [r1]
 262              	.L37:
  74:./data/data.c ****             break;
 263              		.loc 1 74 0
 264 0090 DB33     		adds	r3, r3, #219
 265 0092 6AE0     		b	.L32
 266              	.L25:
  86:./data/data.c ****             data[2].type  = TT_VD;
 267              		.loc 1 86 0
 268 0094 1900     		movs	r1, r3
  87:./data/data.c ****             data[3].type  = 0;
 269              		.loc 1 87 0
 270 0096 1800     		movs	r0, r3
  86:./data/data.c ****             data[2].type  = TT_VD;
 271              		.loc 1 86 0
 272 0098 3B31     		adds	r1, r1, #59
 273 009a 0A70     		strb	r2, [r1]
  87:./data/data.c ****             data[3].type  = 0;
 274              		.loc 1 87 0
 275 009c 0521     		movs	r1, #5
 276 009e 5B30     		adds	r0, r0, #91
 277 00a0 0170     		strb	r1, [r0]
  88:./data/data.c ****             data[4].type  = 0;
 278              		.loc 1 88 0
 279 00a2 1800     		movs	r0, r3
 280 00a4 7B30     		adds	r0, r0, #123
 281 00a6 0270     		strb	r2, [r0]
  89:./data/data.c ****             data[5].type  = 0;
 282              		.loc 1 89 0
 283 00a8 1800     		movs	r0, r3
 284 00aa 9B30     		adds	r0, r0, #155
 285 00ac 0270     		strb	r2, [r0]
  90:./data/data.c ****             data[6].type  = TT_VD;
 286              		.loc 1 90 0
 287 00ae 1800     		movs	r0, r3
 288 00b0 BB30     		adds	r0, r0, #187
  85:./data/data.c ****             data[1].type  = 0;
 289              		.loc 1 85 0
 290 00b2 DA76     		strb	r2, [r3, #27]
  90:./data/data.c ****             data[6].type  = TT_VD;
 291              		.loc 1 90 0
 292 00b4 0270     		strb	r2, [r0]
 293 00b6 11E0     		b	.L35
 294              	.L31:
  95:./data/data.c ****             data[2].type  = TT_VD;
 295              		.loc 1 95 0
 296 00b8 1900     		movs	r1, r3
  96:./data/data.c ****             data[3].type  = 0;
 297              		.loc 1 96 0
 298 00ba 1800     		movs	r0, r3
  95:./data/data.c ****             data[2].type  = TT_VD;
 299              		.loc 1 95 0
 300 00bc 3B31     		adds	r1, r1, #59
 301 00be 0A70     		strb	r2, [r1]
  96:./data/data.c ****             data[3].type  = 0;
 302              		.loc 1 96 0
 303 00c0 0521     		movs	r1, #5
 304 00c2 5B30     		adds	r0, r0, #91
 305 00c4 0170     		strb	r1, [r0]
  97:./data/data.c ****             data[4].type  = 0;
 306              		.loc 1 97 0
 307 00c6 1800     		movs	r0, r3
 308 00c8 7B30     		adds	r0, r0, #123
 309 00ca 0270     		strb	r2, [r0]
  98:./data/data.c ****             data[5].type  = TT_ID;
 310              		.loc 1 98 0
 311 00cc 1800     		movs	r0, r3
 312 00ce 9B30     		adds	r0, r0, #155
 313 00d0 0270     		strb	r2, [r0]
  94:./data/data.c ****             data[1].type  = 0;
 314              		.loc 1 94 0
 315 00d2 DA76     		strb	r2, [r3, #27]
  99:./data/data.c ****             data[6].type  = TT_VD;
 316              		.loc 1 99 0
 317 00d4 1A00     		movs	r2, r3
 318 00d6 0620     		movs	r0, #6
 319 00d8 BB32     		adds	r2, r2, #187
 320 00da 1070     		strb	r0, [r2]
 321              	.L35:
 100:./data/data.c ****             break;
 322              		.loc 1 100 0
 323 00dc DB33     		adds	r3, r3, #219
 324 00de 2DE0     		b	.L34
 325              	.L28:
 104:./data/data.c ****             data[2].type  = TT_WV;
 326              		.loc 1 104 0
 327 00e0 1900     		movs	r1, r3
 103:./data/data.c ****             data[1].type  = TT_WV;
 328              		.loc 1 103 0
 329 00e2 0422     		movs	r2, #4
 104:./data/data.c ****             data[2].type  = TT_WV;
 330              		.loc 1 104 0
 331 00e4 3B31     		adds	r1, r1, #59
 332 00e6 0A70     		strb	r2, [r1]
 105:./data/data.c ****             data[3].type  = 0;
 333              		.loc 1 105 0
 334 00e8 1900     		movs	r1, r3
 106:./data/data.c ****             data[4].type  = 0;
 335              		.loc 1 106 0
 336 00ea 1800     		movs	r0, r3
 105:./data/data.c ****             data[3].type  = 0;
 337              		.loc 1 105 0
 338 00ec 5B31     		adds	r1, r1, #91
 339 00ee 0A70     		strb	r2, [r1]
 103:./data/data.c ****             data[1].type  = TT_WV;
 340              		.loc 1 103 0
 341 00f0 DA76     		strb	r2, [r3, #27]
 106:./data/data.c ****             data[4].type  = 0;
 342              		.loc 1 106 0
 343 00f2 7B30     		adds	r0, r0, #123
 344 00f4 0021     		movs	r1, #0
 345 00f6 0AE0     		b	.L38
 346              	.L27:
 113:./data/data.c ****             data[2].type  = TT_WV;
 347              		.loc 1 113 0
 348 00f8 1900     		movs	r1, r3
 112:./data/data.c ****             data[1].type  = TT_WV;
 349              		.loc 1 112 0
 350 00fa 0422     		movs	r2, #4
 113:./data/data.c ****             data[2].type  = TT_WV;
 351              		.loc 1 113 0
 352 00fc 3B31     		adds	r1, r1, #59
 353 00fe 0A70     		strb	r2, [r1]
 114:./data/data.c ****             data[3].type  = TT_I;
 354              		.loc 1 114 0
 355 0100 1900     		movs	r1, r3
 115:./data/data.c ****             data[4].type  = TT_I;
 356              		.loc 1 115 0
 357 0102 1800     		movs	r0, r3
 114:./data/data.c ****             data[3].type  = TT_I;
 358              		.loc 1 114 0
 359 0104 5B31     		adds	r1, r1, #91
 360 0106 0A70     		strb	r2, [r1]
 115:./data/data.c ****             data[4].type  = TT_I;
 361              		.loc 1 115 0
 362 0108 0221     		movs	r1, #2
 112:./data/data.c ****             data[1].type  = TT_WV;
 363              		.loc 1 112 0
 364 010a DA76     		strb	r2, [r3, #27]
 115:./data/data.c ****             data[4].type  = TT_I;
 365              		.loc 1 115 0
 366 010c 7B30     		adds	r0, r0, #123
 367              	.L38:
 368 010e 0170     		strb	r1, [r0]
 116:./data/data.c ****             data[5].type  = TT_I;
 369              		.loc 1 116 0
 370 0110 1800     		movs	r0, r3
 371 0112 9B30     		adds	r0, r0, #155
 372 0114 0170     		strb	r1, [r0]
 117:./data/data.c ****             data[6].type  = eTTwv;
 373              		.loc 1 117 0
 374 0116 1800     		movs	r0, r3
 375 0118 BB30     		adds	r0, r0, #187
 376 011a 0170     		strb	r1, [r0]
 377 011c B8E7     		b	.L37
 378              	.L21:
 122:./data/data.c ****             data[2].type  = TT_V;
 379              		.loc 1 122 0
 380 011e 1900     		movs	r1, r3
 123:./data/data.c ****             data[3].type  = 0;
 381              		.loc 1 123 0
 382 0120 1800     		movs	r0, r3
 122:./data/data.c ****             data[2].type  = TT_V;
 383              		.loc 1 122 0
 384 0122 3B31     		adds	r1, r1, #59
 385 0124 0A70     		strb	r2, [r1]
 123:./data/data.c ****             data[3].type  = 0;
 386              		.loc 1 123 0
 387 0126 0121     		movs	r1, #1
 388 0128 5B30     		adds	r0, r0, #91
 389 012a 0170     		strb	r1, [r0]
 124:./data/data.c ****             data[4].type  = 0;
 390              		.loc 1 124 0
 391 012c 1800     		movs	r0, r3
 392 012e 7B30     		adds	r0, r0, #123
 393 0130 0270     		strb	r2, [r0]
 125:./data/data.c ****             data[5].type  = TT_V;
 394              		.loc 1 125 0
 395 0132 1800     		movs	r0, r3
 396 0134 9B30     		adds	r0, r0, #155
 121:./data/data.c ****             data[1].type  = 0;
 397              		.loc 1 121 0
 398 0136 DA76     		strb	r2, [r3, #27]
 125:./data/data.c ****             data[5].type  = TT_V;
 399              		.loc 1 125 0
 400 0138 0270     		strb	r2, [r0]
 126:./data/data.c ****             break;
 401              		.loc 1 126 0
 402 013a BB33     		adds	r3, r3, #187
 403              	.L34:
 404 013c 1970     		strb	r1, [r3]
 127:./data/data.c ****         case CGQ_TYPE_VI_D:
 405              		.loc 1 127 0
 406 013e 15E0     		b	.L18
 407              	.L26:
 129:./data/data.c ****             data[0].type  = 0;
 408              		.loc 1 129 0
 409 0140 0C70     		strb	r4, [r1]
 410              	.L36:
 131:./data/data.c ****             data[2].type  = TT_V;
 411              		.loc 1 131 0
 412 0142 1900     		movs	r1, r3
 413 0144 3B31     		adds	r1, r1, #59
 414 0146 0A70     		strb	r2, [r1]
 132:./data/data.c ****             data[3].type  = 0;
 415              		.loc 1 132 0
 416 0148 1900     		movs	r1, r3
 417 014a 0120     		movs	r0, #1
 418 014c 5B31     		adds	r1, r1, #91
 130:./data/data.c ****             data[1].type  = 0;
 419              		.loc 1 130 0
 420 014e DA76     		strb	r2, [r3, #27]
 132:./data/data.c ****             data[3].type  = 0;
 421              		.loc 1 132 0
 422 0150 0870     		strb	r0, [r1]
 423 0152 03E0     		b	.L23
 424              	.L22:
 138:./data/data.c ****             data[4].type  = TT_I;
 425              		.loc 1 138 0
 426 0154 1900     		movs	r1, r3
 427 0156 0222     		movs	r2, #2
 428 0158 7B31     		adds	r1, r1, #123
 429 015a 01E0     		b	.L33
 430              	.L23:
 143:./data/data.c ****             data[4].type  = 0;
 431              		.loc 1 143 0
 432 015c 1900     		movs	r1, r3
 433 015e 7B31     		adds	r1, r1, #123
 434              	.L33:
 435 0160 0A70     		strb	r2, [r1]
 144:./data/data.c ****             data[5].type  = 0;
 436              		.loc 1 144 0
 437 0162 1900     		movs	r1, r3
 438 0164 9B31     		adds	r1, r1, #155
 439 0166 0A70     		strb	r2, [r1]
 145:./data/data.c ****             break;
 440              		.loc 1 145 0
 441 0168 BB33     		adds	r3, r3, #187
 442              	.L32:
 443 016a 1A70     		strb	r2, [r3]
 444              	.L18:
 153:./data/data.c ****     MKState.state2 = 0;
 445              		.loc 1 153 0
 446 016c 0022     		movs	r2, #0
 447 016e 054B     		ldr	r3, .L40+12
 156:./data/data.c **** 
 448              		.loc 1 156 0
 449              		@ sp needed
 153:./data/data.c ****     MKState.state2 = 0;
 450              		.loc 1 153 0
 451 0170 1A80     		strh	r2, [r3]
 154:./data/data.c ****     MKState.trans = 0;
 452              		.loc 1 154 0
 453 0172 9A70     		strb	r2, [r3, #2]
 155:./data/data.c **** }
 454              		.loc 1 155 0
 455 0174 9A80     		strh	r2, [r3, #4]
 456              	.LVL12:
 156:./data/data.c **** 
 457              		.loc 1 156 0
 458 0176 70BD     		pop	{r4, r5, r6, pc}
 459              	.L41:
 460              		.align	2
 461              	.L40:
 462 0178 00000000 		.word	pUsrCfg
 463 017c 00000000 		.word	.LANCHOR0
 464 0180 00000000 		.word	BD_disable
 465 0184 00010000 		.word	.LANCHOR1
 466              		.cfi_endproc
 467              	.LFE59:
 469              		.global	__aeabi_idiv
 470              		.section	.text.DataCJgetValue,"ax",%progbits
 471              		.align	1
 472              		.global	DataCJgetValue
 473              		.code	16
 474              		.thumb_func
 476              	DataCJgetValue:
 477              	.LFB62:
 184:./data/data.c **** 	int i,j;
 478              		.loc 1 184 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              	.LVL13:
 483 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 484              	.LCFI2:
 485              		.cfi_def_cfa_offset 24
 486              		.cfi_offset 3, -24
 487              		.cfi_offset 4, -20
 488              		.cfi_offset 5, -16
 489              		.cfi_offset 6, -12
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 184:./data/data.c **** 	int i,j;
 492              		.loc 1 184 0
 493 0002 0026     		movs	r6, #0
 494              	.LVL14:
 495              	.L49:
 496              	.LBB12:
 497              	.LBB13:
 163:./data/data.c ****     ADC_Enable( 0 );
 498              		.loc 1 163 0
 499 0004 0A20     		movs	r0, #10
 500 0006 FFF7FEFF 		bl	OSTimeDly
 501              	.LVL15:
 164:./data/data.c ****     while( (value = ADC_Flag() ) < 0 )
 502              		.loc 1 164 0
 503 000a 0020     		movs	r0, #0
 504 000c FFF7FEFF 		bl	ADC_Enable
 505              	.LVL16:
 506              	.L43:
 165:./data/data.c ****     {
 507              		.loc 1 165 0
 508 0010 FFF7FEFF 		bl	ADC_Flag
 509              	.LVL17:
 510 0014 0028     		cmp	r0, #0
 511 0016 03DA     		bge	.L57
 167:./data/data.c ****     }
 512              		.loc 1 167 0
 513 0018 0120     		movs	r0, #1
 514              	.LVL18:
 515 001a FFF7FEFF 		bl	OSTimeDly
 516              	.LVL19:
 517 001e F7E7     		b	.L43
 518              	.LVL20:
 519              	.L57:
 520 0020 1D4C     		ldr	r4, .L59
 165:./data/data.c ****     {
 521              		.loc 1 165 0
 522 0022 0025     		movs	r5, #0
 523 0024 2700     		movs	r7, r4
 524 0026 1B37     		adds	r7, r7, #27
 525              	.LVL21:
 526              	.L48:
 527              	.LBE13:
 528              	.LBE12:
 193:./data/data.c ****             {
 529              		.loc 1 193 0
 530 0028 3B78     		ldrb	r3, [r7]
 207:./data/data.c ****                     break;
 531              		.loc 1 207 0
 532 002a 0021     		movs	r1, #0
 533 002c 072B     		cmp	r3, #7
 534 002e 0ED8     		bhi	.L45
 535 0030 0122     		movs	r2, #1
 536 0032 9A40     		lsls	r2, r2, r3
 537 0034 1300     		movs	r3, r2
 538 0036 9622     		movs	r2, #150
 539 0038 1342     		tst	r3, r2
 540 003a 03D1     		bne	.L46
 541 003c 2E3A     		subs	r2, r2, #46
 542 003e 1342     		tst	r3, r2
 543 0040 05D0     		beq	.L45
 544 0042 00E0     		b	.L47
 545              	.L46:
 546              	.LVL22:
 547              	.LBB14:
 548              	.LBB15:
 174:./data/data.c **** }
 549              		.loc 1 174 0
 550 0044 0121     		movs	r1, #1
 551              	.LVL23:
 552              	.L47:
 553              	.LBE15:
 554              	.LBE14:
 555              	.LBB16:
 556              	.LBB17:
 557 0046 2800     		movs	r0, r5
 558 0048 FFF7FEFF 		bl	ADC_GetExt
 559              	.LVL24:
 560              	.LBE17:
 561              	.LBE16:
 204:./data/data.c ****                     break;
 562              		.loc 1 204 0
 563 004c 01B2     		sxth	r1, r0
 564              	.LVL25:
 565              	.L45:
 210:./data/data.c ****         }
 566              		.loc 1 210 0 discriminator 2
 567 004e 3300     		movs	r3, r6
 190:./data/data.c ****         {
 568              		.loc 1 190 0 discriminator 2
 569 0050 0135     		adds	r5, r5, #1
 570              	.LVL26:
 210:./data/data.c ****         }
 571              		.loc 1 210 0 discriminator 2
 572 0052 153B     		subs	r3, r3, #21
 573 0054 F952     		strh	r1, [r7, r3]
 574 0056 2037     		adds	r7, r7, #32
 190:./data/data.c ****         {
 575              		.loc 1 190 0 discriminator 2
 576 0058 082D     		cmp	r5, #8
 577 005a E5D1     		bne	.L48
 578 005c 0236     		adds	r6, r6, #2
 187:./data/data.c **** 	{
 579              		.loc 1 187 0 discriminator 2
 580 005e 142E     		cmp	r6, #20
 581 0060 D0D1     		bne	.L49
 582 0062 A51D     		adds	r5, r4, #6
 583              	.LVL27:
 584 0064 0734     		adds	r4, r4, #7
 585 0066 FF34     		adds	r4, r4, #255
 586              	.LVL28:
 587              	.L50:
 213:./data/data.c ****     {//通过shell排序，去掉2个最大值，去掉2个最小值，取平均值。
 588              		.loc 1 213 0 discriminator 1
 589 0068 A542     		cmp	r5, r4
 590 006a 13D0     		beq	.L58
 215:./data/data.c ****     	value = 0;
 591              		.loc 1 215 0
 592 006c 0A21     		movs	r1, #10
 593 006e 2800     		movs	r0, r5
 594 0070 FFF7FEFF 		bl	shellSort16
 595              	.LVL29:
 596 0074 0023     		movs	r3, #0
 216:./data/data.c ****     	for(j=2; j<GETBUFF_SIZE-2; j++)
 597              		.loc 1 216 0
 598 0076 1800     		movs	r0, r3
 219:./data/data.c ****     	}
 599              		.loc 1 219 0
 600 0078 A91F     		subs	r1, r5, #6
 601              	.LVL30:
 602              	.L51:
 219:./data/data.c ****     	}
 603              		.loc 1 219 0 is_stmt 0 discriminator 3
 604 007a CA18     		adds	r2, r1, r3
 605 007c 5289     		ldrh	r2, [r2, #10]
 606 007e 0233     		adds	r3, r3, #2
 607 0080 8018     		adds	r0, r0, r2
 608              	.LVL31:
 217:./data/data.c ****     	{
 609              		.loc 1 217 0 is_stmt 1 discriminator 3
 610 0082 0C2B     		cmp	r3, #12
 611 0084 F9D1     		bne	.L51
 612              	.LVL32:
 223:./data/data.c ****     }
 613              		.loc 1 223 0 discriminator 2
 614 0086 0621     		movs	r1, #6
 615 0088 FFF7FEFF 		bl	__aeabi_idiv
 616              	.LVL33:
 617 008c 2E1F     		subs	r6, r5, #4
 618 008e 3080     		strh	r0, [r6]
 619 0090 2035     		adds	r5, r5, #32
 620 0092 E9E7     		b	.L50
 621              	.L58:
 225:./data/data.c **** 
 622              		.loc 1 225 0
 623              		@ sp needed
 624 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 625              	.L60:
 626 0096 C046     		.align	2
 627              	.L59:
 628 0098 00000000 		.word	.LANCHOR0
 629              		.cfi_endproc
 630              	.LFE62:
 632              		.section	.text.DataCJ_Task,"ax",%progbits
 633              		.align	1
 634              		.global	DataCJ_Task
 635              		.code	16
 636              		.thumb_func
 638              	DataCJ_Task:
 639              	.LFB63:
 229:./data/data.c ****     int i;
 640              		.loc 1 229 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 232:./data/data.c ****     pr_debug("data cj task\n");
 644              		.loc 1 232 0
 645 0000 1423     		movs	r3, #20
 229:./data/data.c ****     int i;
 646              		.loc 1 229 0
 647 0002 70B5     		push	{r4, r5, r6, lr}
 648              	.LCFI3:
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 4, -16
 651              		.cfi_offset 5, -12
 652              		.cfi_offset 6, -8
 653              		.cfi_offset 14, -4
 232:./data/data.c ****     pr_debug("data cj task\n");
 654              		.loc 1 232 0
 655 0004 304E     		ldr	r6, .L75
 656 0006 3360     		str	r3, [r6]
 657              	.L71:
 238:./data/data.c ****         {
 658              		.loc 1 238 0
 659 0008 0024     		movs	r4, #0
 236:./data/data.c ****     	createWJZ(wValue);
 660              		.loc 1 236 0
 661 000a FFF7FEFF 		bl	DataCJgetValue
 662              	.LVL34:
 237:./data/data.c ****         for(i=0; i<ARRAY_SIZE(data); i++)
 663              		.loc 1 237 0
 664 000e 3068     		ldr	r0, [r6]
 665 0010 FFF7FEFF 		bl	createWJZ
 666              	.LVL35:
 667 0014 2D4D     		ldr	r5, .L75+4
 668 0016 0235     		adds	r5, r5, #2
 669              	.LVL36:
 670              	.L70:
 241:./data/data.c ****             {
 671              		.loc 1 241 0
 672 0018 6B7E     		ldrb	r3, [r5, #25]
 240:./data/data.c ****             switch( data[i].type )
 673              		.loc 1 240 0
 674 001a 2A88     		ldrh	r2, [r5]
 675              	.LVL37:
 241:./data/data.c ****             {
 676              		.loc 1 241 0
 677 001c 013B     		subs	r3, r3, #1
 264:./data/data.c ****                     break;
 678              		.loc 1 264 0
 679 001e 0020     		movs	r0, #0
 241:./data/data.c ****             {
 680              		.loc 1 241 0
 681 0020 052B     		cmp	r3, #5
 682 0022 47D8     		bhi	.L62
 683 0024 1800     		movs	r0, r3
 684 0026 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 685              	.L64:
 686 002a 1D       		.byte	(.L63-.L64)/2
 687 002b 32       		.byte	(.L65-.L64)/2
 688 002c 2A       		.byte	(.L66-.L64)/2
 689 002d 10       		.byte	(.L67-.L64)/2
 690 002e 03       		.byte	(.L68-.L64)/2
 691 002f 32       		.byte	(.L65-.L64)/2
 692              		.p2align 1
 693              	.L68:
 244:./data/data.c ****                     break;
 694              		.loc 1 244 0
 695 0030 274B     		ldr	r3, .L75+8
 696 0032 1968     		ldr	r1, [r3]
 697 0034 231D     		adds	r3, r4, #4
 698 0036 5B00     		lsls	r3, r3, #1
 699 0038 CB18     		adds	r3, r1, r3
 700 003a 197A     		ldrb	r1, [r3, #8]
 701 003c D879     		ldrb	r0, [r3, #7]
 702 003e 0902     		lsls	r1, r1, #8
 703 0040 0143     		orrs	r1, r0
 704 0042 1000     		movs	r0, r2
 705 0044 FFF7FEFF 		bl	GetValueVD
 706              	.LVL38:
 245:./data/data.c ****                 case TT_WV:
 707              		.loc 1 245 0
 708 0048 34E0     		b	.L62
 709              	.LVL39:
 710              	.L67:
 247:./data/data.c ****                     break;
 711              		.loc 1 247 0
 712 004a 214B     		ldr	r3, .L75+8
 713 004c 1968     		ldr	r1, [r3]
 714 004e 231D     		adds	r3, r4, #4
 715 0050 5B00     		lsls	r3, r3, #1
 716 0052 CB18     		adds	r3, r1, r3
 717 0054 197A     		ldrb	r1, [r3, #8]
 718 0056 D879     		ldrb	r0, [r3, #7]
 719 0058 0902     		lsls	r1, r1, #8
 720 005a 0143     		orrs	r1, r0
 721 005c 1000     		movs	r0, r2
 722 005e FFF7FEFF 		bl	GetValueWV
 723              	.LVL40:
 248:./data/data.c ****                 case TT_V:
 724              		.loc 1 248 0
 725 0062 27E0     		b	.L62
 726              	.LVL41:
 727              	.L63:
 250:./data/data.c ****                     break;
 728              		.loc 1 250 0
 729 0064 1A4B     		ldr	r3, .L75+8
 730 0066 1968     		ldr	r1, [r3]
 731 0068 231D     		adds	r3, r4, #4
 732 006a 5B00     		lsls	r3, r3, #1
 733 006c CB18     		adds	r3, r1, r3
 734 006e 197A     		ldrb	r1, [r3, #8]
 735 0070 D879     		ldrb	r0, [r3, #7]
 736 0072 0902     		lsls	r1, r1, #8
 737 0074 0143     		orrs	r1, r0
 738 0076 1000     		movs	r0, r2
 739 0078 FFF7FEFF 		bl	GetValueV
 740              	.LVL42:
 251:./data/data.c ****                 case eTTw:
 741              		.loc 1 251 0
 742 007c 1AE0     		b	.L62
 743              	.LVL43:
 744              	.L66:
 253:./data/data.c ****                 	wValue = value;
 745              		.loc 1 253 0
 746 007e 1000     		movs	r0, r2
 747 0080 FFF7FEFF 		bl	WValue
 748              	.LVL44:
 749 0084 C343     		mvns	r3, r0
 750 0086 DB17     		asrs	r3, r3, #31
 254:./data/data.c ****                 	if( value < 0 )
 751              		.loc 1 254 0
 752 0088 3060     		str	r0, [r6]
 753 008a 1840     		ands	r0, r3
 754              	.LVL45:
 755 008c 12E0     		b	.L62
 756              	.LVL46:
 757              	.L65:
 260:./data/data.c ****                     value = value < 5 ? 0: value;
 758              		.loc 1 260 0
 759 008e 104B     		ldr	r3, .L75+8
 760 0090 1968     		ldr	r1, [r3]
 761 0092 087A     		ldrb	r0, [r1, #8]
 762 0094 CB79     		ldrb	r3, [r1, #7]
 763 0096 0002     		lsls	r0, r0, #8
 764 0098 1843     		orrs	r0, r3
 765 009a 231D     		adds	r3, r4, #4
 766 009c 5B00     		lsls	r3, r3, #1
 767 009e CB18     		adds	r3, r1, r3
 768 00a0 197A     		ldrb	r1, [r3, #8]
 769 00a2 5043     		muls	r0, r2
 770 00a4 DA79     		ldrb	r2, [r3, #7]
 771              	.LVL47:
 772 00a6 0902     		lsls	r1, r1, #8
 773 00a8 1143     		orrs	r1, r2
 774 00aa FFF7FEFF 		bl	__aeabi_idiv
 775              	.LVL48:
 261:./data/data.c ****                     break;
 776              		.loc 1 261 0
 777 00ae 0428     		cmp	r0, #4
 778 00b0 00DC     		bgt	.L62
 779 00b2 0020     		movs	r0, #0
 780              	.LVL49:
 781              	.L62:
 267:./data/data.c **** 	}
 782              		.loc 1 267 0 discriminator 2
 783 00b4 AB1E     		subs	r3, r5, #2
 238:./data/data.c ****         {
 784              		.loc 1 238 0 discriminator 2
 785 00b6 0134     		adds	r4, r4, #1
 786              	.LVL50:
 267:./data/data.c **** 	}
 787              		.loc 1 267 0 discriminator 2
 788 00b8 1880     		strh	r0, [r3]
 789 00ba 2035     		adds	r5, r5, #32
 238:./data/data.c ****         {
 790              		.loc 1 238 0 discriminator 2
 791 00bc 082C     		cmp	r4, #8
 792 00be ABD1     		bne	.L70
 269:./data/data.c ****     }
 793              		.loc 1 269 0
 794 00c0 0120     		movs	r0, #1
 795              	.LVL51:
 796 00c2 FFF7FEFF 		bl	OSTimeDly
 797              	.LVL52:
 270:./data/data.c **** }
 798              		.loc 1 270 0
 799 00c6 9FE7     		b	.L71
 800              	.L76:
 801              		.align	2
 802              	.L75:
 803 00c8 00000000 		.word	wValue
 804 00cc 00000000 		.word	.LANCHOR0
 805 00d0 00000000 		.word	pUsrCfg
 806              		.cfi_endproc
 807              	.LFE63:
 809              		.section	.text.Data_PD,"ax",%progbits
 810              		.align	1
 811              		.global	Data_PD
 812              		.code	16
 813              		.thumb_func
 815              	Data_PD:
 816              	.LFB64:
 274:./data/data.c ****     int i;
 817              		.loc 1 274 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 16
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL53:
 278:./data/data.c ****     gy = pUsrCfg->Vbj;
 822              		.loc 1 278 0
 823 0000 0021     		movs	r1, #0
 274:./data/data.c ****     int i;
 824              		.loc 1 274 0
 825 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 826              	.LCFI4:
 827              		.cfi_def_cfa_offset 20
 828              		.cfi_offset 4, -20
 829              		.cfi_offset 5, -16
 830              		.cfi_offset 6, -12
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 279:./data/data.c ****     qy = pUsrCfg->Vqy;
 833              		.loc 1 279 0
 834 0004 7D4B     		ldr	r3, .L113
 274:./data/data.c ****     int i;
 835              		.loc 1 274 0
 836 0006 85B0     		sub	sp, sp, #20
 837              	.LCFI5:
 838              		.cfi_def_cfa_offset 40
 279:./data/data.c ****     qy = pUsrCfg->Vqy;
 839              		.loc 1 279 0
 840 0008 1D68     		ldr	r5, [r3]
 841 000a A87B     		ldrb	r0, [r5, #14]
 842 000c 6B7B     		ldrb	r3, [r5, #13]
 280:./data/data.c ****     qx = qy / 2;
 843              		.loc 1 280 0
 844 000e 2E7B     		ldrb	r6, [r5, #12]
 279:./data/data.c ****     qy = pUsrCfg->Vqy;
 845              		.loc 1 279 0
 846 0010 0002     		lsls	r0, r0, #8
 847 0012 1843     		orrs	r0, r3
 280:./data/data.c ****     qx = qy / 2;
 848              		.loc 1 280 0
 849 0014 EB7A     		ldrb	r3, [r5, #11]
 850 0016 3602     		lsls	r6, r6, #8
 851 0018 1E43     		orrs	r6, r3
 283:./data/data.c ****     {
 852              		.loc 1 283 0
 853 001a 794B     		ldr	r3, .L113+4
 279:./data/data.c ****     qy = pUsrCfg->Vqy;
 854              		.loc 1 279 0
 855 001c 0700     		movs	r7, r0
 856              	.LVL54:
 283:./data/data.c ****     {
 857              		.loc 1 283 0
 858 001e 1B78     		ldrb	r3, [r3]
 281:./data/data.c **** 
 859              		.loc 1 281 0
 860 0020 7210     		asrs	r2, r6, #1
 861              	.LVL55:
 278:./data/data.c ****     gy = pUsrCfg->Vbj;
 862              		.loc 1 278 0
 863 0022 0291     		str	r1, [sp, #8]
 283:./data/data.c ****     {
 864              		.loc 1 283 0
 865 0024 8B42     		cmp	r3, r1
 866 0026 0AD0     		beq	.L78
 285:./data/data.c ****             disable = 0;
 867              		.loc 1 285 0
 868 0028 764B     		ldr	r3, .L113+8
 278:./data/data.c ****     gy = pUsrCfg->Vbj;
 869              		.loc 1 278 0
 870 002a 1988     		ldrh	r1, [r3]
 871 002c FC23     		movs	r3, #252
 872 002e 9B00     		lsls	r3, r3, #2
 873 0030 0B40     		ands	r3, r1
 874 0032 7549     		ldr	r1, .L113+12
 875 0034 5B18     		adds	r3, r3, r1
 876 0036 591E     		subs	r1, r3, #1
 877 0038 8B41     		sbcs	r3, r3, r1
 878 003a DBB2     		uxtb	r3, r3
 879 003c 0293     		str	r3, [sp, #8]
 880              	.L78:
 881              	.LVL56:
 276:./data/data.c ****     int gy,qy,qx;
 882              		.loc 1 276 0
 883 003e 0023     		movs	r3, #0
 884 0040 724C     		ldr	r4, .L113+16
 885 0042 0193     		str	r3, [sp, #4]
 290:./data/data.c ****     {
 886              		.loc 1 290 0
 887 0044 0093     		str	r3, [sp]
 888              	.LVL57:
 889              	.L79:
 290:./data/data.c ****     {
 890              		.loc 1 290 0 is_stmt 0 discriminator 1
 891 0046 AB78     		ldrb	r3, [r5, #2]
 892 0048 0099     		ldr	r1, [sp]
 893 004a 9942     		cmp	r1, r3
 894 004c 00DB     		blt	.LCB812
 895 004e 91E0     		b	.L111	@long jump
 896              	.LCB812:
 292:./data/data.c ****         {
 897              		.loc 1 292 0 is_stmt 1
 898 0050 009B     		ldr	r3, [sp]
 899 0052 022B     		cmp	r3, #2
 900 0054 05DD     		ble	.L80
 294:./data/data.c ****             {
 901              		.loc 1 294 0
 902 0056 E37E     		ldrb	r3, [r4, #27]
 903 0058 012B     		cmp	r3, #1
 904 005a 00D1     		bne	.LCB821
 905 005c 82E0     		b	.L81	@long jump
 906              	.LCB821:
 294:./data/data.c ****             {
 907              		.loc 1 294 0 is_stmt 0 discriminator 2
 908 005e 042B     		cmp	r3, #4
 909 0060 08D0     		beq	.L112
 910              	.L80:
 301:./data/data.c ****         {
 911              		.loc 1 301 0 is_stmt 1
 912 0062 E07E     		ldrb	r0, [r4, #27]
 913 0064 0138     		subs	r0, r0, #1
 914 0066 0528     		cmp	r0, #5
 915 0068 6FD8     		bhi	.L84
 916 006a FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 917              	.L86:
 918 006e 20       		.byte	(.L85-.L86)/2
 919 006f 4D       		.byte	(.L87-.L86)/2
 920 0070 6E       		.byte	(.L84-.L86)/2
 921 0071 06       		.byte	(.L88-.L86)/2
 922 0072 20       		.byte	(.L85-.L86)/2
 923 0073 4D       		.byte	(.L87-.L86)/2
 924              		.p2align 1
 925              	.L112:
 294:./data/data.c ****             {
 926              		.loc 1 294 0
 927 0074 029B     		ldr	r3, [sp, #8]
 928 0076 002B     		cmp	r3, #0
 929 0078 77D1     		bne	.L101
 930              	.L88:
 304:./data/data.c **** 			{
 931              		.loc 1 304 0
 932 007a 2C23     		movs	r3, #44
 933 007c FF33     		adds	r3, r3, #255
 934 007e 9F42     		cmp	r7, r3
 935 0080 15DC     		bgt	.L85
 306:./data/data.c **** 				qy = qy * 380 / 220;
 936              		.loc 1 306 0
 937 0082 BE20     		movs	r0, #190
 938 0084 4000     		lsls	r0, r0, #1
 939 0086 7843     		muls	r0, r7
 940 0088 DC21     		movs	r1, #220
 941 008a FFF7FEFF 		bl	__aeabi_idiv
 942              	.LVL58:
 307:./data/data.c **** 				qx = qy / 2;
 943              		.loc 1 307 0
 944 008e BE23     		movs	r3, #190
 945 0090 5B00     		lsls	r3, r3, #1
 946 0092 7343     		muls	r3, r6
 947 0094 DC21     		movs	r1, #220
 306:./data/data.c **** 				qy = qy * 380 / 220;
 948              		.loc 1 306 0
 949 0096 0700     		movs	r7, r0
 950              	.LVL59:
 307:./data/data.c **** 				qx = qy / 2;
 951              		.loc 1 307 0
 952 0098 1800     		movs	r0, r3
 953              	.LVL60:
 954 009a 0393     		str	r3, [sp, #12]
 955 009c FFF7FEFF 		bl	__aeabi_idiv
 956              	.LVL61:
 308:./data/data.c **** 			}
 957              		.loc 1 308 0
 958 00a0 DC21     		movs	r1, #220
 307:./data/data.c **** 				qx = qy / 2;
 959              		.loc 1 307 0
 960 00a2 0600     		movs	r6, r0
 961              	.LVL62:
 308:./data/data.c **** 			}
 962              		.loc 1 308 0
 963 00a4 4900     		lsls	r1, r1, #1
 964 00a6 0398     		ldr	r0, [sp, #12]
 965              	.LVL63:
 966 00a8 FFF7FEFF 		bl	__aeabi_idiv
 967              	.LVL64:
 968 00ac 0200     		movs	r2, r0
 969              	.LVL65:
 970              	.L85:
 312:./data/data.c ****                 {
 971              		.loc 1 312 0
 972 00ae 2388     		ldrh	r3, [r4]
 973 00b0 9A42     		cmp	r2, r3
 974 00b2 06DB     		blt	.L89
 312:./data/data.c ****                 {
 975              		.loc 1 312 0 is_stmt 0 discriminator 1
 976 00b4 A188     		ldrh	r1, [r4, #4]
 977 00b6 8A42     		cmp	r2, r1
 978 00b8 03DB     		blt	.L89
 314:./data/data.c ****                     data[i].bj_delay = pUsrCfg->delay;
 979              		.loc 1 314 0 is_stmt 1
 980 00ba 0323     		movs	r3, #3
 981 00bc A376     		strb	r3, [r4, #26]
 315:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delay;
 982              		.loc 1 315 0
 983 00be 2B79     		ldrb	r3, [r5, #4]
 984 00c0 0BE0     		b	.L108
 985              	.L89:
 317:./data/data.c ****                 {
 986              		.loc 1 317 0
 987 00c2 9F42     		cmp	r7, r3
 988 00c4 0CDA     		bge	.L90
 317:./data/data.c ****                 {
 989              		.loc 1 317 0 is_stmt 0 discriminator 1
 990 00c6 A188     		ldrh	r1, [r4, #4]
 991 00c8 8F42     		cmp	r7, r1
 992 00ca 09DA     		bge	.L90
 319:./data/data.c ****                     {
 993              		.loc 1 319 0 is_stmt 1
 994 00cc A37F     		ldrb	r3, [r4, #30]
 995 00ce 002B     		cmp	r3, #0
 996 00d0 02D1     		bne	.L91
 321:./data/data.c ****                     }else
 997              		.loc 1 321 0
 998 00d2 0133     		adds	r3, r3, #1
 999 00d4 A376     		strb	r3, [r4, #26]
 1000 00d6 01E0     		b	.L92
 1001              	.L91:
 323:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delay;
 1002              		.loc 1 323 0
 1003 00d8 013B     		subs	r3, r3, #1
 1004              	.L108:
 1005 00da A377     		strb	r3, [r4, #30]
 1006              	.L92:
 324:./data/data.c ****                 }else if( data[i].value < qy && data[i].value_tmp < qy )
 1007              		.loc 1 324 0
 1008 00dc 2B79     		ldrb	r3, [r5, #4]
 1009 00de 26E0     		b	.L109
 1010              	.L90:
 325:./data/data.c ****                 {
 1011              		.loc 1 325 0
 1012 00e0 9E42     		cmp	r6, r3
 1013 00e2 0DDD     		ble	.L93
 325:./data/data.c ****                 {
 1014              		.loc 1 325 0 is_stmt 0 discriminator 1
 1015 00e4 A388     		ldrh	r3, [r4, #4]
 1016 00e6 9E42     		cmp	r6, r3
 1017 00e8 0ADD     		ble	.L93
 327:./data/data.c ****                     {
 1018              		.loc 1 327 0 is_stmt 1
 1019 00ea E37F     		ldrb	r3, [r4, #31]
 1020 00ec 002B     		cmp	r3, #0
 1021 00ee 02D1     		bne	.L94
 329:./data/data.c ****                     }else
 1022              		.loc 1 329 0
 1023 00f0 0233     		adds	r3, r3, #2
 1024 00f2 A376     		strb	r3, [r4, #26]
 1025 00f4 01E0     		b	.L95
 1026              	.L94:
 332:./data/data.c ****                     }
 1027              		.loc 1 332 0
 1028 00f6 013B     		subs	r3, r3, #1
 1029 00f8 E377     		strb	r3, [r4, #31]
 1030              	.L95:
 334:./data/data.c ****                 }else
 1031              		.loc 1 334 0
 1032 00fa 2B79     		ldrb	r3, [r5, #4]
 1033 00fc A377     		strb	r3, [r4, #30]
 1034 00fe 24E0     		b	.L84
 1035              	.L93:
 337:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delay;
 1036              		.loc 1 337 0
 1037 0100 2B79     		ldrb	r3, [r5, #4]
 1038 0102 A377     		strb	r3, [r4, #30]
 338:./data/data.c ****                     data[i].state = 0;
 1039              		.loc 1 338 0
 1040 0104 2B79     		ldrb	r3, [r5, #4]
 1041 0106 1DE0     		b	.L110
 1042              	.LVL66:
 1043              	.L87:
 344:./data/data.c ****                 {
 1044              		.loc 1 344 0
 1045 0108 AB7A     		ldrb	r3, [r5, #10]
 1046 010a 697A     		ldrb	r1, [r5, #9]
 1047              	.LVL67:
 1048 010c 2088     		ldrh	r0, [r4]
 1049 010e 1B02     		lsls	r3, r3, #8
 1050 0110 0B43     		orrs	r3, r1
 1051 0112 9842     		cmp	r0, r3
 1052 0114 0DD9     		bls	.L96
 344:./data/data.c ****                 {
 1053              		.loc 1 344 0 is_stmt 0 discriminator 1
 1054 0116 A188     		ldrh	r1, [r4, #4]
 1055 0118 9942     		cmp	r1, r3
 1056 011a 0AD9     		bls	.L96
 346:./data/data.c ****                     {
 1057              		.loc 1 346 0 is_stmt 1
 1058 011c A37F     		ldrb	r3, [r4, #30]
 1059 011e 002B     		cmp	r3, #0
 1060 0120 02D1     		bne	.L97
 348:./data/data.c ****                     }else
 1061              		.loc 1 348 0
 1062 0122 0133     		adds	r3, r3, #1
 1063 0124 A376     		strb	r3, [r4, #26]
 1064 0126 01E0     		b	.L98
 1065              	.L97:
 350:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delayI;
 1066              		.loc 1 350 0
 1067 0128 013B     		subs	r3, r3, #1
 1068 012a A377     		strb	r3, [r4, #30]
 1069              	.L98:
 351:./data/data.c ****                 }else if( data[i].value < pUsrCfg->Abj/2 && data[i].value_tmp < pUsrCfg->Abj/2 )
 1070              		.loc 1 351 0
 1071 012c 6B79     		ldrb	r3, [r5, #5]
 1072              	.L109:
 1073 012e E377     		strb	r3, [r4, #31]
 1074              	.LVL68:
 1075 0130 0BE0     		b	.L84
 1076              	.LVL69:
 1077              	.L96:
 352:./data/data.c ****                 {
 1078              		.loc 1 352 0
 1079 0132 5B08     		lsrs	r3, r3, #1
 1080 0134 9842     		cmp	r0, r3
 1081 0136 08D2     		bcs	.L84
 352:./data/data.c ****                 {
 1082              		.loc 1 352 0 is_stmt 0 discriminator 1
 1083 0138 A188     		ldrh	r1, [r4, #4]
 1084 013a 9942     		cmp	r1, r3
 1085 013c 05D2     		bcs	.L84
 354:./data/data.c ****                     data[i].yj_delay = pUsrCfg->delayI;
 1086              		.loc 1 354 0 is_stmt 1
 1087 013e 6B79     		ldrb	r3, [r5, #5]
 1088 0140 A377     		strb	r3, [r4, #30]
 355:./data/data.c ****                     data[i].state = 0;
 1089              		.loc 1 355 0
 1090 0142 6B79     		ldrb	r3, [r5, #5]
 1091              	.L110:
 1092 0144 E377     		strb	r3, [r4, #31]
 1093              	.LVL70:
 356:./data/data.c ****                 }
 1094              		.loc 1 356 0
 1095 0146 0023     		movs	r3, #0
 1096 0148 A376     		strb	r3, [r4, #26]
 1097              	.L84:
 360:./data/data.c ****         {
 1098              		.loc 1 360 0
 1099 014a A37E     		ldrb	r3, [r4, #26]
 362:./data/data.c ****         }
 1100              		.loc 1 362 0
 1101 014c 591E     		subs	r1, r3, #1
 1102 014e 8B41     		sbcs	r3, r3, r1
 1103 0150 0199     		ldr	r1, [sp, #4]
 1104 0152 CB18     		adds	r3, r1, r3
 1105 0154 0193     		str	r3, [sp, #4]
 1106              	.LVL71:
 364:./data/data.c ****     }
 1107              		.loc 1 364 0
 1108 0156 2388     		ldrh	r3, [r4]
 1109              	.LVL72:
 1110 0158 A380     		strh	r3, [r4, #4]
 1111              	.L83:
 290:./data/data.c ****     {
 1112              		.loc 1 290 0 discriminator 2
 1113 015a 009B     		ldr	r3, [sp]
 1114 015c 2034     		adds	r4, r4, #32
 1115 015e 0133     		adds	r3, r3, #1
 1116 0160 0093     		str	r3, [sp]
 1117              	.LVL73:
 1118 0162 70E7     		b	.L79
 1119              	.LVL74:
 1120              	.L81:
 294:./data/data.c ****             {
 1121              		.loc 1 294 0
 1122 0164 029B     		ldr	r3, [sp, #8]
 1123 0166 002B     		cmp	r3, #0
 1124 0168 A1D0     		beq	.L85
 1125              	.L101:
 296:./data/data.c ****                 data[i].yj_delay = pUsrCfg->delay;
 1126              		.loc 1 296 0
 1127 016a 2B79     		ldrb	r3, [r5, #4]
 1128 016c A377     		strb	r3, [r4, #30]
 297:./data/data.c ****                 continue;
 1129              		.loc 1 297 0
 1130 016e 2B79     		ldrb	r3, [r5, #4]
 1131 0170 E377     		strb	r3, [r4, #31]
 298:./data/data.c ****             }
 1132              		.loc 1 298 0
 1133 0172 F2E7     		b	.L83
 1134              	.L111:
 367:./data/data.c ****     MKState.Zb  = data[1].state;
 1135              		.loc 1 367 0
 1136 0174 0323     		movs	r3, #3
 1137 0176 3020     		movs	r0, #48
 1138 0178 244A     		ldr	r2, .L113+16
 1139              	.LVL75:
 1140 017a 224D     		ldr	r5, .L113+8
 1141 017c 917E     		ldrb	r1, [r2, #26]
 1142              	.LVL76:
 1143 017e 8446     		mov	ip, r0
 1144 0180 1940     		ands	r1, r3
 1145 0182 0C01     		lsls	r4, r1, #4
 1146 0184 2978     		ldrb	r1, [r5]
 368:./data/data.c ****     MKState.Zc  = data[2].state;
 1147              		.loc 1 368 0
 1148 0186 3F26     		movs	r6, #63
 1149              	.LVL77:
 367:./data/data.c ****     MKState.Zb  = data[1].state;
 1150              		.loc 1 367 0
 1151 0188 8143     		bics	r1, r0
 368:./data/data.c ****     MKState.Zc  = data[2].state;
 1152              		.loc 1 368 0
 1153 018a 1000     		movs	r0, r2
 1154 018c 3A30     		adds	r0, r0, #58
 1155 018e 0078     		ldrb	r0, [r0]
 1156 0190 2143     		orrs	r1, r4
 1157 0192 8001     		lsls	r0, r0, #6
 1158 0194 3140     		ands	r1, r6
 1159 0196 0143     		orrs	r1, r0
 1160 0198 2970     		strb	r1, [r5]
 369:./data/data.c ****     MKState.Ba  = data[3].state;
 1161              		.loc 1 369 0
 1162 019a 1100     		movs	r1, r2
 1163 019c 5A31     		adds	r1, r1, #90
 1164 019e 0C78     		ldrb	r4, [r1]
 370:./data/data.c ****     MKState.Bb  = data[4].state;
 1165              		.loc 1 370 0
 1166 01a0 1100     		movs	r1, r2
 369:./data/data.c ****     MKState.Ba  = data[3].state;
 1167              		.loc 1 369 0
 1168 01a2 1C40     		ands	r4, r3
 1169 01a4 2700     		movs	r7, r4
 1170              	.LVL78:
 1171 01a6 6C78     		ldrb	r4, [r5, #1]
 370:./data/data.c ****     MKState.Bb  = data[4].state;
 1172              		.loc 1 370 0
 1173 01a8 7A31     		adds	r1, r1, #122
 369:./data/data.c ****     MKState.Ba  = data[3].state;
 1174              		.loc 1 369 0
 1175 01aa 9C43     		bics	r4, r3
 370:./data/data.c ****     MKState.Bb  = data[4].state;
 1176              		.loc 1 370 0
 1177 01ac 3C43     		orrs	r4, r7
 1178 01ae 0C27     		movs	r7, #12
 1179 01b0 0978     		ldrb	r1, [r1]
 1180 01b2 BC43     		bics	r4, r7
 1181 01b4 1940     		ands	r1, r3
 1182 01b6 8900     		lsls	r1, r1, #2
 371:./data/data.c ****     MKState.Bc  = data[5].state;
 1183              		.loc 1 371 0
 1184 01b8 1000     		movs	r0, r2
 1185 01ba 2143     		orrs	r1, r4
 1186 01bc 6446     		mov	r4, ip
 1187 01be 9A30     		adds	r0, r0, #154
 1188 01c0 A143     		bics	r1, r4
 372:./data/data.c ****     MKState.t21 = data[6].state;
 1189              		.loc 1 372 0
 1190 01c2 1400     		movs	r4, r2
 371:./data/data.c ****     MKState.Bc  = data[5].state;
 1191              		.loc 1 371 0
 1192 01c4 0078     		ldrb	r0, [r0]
 372:./data/data.c ****     MKState.t21 = data[6].state;
 1193              		.loc 1 372 0
 1194 01c6 BA34     		adds	r4, r4, #186
 371:./data/data.c ****     MKState.Bc  = data[5].state;
 1195              		.loc 1 371 0
 1196 01c8 1840     		ands	r0, r3
 1197 01ca 0001     		lsls	r0, r0, #4
 372:./data/data.c ****     MKState.t21 = data[6].state;
 1198              		.loc 1 372 0
 1199 01cc 0843     		orrs	r0, r1
 373:./data/data.c ****     MKState.t22 = data[7].state;
 1200              		.loc 1 373 0
 1201 01ce 1100     		movs	r1, r2
 372:./data/data.c ****     MKState.t21 = data[6].state;
 1202              		.loc 1 372 0
 1203 01d0 2478     		ldrb	r4, [r4]
 1204 01d2 0640     		ands	r6, r0
 1205 01d4 A401     		lsls	r4, r4, #6
 1206 01d6 2643     		orrs	r6, r4
 1207 01d8 6E70     		strb	r6, [r5, #1]
 373:./data/data.c ****     MKState.t22 = data[7].state;
 1208              		.loc 1 373 0
 1209 01da DA31     		adds	r1, r1, #218
 374:./data/data.c ****     return ret;
 1210              		.loc 1 374 0
 1211 01dc FA32     		adds	r2, r2, #250
 1212 01de 1278     		ldrb	r2, [r2]
 373:./data/data.c ****     MKState.t22 = data[7].state;
 1213              		.loc 1 373 0
 1214 01e0 0978     		ldrb	r1, [r1]
 1215 01e2 A878     		ldrb	r0, [r5, #2]
 1216 01e4 1940     		ands	r1, r3
 1217 01e6 9843     		bics	r0, r3
 374:./data/data.c ****     return ret;
 1218              		.loc 1 374 0
 1219 01e8 1340     		ands	r3, r2
 1220 01ea 9A00     		lsls	r2, r3, #2
 1221 01ec 0300     		movs	r3, r0
 1222 01ee 0B43     		orrs	r3, r1
 1223 01f0 BB43     		bics	r3, r7
 376:./data/data.c **** 
 1224              		.loc 1 376 0
 1225 01f2 0198     		ldr	r0, [sp, #4]
 374:./data/data.c ****     return ret;
 1226              		.loc 1 374 0
 1227 01f4 1343     		orrs	r3, r2
 1228 01f6 AB70     		strb	r3, [r5, #2]
 376:./data/data.c **** 
 1229              		.loc 1 376 0
 1230 01f8 05B0     		add	sp, sp, #20
 1231              	.LVL79:
 1232              		@ sp needed
 1233 01fa F0BD     		pop	{r4, r5, r6, r7, pc}
 1234              	.L114:
 1235              		.align	2
 1236              	.L113:
 1237 01fc 00000000 		.word	pUsrCfg
 1238 0200 00000000 		.word	BD_disable
 1239 0204 00010000 		.word	.LANCHOR1
 1240 0208 10FCFFFF 		.word	-1008
 1241 020c 00000000 		.word	.LANCHOR0
 1242              		.cfi_endproc
 1243              	.LFE64:
 1245              		.section	.text.Data_Trans,"ax",%progbits
 1246              		.align	1
 1247              		.global	Data_Trans
 1248              		.code	16
 1249              		.thumb_func
 1251              	Data_Trans:
 1252              	.LFB65:
 386:./data/data.c ****     int i;
 1253              		.loc 1 386 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 8
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1258              	.LCFI6:
 1259              		.cfi_def_cfa_offset 32
 1260              		.cfi_offset 0, -32
 1261              		.cfi_offset 1, -28
 1262              		.cfi_offset 2, -24
 1263              		.cfi_offset 4, -20
 1264              		.cfi_offset 5, -16
 1265              		.cfi_offset 6, -12
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 389:./data/data.c **** 	case eCGQvaw2:
 1268              		.loc 1 389 0
 1269 0002 7C4B     		ldr	r3, .L203
 1270 0004 1A68     		ldr	r2, [r3]
 1271 0006 D278     		ldrb	r2, [r2, #3]
 1272 0008 0193     		str	r3, [sp, #4]
 1273 000a 112A     		cmp	r2, #17
 1274 000c 49D8     		bhi	.L117
 1275 000e 0123     		movs	r3, #1
 1276 0010 9340     		lsls	r3, r3, r2
 1277 0012 794A     		ldr	r2, .L203+4
 1278 0014 1342     		tst	r3, r2
 1279 0016 04D1     		bne	.L118
 1280 0018 C622     		movs	r2, #198
 1281 001a 9200     		lsls	r2, r2, #2
 1282 001c 1342     		tst	r3, r2
 1283 001e 40D0     		beq	.L117
 1284 0020 1EE0     		b	.L120
 1285              	.L118:
 393:./data/data.c **** 			if ((MKState.trans & 2) == 0) {
 1286              		.loc 1 393 0
 1287 0022 0320     		movs	r0, #3
 1288 0024 754C     		ldr	r4, .L203+8
 1289 0026 0225     		movs	r5, #2
 1290 0028 6378     		ldrb	r3, [r4, #1]
 1291 002a A288     		ldrh	r2, [r4, #4]
 1292 002c 8343     		bics	r3, r0
 1293 002e FC2B     		cmp	r3, #252
 1294 0030 0BD1     		bne	.L121
 394:./data/data.c **** 				if (GZ_Trans(3, TCMDDATA_ZDGD, DATA_GZ_ZDGD))
 1295              		.loc 1 394 0
 1296 0032 2A42     		tst	r2, r5
 1297 0034 14D1     		bne	.L120
 395:./data/data.c **** 					SBI(MKState.trans, 1);
 1298              		.loc 1 395 0
 1299 0036 0C22     		movs	r2, #12
 1300 0038 A621     		movs	r1, #166
 1301 003a FFF7FEFF 		bl	GZ_Trans
 1302              	.LVL80:
 1303 003e 0028     		cmp	r0, #0
 1304 0040 0ED0     		beq	.L120
 396:./data/data.c **** 			}
 1305              		.loc 1 396 0
 1306 0042 A388     		ldrh	r3, [r4, #4]
 1307 0044 1D43     		orrs	r5, r3
 1308 0046 A580     		strh	r5, [r4, #4]
 1309 0048 0AE0     		b	.L120
 1310              	.L121:
 399:./data/data.c **** 				if (GZ_Trans(3, TCMDDATA_NOZDGD, DATA_GZ_ZDGD))
 1311              		.loc 1 399 0
 1312 004a 2A42     		tst	r2, r5
 1313 004c 08D0     		beq	.L120
 400:./data/data.c **** 					CBI(MKState.trans, 1);
 1314              		.loc 1 400 0
 1315 004e 0C22     		movs	r2, #12
 1316 0050 A721     		movs	r1, #167
 1317 0052 FFF7FEFF 		bl	GZ_Trans
 1318              	.LVL81:
 1319 0056 0028     		cmp	r0, #0
 1320 0058 02D0     		beq	.L120
 401:./data/data.c **** 			}
 1321              		.loc 1 401 0
 1322 005a A388     		ldrh	r3, [r4, #4]
 1323 005c AB43     		bics	r3, r5
 1324 005e A380     		strh	r3, [r4, #4]
 1325              	.L120:
 408:./data/data.c **** 			if ((MKState.trans & 1) == 0) {
 1326              		.loc 1 408 0
 1327 0060 FC22     		movs	r2, #252
 1328 0062 664C     		ldr	r4, .L203+8
 1329 0064 9200     		lsls	r2, r2, #2
 1330 0066 2388     		ldrh	r3, [r4]
 1331 0068 0125     		movs	r5, #1
 1332 006a 1340     		ands	r3, r2
 1333 006c A088     		ldrh	r0, [r4, #4]
 1334 006e 9342     		cmp	r3, r2
 1335 0070 0BD1     		bne	.L123
 409:./data/data.c **** 				if (GZ_Trans(0, TCMDDATA_ZDGD, DATA_GZ_ZDGD))
 1336              		.loc 1 409 0
 1337 0072 2840     		ands	r0, r5
 1338 0074 15D1     		bne	.L117
 410:./data/data.c **** 					SBI(MKState.trans, 0);
 1339              		.loc 1 410 0
 1340 0076 0C22     		movs	r2, #12
 1341 0078 A621     		movs	r1, #166
 1342 007a FFF7FEFF 		bl	GZ_Trans
 1343              	.LVL82:
 1344 007e 0028     		cmp	r0, #0
 1345 0080 0FD0     		beq	.L117
 411:./data/data.c **** 			}
 1346              		.loc 1 411 0
 1347 0082 A388     		ldrh	r3, [r4, #4]
 1348 0084 1D43     		orrs	r5, r3
 1349 0086 A580     		strh	r5, [r4, #4]
 1350 0088 0BE0     		b	.L117
 1351              	.L123:
 414:./data/data.c **** 				if (GZ_Trans(0, TCMDDATA_NOZDGD, DATA_GZ_ZDGD))
 1352              		.loc 1 414 0
 1353 008a 2842     		tst	r0, r5
 1354 008c 09D0     		beq	.L117
 415:./data/data.c **** 					CBI(MKState.trans, 0);
 1355              		.loc 1 415 0
 1356 008e 0C22     		movs	r2, #12
 1357 0090 A721     		movs	r1, #167
 1358 0092 0020     		movs	r0, #0
 1359 0094 FFF7FEFF 		bl	GZ_Trans
 1360              	.LVL83:
 1361 0098 0028     		cmp	r0, #0
 1362 009a 02D0     		beq	.L117
 416:./data/data.c **** 			}
 1363              		.loc 1 416 0
 1364 009c A388     		ldrh	r3, [r4, #4]
 1365 009e AB43     		bics	r3, r5
 1366 00a0 A380     		strh	r3, [r4, #4]
 1367              	.L117:
 386:./data/data.c ****     int i;
 1368              		.loc 1 386 0 discriminator 1
 1369 00a2 0025     		movs	r5, #0
 1370              	.LBB18:
 427:./data/data.c **** 			BJtype = DATA_GZ_GL;
 1371              		.loc 1 427 0 discriminator 1
 1372 00a4 0427     		movs	r7, #4
 1373 00a6 564C     		ldr	r4, .L203+12
 1374 00a8 1A34     		adds	r4, r4, #26
 1375              	.LVL84:
 1376              	.L144:
 427:./data/data.c **** 			BJtype = DATA_GZ_GL;
 1377              		.loc 1 427 0 is_stmt 0
 1378 00aa 6278     		ldrb	r2, [r4, #1]
 424:./data/data.c **** 		uint8 cmd;
 1379              		.loc 1 424 0 is_stmt 1
 1380 00ac 1026     		movs	r6, #16
 427:./data/data.c **** 			BJtype = DATA_GZ_GL;
 1381              		.loc 1 427 0
 1382 00ae BA43     		bics	r2, r7
 428:./data/data.c **** 
 1383              		.loc 1 428 0
 1384 00b0 023A     		subs	r2, r2, #2
 1385 00b2 531E     		subs	r3, r2, #1
 1386 00b4 9A41     		sbcs	r2, r2, r3
 1387 00b6 0F23     		movs	r3, #15
 1388 00b8 9A1A     		subs	r2, r3, r2
 1389              	.LVL85:
 430:./data/data.c **** 		case eCGQvd:
 1390              		.loc 1 430 0
 1391 00ba 019B     		ldr	r3, [sp, #4]
 1392 00bc 1B68     		ldr	r3, [r3]
 1393 00be 0093     		str	r3, [sp]
 1394 00c0 DB78     		ldrb	r3, [r3, #3]
 1395 00c2 0E2B     		cmp	r3, #14
 1396 00c4 05D8     		bhi	.L125
 1397 00c6 0121     		movs	r1, #1
 1398 00c8 9940     		lsls	r1, r1, r3
 1399 00ca 4E48     		ldr	r0, .L203+16
 1400 00cc 0142     		tst	r1, r0
 1401 00ce 00D0     		beq	.L125
 437:./data/data.c **** 			break;
 1402              		.loc 1 437 0
 1403 00d0 043E     		subs	r6, r6, #4
 1404              	.L125:
 1405              	.LVL86:
 441:./data/data.c **** 		case 0:
 1406              		.loc 1 441 0
 1407 00d2 2078     		ldrb	r0, [r4]
 1408 00d4 0328     		cmp	r0, #3
 1409 00d6 00D9     		bls	.LCB1337
 1410 00d8 85E0     		b	.L126	@long jump
 1411              	.LCB1337:
 1412 00da FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 1413              	.L128:
 1414 00de 02       		.byte	(.L127-.L128)/2
 1415 00df 32       		.byte	(.L129-.L128)/2
 1416 00e0 41       		.byte	(.L130-.L128)/2
 1417 00e1 4E       		.byte	(.L131-.L128)/2
 1418              		.p2align 1
 1419              	.L127:
 443:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_NOGZ, BJtype))
 1420              		.loc 1 443 0
 1421 00e2 0221     		movs	r1, #2
 1422 00e4 A378     		ldrb	r3, [r4, #2]
 1423 00e6 0B42     		tst	r3, r1
 1424 00e8 0AD0     		beq	.L133
 444:./data/data.c **** 					CBI(data[i].trans, TRANS_GY);
 1425              		.loc 1 444 0
 1426 00ea D2B2     		uxtb	r2, r2
 1427              	.LVL87:
 1428 00ec E8B2     		uxtb	r0, r5
 1429 00ee A031     		adds	r1, r1, #160
 1430 00f0 FFF7FEFF 		bl	GZ_Trans
 1431              	.LVL88:
 1432 00f4 0028     		cmp	r0, #0
 1433 00f6 03D0     		beq	.L133
 445:./data/data.c **** 			}
 1434              		.loc 1 445 0
 1435 00f8 0222     		movs	r2, #2
 1436 00fa A378     		ldrb	r3, [r4, #2]
 1437 00fc 9343     		bics	r3, r2
 1438 00fe A370     		strb	r3, [r4, #2]
 1439              	.L133:
 447:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_NOGZ, DATA_GZ_QY))
 1440              		.loc 1 447 0
 1441 0100 A378     		ldrb	r3, [r4, #2]
 1442 0102 3B42     		tst	r3, r7
 1443 0104 09D0     		beq	.L136
 448:./data/data.c **** 					CBI(data[i].trans, TRANS_QY);
 1444              		.loc 1 448 0
 1445 0106 E8B2     		uxtb	r0, r5
 1446 0108 0D22     		movs	r2, #13
 1447 010a A221     		movs	r1, #162
 1448 010c FFF7FEFF 		bl	GZ_Trans
 1449              	.LVL89:
 1450 0110 0028     		cmp	r0, #0
 1451 0112 02D0     		beq	.L136
 449:./data/data.c **** 			}
 1452              		.loc 1 449 0
 1453 0114 A378     		ldrb	r3, [r4, #2]
 1454 0116 BB43     		bics	r3, r7
 1455 0118 A370     		strb	r3, [r4, #2]
 1456              	.L136:
 451:./data/data.c **** 				if (i >= 6)
 1457              		.loc 1 451 0
 1458 011a A378     		ldrb	r3, [r4, #2]
 1459 011c 1B07     		lsls	r3, r3, #28
 1460 011e 62D5     		bpl	.L126
 455:./data/data.c **** 							TCMDDATA_NOZDGD : TCMDDATA_NOGZ;
 1461              		.loc 1 455 0
 1462 0120 A721     		movs	r1, #167
 452:./data/data.c **** 					cmd = TCMDDATA_NOZDGD;
 1463              		.loc 1 452 0
 1464 0122 052D     		cmp	r5, #5
 1465 0124 03DC     		bgt	.L139
 455:./data/data.c **** 							TCMDDATA_NOZDGD : TCMDDATA_NOGZ;
 1466              		.loc 1 455 0
 1467 0126 0539     		subs	r1, r1, #5
 1468 0128 0C2E     		cmp	r6, #12
 1469 012a 00D1     		bne	.L139
 1470 012c 0531     		adds	r1, r1, #5
 1471              	.L139:
 1472              	.LVL90:
 458:./data/data.c **** 					CBI(data[i].trans, TRANS_DD);
 1473              		.loc 1 458 0
 1474 012e F2B2     		uxtb	r2, r6
 1475 0130 E8B2     		uxtb	r0, r5
 1476 0132 FFF7FEFF 		bl	GZ_Trans
 1477              	.LVL91:
 1478 0136 0028     		cmp	r0, #0
 1479 0138 55D0     		beq	.L126
 459:./data/data.c **** 				}
 1480              		.loc 1 459 0
 1481 013a 0822     		movs	r2, #8
 1482 013c A378     		ldrb	r3, [r4, #2]
 1483 013e 9343     		bics	r3, r2
 1484 0140 50E0     		b	.L202
 1485              	.LVL92:
 1486              	.L129:
 464:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_GZ, BJtype)) {
 1487              		.loc 1 464 0
 1488 0142 0226     		movs	r6, #2
 1489              	.LVL93:
 1490 0144 A378     		ldrb	r3, [r4, #2]
 1491 0146 3342     		tst	r3, r6
 1492 0148 4DD1     		bne	.L126
 465:./data/data.c **** 					SBI(data[i].trans, TRANS_GY);
 1493              		.loc 1 465 0
 1494 014a D2B2     		uxtb	r2, r2
 1495              	.LVL94:
 1496 014c E8B2     		uxtb	r0, r5
 1497 014e A121     		movs	r1, #161
 1498 0150 FFF7FEFF 		bl	GZ_Trans
 1499              	.LVL95:
 1500 0154 0028     		cmp	r0, #0
 1501 0156 46D0     		beq	.L126
 466:./data/data.c **** 				}
 1502              		.loc 1 466 0
 1503 0158 A378     		ldrb	r3, [r4, #2]
 1504 015a 1E43     		orrs	r6, r3
 1505 015c A670     		strb	r6, [r4, #2]
 1506 015e 42E0     		b	.L126
 1507              	.LVL96:
 1508              	.L130:
 471:./data/data.c **** 				if (GZ_Trans(i, TCMDDATA_GZ, DATA_GZ_QY)) {
 1509              		.loc 1 471 0
 1510 0160 A378     		ldrb	r3, [r4, #2]
 1511 0162 3B42     		tst	r3, r7
 1512 0164 3FD1     		bne	.L126
 472:./data/data.c **** 					SBI(data[i].trans, TRANS_QY);
 1513              		.loc 1 472 0
 1514 0166 E8B2     		uxtb	r0, r5
 1515 0168 0D22     		movs	r2, #13
 1516              	.LVL97:
 1517 016a A121     		movs	r1, #161
 1518 016c FFF7FEFF 		bl	GZ_Trans
 1519              	.LVL98:
 1520 0170 0028     		cmp	r0, #0
 1521 0172 38D0     		beq	.L126
 473:./data/data.c **** 				}
 1522              		.loc 1 473 0
 1523 0174 A378     		ldrb	r3, [r4, #2]
 1524 0176 3B43     		orrs	r3, r7
 1525 0178 34E0     		b	.L202
 1526              	.LVL99:
 1527              	.L131:
 478:./data/data.c **** 			{
 1528              		.loc 1 478 0
 1529 017a 022D     		cmp	r5, #2
 1530 017c 0FDC     		bgt	.L141
 1531 017e 112B     		cmp	r3, #17
 1532 0180 1DD8     		bhi	.L142
 1533 0182 0122     		movs	r2, #1
 1534              	.LVL100:
 1535 0184 9A40     		lsls	r2, r2, r3
 1536 0186 1300     		movs	r3, r2
 1537 0188 1F4A     		ldr	r2, .L203+20
 1538 018a 1342     		tst	r3, r2
 1539 018c 17D0     		beq	.L142
 489:./data/data.c **** 						goto Data_Trans12;
 1540              		.loc 1 489 0
 1541 018e FC22     		movs	r2, #252
 1542 0190 1A4B     		ldr	r3, .L203+8
 1543 0192 9200     		lsls	r2, r2, #2
 1544 0194 1B88     		ldrh	r3, [r3]
 1545 0196 1340     		ands	r3, r2
 1546 0198 9342     		cmp	r3, r2
 1547 019a 10D1     		bne	.L142
 1548 019c 23E0     		b	.L126
 1549              	.LVL101:
 1550              	.L141:
 494:./data/data.c **** 			{
 1551              		.loc 1 494 0
 1552 019e 052D     		cmp	r5, #5
 1553 01a0 0DDC     		bgt	.L142
 1554 01a2 112B     		cmp	r3, #17
 1555 01a4 0BD8     		bhi	.L142
 1556 01a6 0122     		movs	r2, #1
 1557              	.LVL102:
 1558 01a8 9A40     		lsls	r2, r2, r3
 1559 01aa 1300     		movs	r3, r2
 1560 01ac 124A     		ldr	r2, .L203+4
 1561 01ae 1342     		tst	r3, r2
 1562 01b0 05D0     		beq	.L142
 501:./data/data.c **** 						goto Data_Trans12;
 1563              		.loc 1 501 0
 1564 01b2 0322     		movs	r2, #3
 1565 01b4 114B     		ldr	r3, .L203+8
 1566 01b6 5B78     		ldrb	r3, [r3, #1]
 1567 01b8 9343     		bics	r3, r2
 1568 01ba FC2B     		cmp	r3, #252
 1569 01bc 13D0     		beq	.L126
 1570              	.L142:
 508:./data/data.c **** 				if (i >= 6)
 1571              		.loc 1 508 0
 1572 01be A378     		ldrb	r3, [r4, #2]
 1573 01c0 1B07     		lsls	r3, r3, #28
 1574 01c2 10D4     		bmi	.L126
 512:./data/data.c **** 				if (GZ_Trans(i, cmd, QXtype)) {
 1575              		.loc 1 512 0
 1576 01c4 A621     		movs	r1, #166
 509:./data/data.c **** 					cmd = TCMDDATA_ZDGD;
 1577              		.loc 1 509 0
 1578 01c6 052D     		cmp	r5, #5
 1579 01c8 03DC     		bgt	.L143
 512:./data/data.c **** 				if (GZ_Trans(i, cmd, QXtype)) {
 1580              		.loc 1 512 0
 1581 01ca 0539     		subs	r1, r1, #5
 1582 01cc 0C2E     		cmp	r6, #12
 1583 01ce 00D1     		bne	.L143
 1584 01d0 0531     		adds	r1, r1, #5
 1585              	.L143:
 1586              	.LVL103:
 513:./data/data.c **** 					SBI(data[i].trans, TRANS_DD);
 1587              		.loc 1 513 0
 1588 01d2 F2B2     		uxtb	r2, r6
 1589 01d4 E8B2     		uxtb	r0, r5
 1590 01d6 FFF7FEFF 		bl	GZ_Trans
 1591              	.LVL104:
 1592 01da 0028     		cmp	r0, #0
 1593 01dc 03D0     		beq	.L126
 514:./data/data.c **** 				}
 1594              		.loc 1 514 0
 1595 01de 0822     		movs	r2, #8
 1596 01e0 A378     		ldrb	r3, [r4, #2]
 1597 01e2 1343     		orrs	r3, r2
 1598              	.L202:
 1599 01e4 A370     		strb	r3, [r4, #2]
 1600              	.LVL105:
 1601              	.L126:
 1602              	.LBE18:
 422:./data/data.c **** 		int BJtype = DATA_GZ_GY;
 1603              		.loc 1 422 0 discriminator 2
 1604 01e6 0135     		adds	r5, r5, #1
 1605              	.LVL106:
 1606 01e8 2034     		adds	r4, r4, #32
 1607 01ea 082D     		cmp	r5, #8
 1608 01ec 00D0     		beq	.LCB1548
 1609 01ee 5CE7     		b	.L144	@long jump
 1610              	.LCB1548:
 521:./data/data.c **** 
 1611              		.loc 1 521 0
 1612              		@ sp needed
 1613              	.LVL107:
 1614 01f0 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1615              	.L204:
 1616 01f2 C046     		.align	2
 1617              	.L203:
 1618 01f4 00000000 		.word	pUsrCfg
 1619 01f8 02200200 		.word	139266
 1620 01fc 00010000 		.word	.LANCHOR1
 1621 0200 00000000 		.word	.LANCHOR0
 1622 0204 E4500000 		.word	20708
 1623 0208 1A230200 		.word	140058
 1624              		.cfi_endproc
 1625              	.LFE65:
 1627              		.section	.text.GetObjName,"ax",%progbits
 1628              		.align	1
 1629              		.global	GetObjName
 1630              		.code	16
 1631              		.thumb_func
 1633              	GetObjName:
 1634              	.LFB66:
 542:./data/data.c ****     int i;
 1635              		.loc 1 542 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              	.LVL108:
 544:./data/data.c ****     {
 1640              		.loc 1 544 0
 1641 0000 0023     		movs	r3, #0
 542:./data/data.c ****     int i;
 1642              		.loc 1 542 0
 1643 0002 10B5     		push	{r4, lr}
 1644              	.LCFI7:
 1645              		.cfi_def_cfa_offset 8
 1646              		.cfi_offset 4, -8
 1647              		.cfi_offset 14, -4
 546:./data/data.c ****             return OBJname[i].name;
 1648              		.loc 1 546 0
 1649 0004 0649     		ldr	r1, .L210
 1650              	.LVL109:
 1651              	.L208:
 1652 0006 DA00     		lsls	r2, r3, #3
 1653 0008 545C     		ldrb	r4, [r2, r1]
 1654 000a 8442     		cmp	r4, r0
 1655 000c 02D1     		bne	.L206
 547:./data/data.c ****     }
 1656              		.loc 1 547 0
 1657 000e 8A18     		adds	r2, r1, r2
 1658 0010 5068     		ldr	r0, [r2, #4]
 1659              	.LVL110:
 1660 0012 03E0     		b	.L207
 1661              	.LVL111:
 1662              	.L206:
 544:./data/data.c ****     {
 1663              		.loc 1 544 0 discriminator 2
 1664 0014 0133     		adds	r3, r3, #1
 1665              	.LVL112:
 1666 0016 0F2B     		cmp	r3, #15
 1667 0018 F5D1     		bne	.L208
 549:./data/data.c **** }
 1668              		.loc 1 549 0
 1669 001a 0248     		ldr	r0, .L210+4
 1670              	.LVL113:
 1671              	.L207:
 550:./data/data.c **** 
 1672              		.loc 1 550 0
 1673              		@ sp needed
 1674 001c 10BD     		pop	{r4, pc}
 1675              	.L211:
 1676 001e C046     		.align	2
 1677              	.L210:
 1678 0020 00000000 		.word	.LANCHOR2
 1679 0024 31000000 		.word	.LC50
 1680              		.cfi_endproc
 1681              	.LFE66:
 1683              		.global	cmd_data
 1684              		.global	OBJname
 1685              		.comm	wValue,4,4
 1686              		.comm	BD_disable,1,1
 1687              		.global	MKState
 1688              		.global	data
 1689              		.section	.rodata
 1690              		.align	2
 1691              		.set	.LANCHOR2,. + 0
 1694              	OBJname:
 1695 0000 01       		.byte	1
 1696 0001 000000   		.space	3
 1697 0004 33000000 		.word	.LC53
 1698 0008 02       		.byte	2
 1699 0009 000000   		.space	3
 1700 000c 3B000000 		.word	.LC54
 1701 0010 03       		.byte	3
 1702 0011 000000   		.space	3
 1703 0014 43000000 		.word	.LC55
 1704 0018 04       		.byte	4
 1705 0019 000000   		.space	3
 1706 001c 4A000000 		.word	.LC56
 1707 0020 05       		.byte	5
 1708 0021 000000   		.space	3
 1709 0024 52000000 		.word	.LC57
 1710 0028 06       		.byte	6
 1711 0029 000000   		.space	3
 1712 002c 5A000000 		.word	.LC58
 1713 0030 07       		.byte	7
 1714 0031 000000   		.space	3
 1715 0034 5F000000 		.word	.LC59
 1716 0038 08       		.byte	8
 1717 0039 000000   		.space	3
 1718 003c 66000000 		.word	.LC60
 1719 0040 09       		.byte	9
 1720 0041 000000   		.space	3
 1721 0044 6D000000 		.word	.LC61
 1722 0048 0B       		.byte	11
 1723 0049 000000   		.space	3
 1724 004c 74000000 		.word	.LC62
 1725 0050 0C       		.byte	12
 1726 0051 000000   		.space	3
 1727 0054 7D000000 		.word	.LC63
 1728 0058 0D       		.byte	13
 1729 0059 000000   		.space	3
 1730 005c 84000000 		.word	.LC64
 1731 0060 0E       		.byte	14
 1732 0061 000000   		.space	3
 1733 0064 8C000000 		.word	.LC65
 1734 0068 0F       		.byte	15
 1735 0069 000000   		.space	3
 1736 006c 93000000 		.word	.LC66
 1737 0070 11       		.byte	17
 1738 0071 000000   		.space	3
 1739 0074 98000000 		.word	.LC67
 1742              	help_data:
 1743 0078 64617461 		.ascii	"data\000"
 1743      00
 1746              	name_data:
 1747 007d 64617461 		.ascii	"data\000"
 1747      00
 1748              		.section	.shell,"aw",%progbits
 1749              		.align	2
 1752              	cmd_data:
 1753 0000 7D000000 		.word	name_data
 1754 0004 00000000 		.word	data_cmd
 1755 0008 78000000 		.word	help_data
 1756              		.section	.rodata.str1.1,"aMS",%progbits,1
 1757              	.LC3:
 1758 0000 54206E09 		.ascii	"T n\011value\011data\011state\012\000"
 1758      76616C75 
 1758      65096461 
 1758      74610973 
 1758      74617465 
 1759              	.LC6:
 1760 0016 4900     		.ascii	"I\000"
 1761              	.LC8:
 1762 0018 5700     		.ascii	"W\000"
 1763              	.LC10:
 1764 001a 5600     		.ascii	"V\000"
 1765              	.LC12:
 1766 001c 575600   		.ascii	"WV\000"
 1767              	.LC14:
 1768 001f 564400   		.ascii	"VD\000"
 1769              	.LC16:
 1770 0022 2025642E 		.ascii	" %d.\011%d\011%d\011%d\012\000"
 1770      09256409 
 1770      25640925 
 1770      640A00
 1771              	.LC50:
 1772 0031 2000     		.ascii	" \000"
 1773              	.LC53:
 1774 0033 5A585641 		.ascii	"ZXVA-S2\000"
 1774      2D533200 
 1775              	.LC54:
 1776 003b 5A585641 		.ascii	"ZXVA-D2\000"
 1776      2D443200 
 1777              	.LC55:
 1778 0043 5A585649 		.ascii	"ZXVI-S\000"
 1778      2D5300
 1779              	.LC56:
 1780 004a 5A585641 		.ascii	"ZXVA-S1\000"
 1780      2D533100 
 1781              	.LC57:
 1782 0052 5A585641 		.ascii	"ZXVA-D6\000"
 1782      2D443600 
 1783              	.LC58:
 1784 005a 5A585644 		.ascii	"ZXVD\000"
 1784      00
 1785              	.LC59:
 1786 005f 5A585649 		.ascii	"ZXVI-D\000"
 1786      2D4400
 1787              	.LC60:
 1788 0066 5A585649 		.ascii	"ZXVI-W\000"
 1788      2D5700
 1789              	.LC61:
 1790 006d 5A585641 		.ascii	"ZXVA-W\000"
 1790      2D5700
 1791              	.LC62:
 1792 0074 5A585641 		.ascii	"ZXVA-S2F\000"
 1792      2D533246 
 1792      00
 1793              	.LC63:
 1794 007d 5A585641 		.ascii	"ZXVA-D\000"
 1794      2D4400
 1795              	.LC64:
 1796 0084 5A585641 		.ascii	"ZXVA-W2\000"
 1796      2D573200 
 1797              	.LC65:
 1798 008c 5A585644 		.ascii	"ZXVD-I\000"
 1798      2D4900
 1799              	.LC66:
 1800 0093 5A584C57 		.ascii	"ZXLW\000"
 1800      00
 1801              	.LC67:
 1802 0098 5A585649 		.ascii	"ZXVI-S2\000"
 1802      2D533200 
 1803              		.section	.noinit,"aw",%progbits
 1804              		.align	2
 1805              		.set	.LANCHOR0,. + 0
 1806              		.set	.LANCHOR1,. + 256
 1809              	data:
 1810 0000 00000000 		.space	256
 1810      00000000 
 1810      00000000 
 1810      00000000 
 1810      00000000 
 1813              	MKState:
 1814 0100 00000000 		.space	8
 1814      00000000 
 1815              		.text
 1816              	.Letext0:
 1817              		.file 2 "d:\\wingcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 1818              		.file 3 "d:\\wingcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 1819              		.file 4 "./bsp/mytype.h"
 1820              		.file 5 "./data/data.h"
 1821              		.file 6 "./data/user.h"
 1822              		.file 7 "../mylib_t/data_def.h"
 1823              		.file 8 "../mylib_t/pcommand.h"
 1824              		.file 9 "./bsp/system_NUC131.h"
 1825              		.file 10 "./app/app_cfg.h"
 1826              		.file 11 "../mylib_t/MicroOS.h"
 1827              		.file 12 "./drive/nuc_adc.h"
 1828              		.file 13 "../mylib_t/shellSort.h"
 1829              		.file 14 "./data/protocol.h"
DEFINED SYMBOLS
                            *ABS*:00000000 data.c
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:20     .text.data_cmd:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:25     .text.data_cmd:00000000 data_cmd
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:60     .text.data_cmd:0000001a $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:66     .text.data_cmd:00000020 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:113    .text.data_cmd:00000054 $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:125    .text.Data_Init:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:130    .text.Data_Init:00000000 Data_Init
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:213    .text.Data_Init:0000005a $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:227    .text.Data_Init:00000068 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:462    .text.Data_Init:00000178 $d
                            *COM*:00000001 BD_disable
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:471    .text.DataCJgetValue:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:476    .text.DataCJgetValue:00000000 DataCJgetValue
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:628    .text.DataCJgetValue:00000098 $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:633    .text.DataCJ_Task:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:638    .text.DataCJ_Task:00000000 DataCJ_Task
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:686    .text.DataCJ_Task:0000002a $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:692    .text.DataCJ_Task:00000030 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:803    .text.DataCJ_Task:000000c8 $d
                            *COM*:00000004 wValue
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:810    .text.Data_PD:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:815    .text.Data_PD:00000000 Data_PD
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:918    .text.Data_PD:0000006e $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:924    .text.Data_PD:00000074 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1237   .text.Data_PD:000001fc $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1246   .text.Data_Trans:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1251   .text.Data_Trans:00000000 Data_Trans
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1414   .text.Data_Trans:000000de $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1418   .text.Data_Trans:000000e2 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1618   .text.Data_Trans:000001f4 $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1628   .text.GetObjName:00000000 $t
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1633   .text.GetObjName:00000000 GetObjName
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1678   .text.GetObjName:00000020 $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1752   .shell:00000000 cmd_data
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1694   .rodata:00000000 OBJname
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1813   .noinit:00000100 MKState
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1809   .noinit:00000000 data
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1690   .rodata:00000000 $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1742   .rodata:00000078 help_data
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1746   .rodata:0000007d name_data
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1749   .shell:00000000 $d
C:\Users\beyond\AppData\Local\Temp\ccCOsY7Q.s:1804   .noinit:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
dbg_print
__gnu_thumb1_case_uqi
pUsrCfg
__aeabi_idiv
OSTimeDly
ADC_Enable
ADC_Flag
ADC_GetExt
shellSort16
createWJZ
GetValueVD
GetValueWV
GetValueV
WValue
GZ_Trans
